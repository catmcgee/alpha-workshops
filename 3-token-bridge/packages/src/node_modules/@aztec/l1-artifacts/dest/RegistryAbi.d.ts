/**
 * Registry ABI.
 */
export declare const RegistryAbi: readonly [{
    readonly type: "constructor";
    readonly inputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly name: "getCurrentSnapshot";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "tuple";
        readonly internalType: "struct DataStructures.RegistrySnapshot";
        readonly components: readonly [{
            readonly name: "rollup";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "inbox";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "outbox";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "blockNumber";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getInbox";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "contract IInbox";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getOutbox";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "contract IOutbox";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getRollup";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "address";
        readonly internalType: "contract IRollup";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getSnapshot";
    readonly inputs: readonly [{
        readonly name: "_version";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "tuple";
        readonly internalType: "struct DataStructures.RegistrySnapshot";
        readonly components: readonly [{
            readonly name: "rollup";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "inbox";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "outbox";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "blockNumber";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "getVersionFor";
    readonly inputs: readonly [{
        readonly name: "_rollup";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "numberOfVersions";
    readonly inputs: readonly [];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly name: "upgrade";
    readonly inputs: readonly [{
        readonly name: "_rollup";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "_inbox";
        readonly type: "address";
        readonly internalType: "address";
    }, {
        readonly name: "_outbox";
        readonly type: "address";
        readonly internalType: "address";
    }];
    readonly outputs: readonly [{
        readonly name: "";
        readonly type: "uint256";
        readonly internalType: "uint256";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "error";
    readonly name: "Registry__RollupAlreadyRegistered";
    readonly inputs: readonly [{
        readonly name: "rollup";
        readonly type: "address";
        readonly internalType: "address";
    }];
}, {
    readonly type: "error";
    readonly name: "Registry__RollupNotRegistered";
    readonly inputs: readonly [{
        readonly name: "rollup";
        readonly type: "address";
        readonly internalType: "address";
    }];
}];
//# sourceMappingURL=RegistryAbi.d.ts.map