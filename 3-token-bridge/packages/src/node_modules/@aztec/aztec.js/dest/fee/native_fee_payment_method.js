var _NativeFeePaymentMethod_gasTokenAddress;
import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
import { FunctionData } from '@aztec/circuits.js';
import { FunctionSelector } from '@aztec/foundation/abi';
import { getCanonicalGasTokenAddress } from '@aztec/protocol-contracts/gas-token';
/**
 * Pay fee directly in the native gas token.
 */
export class NativeFeePaymentMethod {
    constructor(canonicalGasTokenAddress) {
        _NativeFeePaymentMethod_gasTokenAddress.set(this, void 0);
        __classPrivateFieldSet(this, _NativeFeePaymentMethod_gasTokenAddress, canonicalGasTokenAddress, "f");
    }
    static async create(wallet) {
        const nodeInfo = await wallet.getNodeInfo();
        return new NativeFeePaymentMethod(getCanonicalGasTokenAddress(nodeInfo.l1ContractAddresses.gasPortalAddress));
    }
    /**
     * Gets the native gas asset used to pay the fee.
     * @returns The asset used to pay the fee.
     */
    getAsset() {
        return __classPrivateFieldGet(this, _NativeFeePaymentMethod_gasTokenAddress, "f");
    }
    /**
     * The contract responsible for fee payment. This will be the same as the asset.
     * @returns The contract address responsible for holding the fee payment.
     */
    getPaymentContract() {
        return __classPrivateFieldGet(this, _NativeFeePaymentMethod_gasTokenAddress, "f");
    }
    /**
     * Fee payments in the native gas token are always public.
     * @returns false
     */
    isPrivateFeePayment() {
        return false;
    }
    /**
     * Creates a function call to pay the fee in gas token..
     * @param feeLimit - The maximum fee to be paid in gas token.
     * @returns A function call
     */
    getFunctionCalls(feeLimit) {
        return Promise.resolve([
            {
                to: __classPrivateFieldGet(this, _NativeFeePaymentMethod_gasTokenAddress, "f"),
                functionData: new FunctionData(FunctionSelector.fromSignature('pay_fee(Field)'), false),
                args: [feeLimit],
            },
        ]);
    }
}
_NativeFeePaymentMethod_gasTokenAddress = new WeakMap();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlX2ZlZV9wYXltZW50X21ldGhvZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mZWUvbmF0aXZlX2ZlZV9wYXltZW50X21ldGhvZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLE9BQU8sRUFBcUIsWUFBWSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDckUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFekQsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFLbEY7O0dBRUc7QUFDSCxNQUFNLE9BQU8sc0JBQXNCO0lBR2pDLFlBQW9CLHdCQUFzQztRQUYxRCwwREFBK0I7UUFHN0IsdUJBQUEsSUFBSSwyQ0FBb0Isd0JBQXdCLE1BQUEsQ0FBQztJQUNuRCxDQUFDO0lBRUQsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBYztRQUNoQyxNQUFNLFFBQVEsR0FBRyxNQUFNLE1BQU0sQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUM1QyxPQUFPLElBQUksc0JBQXNCLENBQUMsMkJBQTJCLENBQUMsUUFBUSxDQUFDLG1CQUFtQixDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQztJQUNoSCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsUUFBUTtRQUNOLE9BQU8sdUJBQUEsSUFBSSwrQ0FBaUIsQ0FBQztJQUMvQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsa0JBQWtCO1FBQ2hCLE9BQU8sdUJBQUEsSUFBSSwrQ0FBaUIsQ0FBQztJQUMvQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsbUJBQW1CO1FBQ2pCLE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxnQkFBZ0IsQ0FBQyxRQUFZO1FBQzNCLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQztZQUNyQjtnQkFDRSxFQUFFLEVBQUUsdUJBQUEsSUFBSSwrQ0FBaUI7Z0JBQ3pCLFlBQVksRUFBRSxJQUFJLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxLQUFLLENBQUM7Z0JBQ3ZGLElBQUksRUFBRSxDQUFDLFFBQVEsQ0FBQzthQUNqQjtTQUNGLENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRiJ9