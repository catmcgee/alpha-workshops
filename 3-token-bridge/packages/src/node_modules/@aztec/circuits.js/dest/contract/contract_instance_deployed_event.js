import { AztecAddress } from '@aztec/foundation/aztec-address';
import { toBigIntBE } from '@aztec/foundation/bigint-buffer';
import { EthAddress } from '@aztec/foundation/eth-address';
import { Fr } from '@aztec/foundation/fields';
import { BufferReader } from '@aztec/foundation/serialize';
import { DEPLOYER_CONTRACT_ADDRESS, DEPLOYER_CONTRACT_INSTANCE_DEPLOYED_MAGIC_VALUE } from '../constants.gen.js';
/** Event emitted from the ContractInstanceDeployer. */
export class ContractInstanceDeployedEvent {
    constructor(address, version, salt, contractClassId, initializationHash, portalContractAddress, publicKeysHash, deployer) {
        this.address = address;
        this.version = version;
        this.salt = salt;
        this.contractClassId = contractClassId;
        this.initializationHash = initializationHash;
        this.portalContractAddress = portalContractAddress;
        this.publicKeysHash = publicKeysHash;
        this.deployer = deployer;
    }
    static isContractInstanceDeployedEvent(log) {
        return toBigIntBE(log.subarray(0, 32)) == DEPLOYER_CONTRACT_INSTANCE_DEPLOYED_MAGIC_VALUE;
    }
    static fromLogs(logs) {
        return logs
            .filter(log => ContractInstanceDeployedEvent.isContractInstanceDeployedEvent(log.data))
            .filter(log => log.contractAddress.equals(AztecAddress.fromBigInt(DEPLOYER_CONTRACT_ADDRESS)))
            .map(log => ContractInstanceDeployedEvent.fromLogData(log.data));
    }
    static fromLogData(log) {
        if (!this.isContractInstanceDeployedEvent(log)) {
            const magicValue = DEPLOYER_CONTRACT_INSTANCE_DEPLOYED_MAGIC_VALUE.toString(16);
            throw new Error(`Log data for ContractInstanceDeployedEvent is not prefixed with magic value 0x${magicValue}`);
        }
        const reader = new BufferReader(log.subarray(32));
        const address = reader.readObject(AztecAddress);
        const version = reader.readObject(Fr).toNumber();
        const salt = reader.readObject(Fr);
        const contractClassId = reader.readObject(Fr);
        const initializationHash = reader.readObject(Fr);
        const portalContractAddress = EthAddress.fromField(reader.readObject(Fr));
        const publicKeysHash = reader.readObject(Fr);
        const deployer = reader.readObject(AztecAddress);
        return new ContractInstanceDeployedEvent(address, version, salt, contractClassId, initializationHash, portalContractAddress, publicKeysHash, deployer);
    }
    toContractInstance() {
        if (this.version !== 1) {
            throw new Error(`Unexpected contract instance version ${this.version}`);
        }
        return {
            address: this.address,
            version: this.version,
            contractClassId: this.contractClassId,
            initializationHash: this.initializationHash,
            portalContractAddress: this.portalContractAddress,
            publicKeysHash: this.publicKeysHash,
            salt: this.salt,
            deployer: this.deployer,
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJhY3RfaW5zdGFuY2VfZGVwbG95ZWRfZXZlbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29udHJhY3QvY29udHJhY3RfaW5zdGFuY2VfZGVwbG95ZWRfZXZlbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQy9ELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUM3RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDM0QsT0FBTyxFQUFFLEVBQUUsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUczRCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsK0NBQStDLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUVqSCx1REFBdUQ7QUFDdkQsTUFBTSxPQUFPLDZCQUE2QjtJQUN4QyxZQUNrQixPQUFxQixFQUNyQixPQUFlLEVBQ2YsSUFBUSxFQUNSLGVBQW1CLEVBQ25CLGtCQUFzQixFQUN0QixxQkFBaUMsRUFDakMsY0FBa0IsRUFDbEIsUUFBc0I7UUFQdEIsWUFBTyxHQUFQLE9BQU8sQ0FBYztRQUNyQixZQUFPLEdBQVAsT0FBTyxDQUFRO1FBQ2YsU0FBSSxHQUFKLElBQUksQ0FBSTtRQUNSLG9CQUFlLEdBQWYsZUFBZSxDQUFJO1FBQ25CLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBSTtRQUN0QiwwQkFBcUIsR0FBckIscUJBQXFCLENBQVk7UUFDakMsbUJBQWMsR0FBZCxjQUFjLENBQUk7UUFDbEIsYUFBUSxHQUFSLFFBQVEsQ0FBYztJQUNyQyxDQUFDO0lBRUosTUFBTSxDQUFDLCtCQUErQixDQUFDLEdBQVc7UUFDaEQsT0FBTyxVQUFVLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMs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