/// <reference types="node" resolution-mode="require"/>
import { BufferReader, Tuple } from '@aztec/foundation/serialize';
import { MAX_NOTE_HASH_READ_REQUESTS_PER_TX, MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_TX, MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_TX, MAX_NULLIFIER_READ_REQUESTS_PER_TX, MAX_PUBLIC_DATA_READS_PER_TX } from '../constants.gen.js';
import { NullifierKeyValidationRequestContext } from './nullifier_key_validation_request.js';
import { PublicDataRead } from './public_data_read_request.js';
import { ReadRequestContext } from './read_request.js';
import { SideEffect } from './side_effects.js';
/**
 * Validation requests accumulated during the execution of the transaction.
 */
export declare class ValidationRequests {
    /**
     * All the read requests made in this transaction.
     */
    noteHashReadRequests: Tuple<SideEffect, typeof MAX_NOTE_HASH_READ_REQUESTS_PER_TX>;
    /**
     * All the nullifier read requests made in this transaction.
     */
    nullifierReadRequests: Tuple<ReadRequestContext, typeof MAX_NULLIFIER_READ_REQUESTS_PER_TX>;
    /**
     * The nullifier read requests made in this transaction.
     */
    nullifierNonExistentReadRequests: Tuple<ReadRequestContext, typeof MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_TX>;
    /**
     * All the nullifier key validation requests made in this transaction.
     */
    nullifierKeyValidationRequests: Tuple<NullifierKeyValidationRequestContext, typeof MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_TX>;
    /**
     * All the public data reads made in this transaction.
     */
    publicDataReads: Tuple<PublicDataRead, typeof MAX_PUBLIC_DATA_READS_PER_TX>;
    constructor(
    /**
     * All the read requests made in this transaction.
     */
    noteHashReadRequests: Tuple<SideEffect, typeof MAX_NOTE_HASH_READ_REQUESTS_PER_TX>, 
    /**
     * All the nullifier read requests made in this transaction.
     */
    nullifierReadRequests: Tuple<ReadRequestContext, typeof MAX_NULLIFIER_READ_REQUESTS_PER_TX>, 
    /**
     * The nullifier read requests made in this transaction.
     */
    nullifierNonExistentReadRequests: Tuple<ReadRequestContext, typeof MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_TX>, 
    /**
     * All the nullifier key validation requests made in this transaction.
     */
    nullifierKeyValidationRequests: Tuple<NullifierKeyValidationRequestContext, typeof MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_TX>, 
    /**
     * All the public data reads made in this transaction.
     */
    publicDataReads: Tuple<PublicDataRead, typeof MAX_PUBLIC_DATA_READS_PER_TX>);
    toBuffer(): Buffer;
    toString(): string;
    /**
     * Deserializes from a buffer or reader, corresponding to a write in cpp.
     * @param buffer - Buffer or reader to read from.
     * @returns Deserialized object.
     */
    static fromBuffer(buffer: Buffer | BufferReader): ValidationRequests;
    /**
     * Deserializes from a string, corresponding to a write in cpp.
     * @param str - String to read from.
     * @returns Deserialized object.
     */
    static fromString(str: string): ValidationRequests;
    static empty(): ValidationRequests;
}
//# sourceMappingURL=validation_requests.d.ts.map