import { Fr } from '@aztec/foundation/fields';
import { BufferReader, serializeToBuffer } from '@aztec/foundation/serialize';
/**
 * Write operations on the public data tree including the previous value.
 */
export class PublicDataUpdateRequest {
    constructor(
    /**
     * Index of the leaf in the public data tree which is to be updated.
     */
    leafSlot, 
    /**
     * New value of the leaf.
     */
    newValue, 
    /**
     * Optional side effect counter tracking position of this event in tx execution.
     */
    sideEffectCounter) {
        this.leafSlot = leafSlot;
        this.newValue = newValue;
        this.sideEffectCounter = sideEffectCounter;
    }
    static from(args) {
        return new PublicDataUpdateRequest(args.leafIndex, args.newValue);
    }
    toBuffer() {
        return serializeToBuffer(this.leafSlot, this.newValue);
    }
    isEmpty() {
        return this.leafSlot.isZero() && this.newValue.isZero();
    }
    static isEmpty(x) {
        return x.isEmpty();
    }
    equals(other) {
        return this.leafSlot.equals(other.leafSlot) && this.newValue.equals(other.newValue);
    }
    static fromBuffer(buffer) {
        const reader = BufferReader.asReader(buffer);
        return new PublicDataUpdateRequest(Fr.fromBuffer(reader), Fr.fromBuffer(reader));
    }
    static empty() {
        return new PublicDataUpdateRequest(Fr.ZERO, Fr.ZERO);
    }
    toFriendlyJSON() {
        return `Leaf=${this.leafSlot.toFriendlyJSON()}: ${this.newValue.toFriendlyJSON()}`;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2RhdGFfdXBkYXRlX3JlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc3RydWN0cy9wdWJsaWNfZGF0YV91cGRhdGVfcmVxdWVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDOUMsT0FBTyxFQUFFLFlBQVksRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBRTlFOztHQUVHO0FBQ0gsTUFBTSxPQUFPLHVCQUF1QjtJQUNsQztJQUNFOztPQUVHO0lBQ2EsUUFBWTtJQUM1Qjs7T0FFRztJQUNhLFFBQVk7SUFDNUI7O09BRUc7SUFDYSxpQkFBMEI7UUFSMUIsYUFBUSxHQUFSLFFBQVEsQ0FBSTtRQUlaLGFBQVEsR0FBUixRQUFRLENBQUk7UUFJWixzQkFBaUIsR0FBakIsaUJBQWlCLENBQVM7SUFDekMsQ0FBQztJQUVKLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFTWDtRQUNDLE9BQU8sSUFBSSx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNwRSxDQUFDO0lBRUQsUUFBUTtRQUNOLE9BQU8saUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDekQsQ0FBQztJQUVELE9BQU87UUFDTCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUMxRCxDQUFDO0lBRUQsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUEwQjtRQUN2QyxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNyQixDQUFDO0lBRUQsTUFBTSxDQUFDLEtBQThCO1FBQ25DLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN0RixDQUFDO0lBRUQsTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUE2QjtRQUM3QyxNQUFNLE1BQU0sR0FBRyxZQUFZLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdDLE9BQU8sSUFBSSx1QkFBdUIsQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNuRixDQUFDO0lBRUQsTUFBTSxDQUFDLEtBQUs7UUFDVixPQUFPLElBQUksdUJBQXVCLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdkQsQ0FBQztJQUVELGNBQWM7UUFDWixPQUFPLFFBQVEsSUFBSSxDQUFDLFFBQVEsQ0FBQyxjQUFjLEVBQUUsS0FBSyxJQUFJLENBQUMsUUFBUSxDQUFDLGNBQWMsRUFBRSxFQUFFLENBQUM7SUFDckYsQ0FBQztDQUNGIn0=