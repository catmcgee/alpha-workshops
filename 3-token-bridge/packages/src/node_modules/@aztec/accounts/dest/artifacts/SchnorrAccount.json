{ "noir_version": "0.26.0+e42cf0c0c0b842b14927b139d645a9e3d8ea45c8", "name": "SchnorrAccount", "functions": [{ "name": "compute_note_hash_and_nullifier", "is_unconstrained": true, "custom_attributes": [], "abi": { "parameters": [{ "name": "contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] }, "visibility": "private" }, { "name": "nonce", "type": { "kind": "field" }, "visibility": "private" }, { "name": "storage_slot", "type": { "kind": "field" }, "visibility": "private" }, { "name": "note_type_id", "type": { "kind": "field" }, "visibility": "private" }, { "name": "serialized_note", "type": { "kind": "array", "length": 20, "type": { "kind": "field" } }, "visibility": "private" }], "param_witnesses": { "contract_address": [{ "start": 0, "end": 1 }], "nonce": [{ "start": 1, "end": 2 }], "note_type_id": [{ "start": 3, "end": 4 }], "serialized_note": [{ "start": 4, "end": 24 }], "storage_slot": [{ "start": 2, "end": 3 }] }, "return_type": { "abi_type": { "kind": "array", "length": 4, "type": { "kind": "field" } }, "visibility": "public" }, "return_witnesses": [24, 25, 26, 27] }, "bytecode": "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", "debug_symbols": "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" }, { "name": "spend_private_authwit", "is_unconstrained": false, "custom_attributes": ["aztec(private)"], "abi": { "parameters": [{ "name": "inputs", "type": { "kind": "struct", "path": "authwit::aztec::context::inputs::private_context_inputs::PrivateContextInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "historical_header", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_effects_hash", "type": { "kind": "field" } }, { "name": "in_hash", "type": { "kind": "field" } }, { "name": "out_hash", "type": { "kind": "field" } }] } }, { "name": "state", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "integer", "sign": "unsigned", "width": 64 } }, { "name": "coinbase", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "private_global_variables", "type": { "kind": "struct", "path": "authwit::aztec::context::globals::private_global_variables::PrivateGlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }] } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] }, "visibility": "private" }, { "name": "inner_hash", "type": { "kind": "field" }, "visibility": "private" }], "param_witnesses": { "inner_hash": [{ "start": 30, "end": 31 }], "inputs": [{ "start": 0, "end": 30 }] }, "return_type": { "abi_type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "args_hash", "type": { "kind": "field" } }, { "name": "return_values", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "min_revertible_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "max_block_number", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::max_block_number::MaxBlockNumber", "fields": [{ "name": "_opt", "type": { "kind": "struct", "path": "std::option::Option", "fields": [{ "name": "_is_some", "type": { "kind": "boolean" } }, { "name": "_value", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }, { "name": "note_hash_read_requests", "type": { "kind": "array", "length": 32, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "nullifier_read_requests", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::read_request::ReadRequest", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "nullifier_key_validation_requests", "type": { "kind": "array", "length": 1, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest", "fields": [{ "name": "public_key", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::grumpkin_point::GrumpkinPoint", "fields": [{ "name": "x", "type": { "kind": "field" } }, { "name": "y", "type": { "kind": "field" } }] } }, { "name": "secret_key", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey", "fields": [{ "name": "high", "type": { "kind": "field" } }, { "name": "low", "type": { "kind": "field" } }] } }] } } }, { "name": "new_note_hashes", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_nullifiers", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "note_hash", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "private_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "public_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "new_l2_to_l1_msgs", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message", "fields": [{ "name": "recipient", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "content", "type": { "kind": "field" } }] } } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "end_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "encrypted_logs_hash", "type": { "kind": "field" } }, { "name": "unencrypted_logs_hash", "type": { "kind": "field" } }, { "name": "encrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "unencrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "historical_header", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_effects_hash", "type": { "kind": "field" } }, { "name": "in_hash", "type": { "kind": "field" } }, { "name": "out_hash", "type": { "kind": "field" } }] } }, { "name": "state", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "integer", "sign": "unsigned", "width": 64 } }, { "name": "coinbase", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }] }, "visibility": "public" }, "return_witnesses": [688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894] }, "bytecode": "", "debug_symbols": "" }, { "name": "entrypoint", "is_unconstrained": false, "custom_attributes": ["aztec(private)"], "abi": { "parameters": [{ "name": "inputs", "type": { "kind": "struct", "path": "authwit::aztec::context::inputs::private_context_inputs::PrivateContextInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "historical_header", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_effects_hash", "type": { "kind": "field" } }, { "name": "in_hash", "type": { "kind": "field" } }, { "name": "out_hash", "type": { "kind": "field" } }] } }, { "name": "state", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "integer", "sign": "unsigned", "width": 64 } }, { "name": "coinbase", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "private_global_variables", "type": { "kind": "struct", "path": "authwit::aztec::context::globals::private_global_variables::PrivateGlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }] } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] }, "visibility": "private" }, { "name": "app_payload", "type": { "kind": "struct", "path": "authwit::entrypoint::app::AppPayload", "fields": [{ "name": "function_calls", "type": { "kind": "array", "length": 4, "type": { "kind": "struct", "path": "authwit::entrypoint::function_call::FunctionCall", "fields": [{ "name": "args_hash", "type": { "kind": "field" } }, { "name": "function_selector", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "target_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "is_public", "type": { "kind": "boolean" } }] } } }, { "name": "nonce", "type": { "kind": "field" } }] }, "visibility": "public" }, { "name": "fee_payload", "type": { "kind": "struct", "path": "authwit::entrypoint::fee::FeePayload", "fields": [{ "name": "function_calls", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "authwit::entrypoint::function_call::FunctionCall", "fields": [{ "name": "args_hash", "type": { "kind": "field" } }, { "name": "function_selector", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "target_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "is_public", "type": { "kind": "boolean" } }] } } }, { "name": "nonce", "type": { "kind": "field" } }] }, "visibility": "public" }], "param_witnesses": { "app_payload": [{ "start": 30, "end": 47 }], "fee_payload": [{ "start": 47, "end": 56 }], "inputs": [{ "start": 0, "end": 30 }] }, "return_type": { "abi_type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "args_hash", "type": { "kind": "field" } }, { "name": "return_values", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "min_revertible_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "max_block_number", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::max_block_number::MaxBlockNumber", "fields": [{ "name": "_opt", "type": { "kind": "struct", "path": "std::option::Option", "fields": [{ "name": "_is_some", "type": { "kind": "boolean" } }, { "name": "_value", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }, { "name": "note_hash_read_requests", "type": { "kind": "array", "length": 32, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "nullifier_read_requests", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::read_request::ReadRequest", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "nullifier_key_validation_requests", "type": { "kind": "array", "length": 1, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest", "fields": [{ "name": "public_key", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::grumpkin_point::GrumpkinPoint", "fields": [{ "name": "x", "type": { "kind": "field" } }, { "name": "y", "type": { "kind": "field" } }] } }, { "name": "secret_key", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey", "fields": [{ "name": "high", "type": { "kind": "field" } }, { "name": "low", "type": { "kind": "field" } }] } }] } } }, { "name": "new_note_hashes", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_nullifiers", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "note_hash", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "private_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "public_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "new_l2_to_l1_msgs", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message", "fields": [{ "name": "recipient", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "content", "type": { "kind": "field" } }] } } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "end_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "encrypted_logs_hash", "type": { "kind": "field" } }, { "name": "unencrypted_logs_hash", "type": { "kind": "field" } }, { "name": "encrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "unencrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "historical_header", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_effects_hash", "type": { "kind": "field" } }, { "name": "in_hash", "type": { "kind": "field" } }, { "name": "out_hash", "type": { "kind": "field" } }] } }, { "name": "state", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "integer", "sign": "unsigned", "width": 64 } }, { "name": "coinbase", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }] }, "visibility": "public" }, "return_witnesses": [6632, 6633, 6634, 6635, 6636, 6637, 6638, 6639, 6640, 6641, 6642, 6643, 6644, 6645, 6646, 6647, 6648, 6649, 6650, 6651, 6652, 6653, 6654, 6655, 6656, 6657, 6658, 6659, 6660, 6661, 6662, 6663, 6664, 6665, 6666, 6667, 6668, 6669, 6670, 6671, 6672, 6673, 6674, 6675, 6676, 6677, 6678, 6679, 6680, 6681, 6682, 6683, 6684, 6685, 6686, 6687, 6688, 6689, 6690, 6691, 6692, 6693, 6694, 6695, 6696, 6697, 6698, 6699, 6700, 6701, 6702, 6703, 6704, 6705, 6706, 6707, 6708, 6709, 6710, 6711, 6712, 6713, 6714, 6715, 6716, 6717, 6718, 6719, 6720, 6721, 6722, 6723, 6724, 6725, 6726, 6727, 6728, 6729, 6730, 6731, 6732, 6733, 6734, 6735, 6736, 6737, 6738, 6739, 6740, 6741, 6742, 6743, 6744, 6745, 6746, 6747, 6748, 6749, 6750, 6751, 6752, 6753, 6754, 6755, 6756, 6757, 6758, 6759, 6760, 6761, 6762, 6763, 6764, 6765, 6766, 6767, 6768, 6769, 6770, 6771, 6772, 6773, 6774, 6775, 6776, 6777, 6778, 6779, 6780, 6781, 6782, 6783, 6784, 6785, 6786, 6787, 6788, 6789, 6790, 6791, 6792, 6793, 6794, 6795, 6796, 6797, 6798, 6799, 6800, 6801, 6802, 6803, 6804, 6805, 6806, 6807, 6808, 6809, 6810, 6811, 6812, 6813, 6814, 6815, 6816, 6817, 6818, 6819, 6820, 6821, 6822, 6823, 6824, 6825, 6826, 6827, 6828, 6829, 6830, 6831, 6832, 6833, 6834, 6835, 6836, 6837, 6838] }, "bytecode": "", "debug_symbols": "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hpI31x+8/7bg/bcF778teP9twftvD95/e/D+24P33x68//qfwv7m+oP33x68//bg/bcH7789eP8dwfvvCN5/R/D+O4L3X/+TZt9cf/D+O4L33xG8/47g/XcE778zeP+dwfvvDN5/Z/D+63924JvrD95/Z/D+O4P33xm8/87Y/bdssftv2WL337LF7r9li91/yxa7/5Ytdn6WLXh+Bt/fL8H390vw/f0SfH+/BN/fL8H390vw/f0SfH+/BN/fL8H390vw/f0SfH+/BN/fL8H390vw/f0SfH+/BN/fL8H390vw/f0SfH+/BN/fL8H390vw/f0SfH+/BN/fL8H390vw/f0SfH+/BN/fL8H390vw/f0SfH+/BN/fL8H390vw/f0SfH+/BN/fL8H390vw/f0SfH+/BN/fL8H390vw/f0SfH+/BN/fL8H390vw/f0SfH+/BN/fL8H390vw/f0SfH+/BN/fL8H390vw/f0SfH+/BN/fL8H390vw/f0SfH+/BN/fL8H390vw/f0SfH+/BN/fL8H390vw/f0SfH+/BN/fL8H390vw/f0SfH+/BN/fL8H390vw/f0SfH+/BN/fL8H39y34/r4F39+34Pv7Fnx/37bY/de22P3Xttj917bY/dfYz3+4/IFur//SrL7WT95/V/Un8v67rD94/03B+28K3n9T8PxMsf3FUnB/CX5+iAU/P8SCnx9i5Pv7uc56/dK5ffra497LW74261bq/tLy80m5f1Le+aTcP1PvfNJ3/PSlMvYfkdoWT5rK/qVzttuL733lNur1QdtMt5+9vF1/+N7RfFIvO81tPC7/x3lxP1/8Y/V29aVn28Njzk/fA/Pel+7p+g1TuqX9xSmnj4d9y0kDYR42HelhbewPO+svD3vnJ6TmK5rLT5PdQZOF5ndoitD8Do2dF02/vjq1VO6gqQdCM8q1ZZbRbYEm97L/dqa3zzF8r+yxP+Lc6uK1aX+HPtPIM/9Nm3/LGRcneIPmbYrcUlu8eE29n5d67zv1ab+A/EAzhOZ3aI40kr8XTT3STPtnaMa0/UtnW/WONPccy6WzdqV6pDmc5u18bw+rRxKC73yPsl1fncryx8jG9ceomr38Fp12+v5xeOFeSJ/L7JplN7xSD5Khp53sed78Nyfuaa3hW99RYD6f1nX+8A2t+6tTnWWFvV2fsef68lt0XueKMuW0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eP+twftvDd5/a/D+24L33xa8/7bg/bcF77/uty2+u/7g/bcF778teP9twftvC95/e/D+24P33x68//bg/df9Rql31x+8//bg/bcH7789eP/twfvvCN5/R/D+O4L33xG8/7rfmvHu+oP33xG8/47g/XcE778jeP+dwfvvDN5/Z/D+O4P3X/eTwd9df/D+O4P33xm8/87g/XeG7r9920L330v9ofvvpf7Q/fdSf+j+e6k/dP+91B+6/17qD91/L/WH7r+X+kP330v9wftvCt5/U/D+m4L33xS8/7qfH/ju+oP33xS8/6bg/TcF778peP/NwftvDt5/c/D+m4P3X/ez6d5df/D+m4P33xy8/+bg/TcH778leP8twftvCd5/S/D+637u2bvrj91/s8XOn2yx8ydb7PzJFjt/ssXOn2zR8yf2/J9jn/9zqT/2/J9jn//Tc+zzfy71B++/sc//udQfvP/GPv/nUn/w/hv7/J9L/cH7b+zzfy71B++/sc//udQfvP/GPv/nUn/w/hv7/J9L/cH7b+zzfy71B++/sc//udQfvP/GPv/nUn/w/hv7/J9L/cH7b+zzfy71B++/sc//udQfvP/GPv/nUn/w/hv7/J9L/cH7b+zzfy71B++/sc//udQfvP/GPv/nUn/w/hv7/J9L/cH7b+zzfy71B++/sc//udQfvP/GPv/nUn/w/hv7/J9L/cH7b+zzfy71x+6/Jfj5PyX4+T8l+Pk/Jfj5P2WL3X9L8PN/SvDzf0rw839K8PN/SvDzf0rw839K8PN/SvDzf0rw839K8PN/SvDzf0rw839K8PN/SvDzf0rw839K8PN/SvDzf0rw839K8PN/SvDzf0rw838K+/k/pe+vTrZtX+sn77/L+sn777L+4P03+Pk/Jfj5PyX4+T8l+Pk/Jfj5P7XEzp8a/PyfGvz8n0q+/57rrLcvbflz/V9f3vL1S7dS95eWn0/KPam+80m5Z9p3Pqn/9LvZ/qVLWf309dsP32j7i5P1n+WP2OXP0OVzr66nMWraC9n6+BLd3Kvrl//4bHshlz65+DEv4/pj/qmMVNKd11q+1mxmv7z2gwv1SArkYuJylwv1YADkQj1GALlQ/8oNyIX6V3nfyaVd51kb6Q4XakXHceE+euFPueS2c8kLLhcR365fObfbI6Z27yv3eX3x2D595ctE+0GRe4qNQvFQ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b3xScnF545OS68Ibn5R8SH/jk9ppnpR8KH3jk5IPg298UvIh7I1PSj4m/dmTzuuJcm2zL096qBnp0ZOOQ81ID5/0UDPSwyc91Iz08EkPNSM9fFI7zZMeakZ6+KSHmpEePumhZqSHT3qaGWmcZkaap5mR5mlmpHmaGWmeZkaadponPc2MNE8zI83TzEjzNDPSPNKM9OhP0Zc/NZ7mSY80Iz1+Uu/JIZf9Kptc+3j8pMlsf9Jk/dOtICP/rN+C11+D19+C19+D1z+C1z9j1+9+tfC760/B68/B6w/ef92vYn13/cH7bwref1Pw/puC998UvP/m4P03B++/OXj/zcH7r/uVdO+uP3j/zcH7bw7ef3Pw/puD998SvP+W4P23BO+/JXj/db+K5931B++/JXj/LcH7bwnef0vw/mvB+68F778WvP9a8P7rfgXBu+sP3n8teP+14P3XgvdfC95/a/D+W4P33xq8/9bg/df96OV31x+8/9bg/bcG7781eP+twftvC95/W/D+24L33xa8/7ofOvnu+oP33xa8/7bg/bcF778teP/twftvD95/e/D+24P3X/dz7d5df/D+24P33x68//bg/bcH778jeP8dwfvvCN5/R/D+635m2rvrD95/R/D+O4L330Hef3tue/2Xv/Z+rZ+8/67qn+T9d1k/ef9d1k/ef0feL2myuX39+Z3k/XdZP3n/nZZv9Y/xtX7y/rusn7z/Luvn7r912/b8qZvdqZ+7/67r5+6/q/rzxt1/69Zu9aev81veuPvvun7u/ruun7v/1rTfmHX53/1O/dz9d10/d/9d18/df2vZ9pvCaml38pO8/5Zx+/m1H1/wn/WT999l/eT9d1U/+flXbWv7z29Lv16r91E/d/9d18/df9vlDxR7/bm3r/Vz9991/dz9d10/d/9txfpef6m/9K97X3tef1qypVtYXSDc/+VS2bMtz9WrH163ncnP4YrDkXseicORey6Kw5F7PgvDkfyctm/lWG8zXJ22eLXdvraZfb5ovPwFdfLp9qDUyWfyg1InN4mDUjdRB1A/sbUBqZ/Y8f6Muu0X5li17UXqJzZCIPUT+yOQ+oltE0ed/AzTo1KXmyKoy00R1OWmCOom6s9Rb/n6m15rI79IXW6KoC43RVCXmyKoy02fpN7rte4fixwr6lva697K/EJdbgqgTn6+d1jqjxOG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76Zj/G46x++mc/xuOsfvpnP8bjrH76Zz/G46x++mc/xuOsfvpnP8birjd1MZv5vK+N1Uxu+mMn43lfG7qYzfTWX8birjt0QdvyXq+C1Rx2+JOn5LVERv47vWzvvblO+8Tf3O27SvvE27fedtELW9+TFN6zi2ztts33mb/Ttvk7/zNpDy1vp8m73zNud33qZ8523qd96mfeNt0u32nbdBPAXeFfje32b7ztvs33mb/J23Ob7zNud33qZ8523qd96mfeVtIJN7DG/znadA+s5TIH3nKZC+8xRI33kKpO88BdJ3ngLpO0+B9J2nwPadp8D2nafA9p2nwPadp8D2nafA9p2nwPadp8D2nafA9p2nwPadp8D+nafA/p2nwP6dp8D+nafA/p2nwP6dp8D+nafA/p2nwP6dp8D+nafA738sT21/vM22b782Nt8v3ccvzeOXHuOXnuOXlpFL6/H/frd06TnKdUs/lx3lcdXvDu3tVWnoqm3oqv3Tq1o7/9/vO2hpj78wtPpzgtnq86o2ctXv+9vbq9LQVdunV6V8vyz9/ieXUtvzup/py628XJcHrzsGrzsHryuD19XB69rYdb//jaQ9B0v/++N4rxf+Mm2mHc/BSa28zCP/9zv+92P8fI53ry9/UtvTy5KSvyVt/pa0+1tSvnJJP29zfOdtzu+8TfnO29TvvE37xttst9t33iZ9522277zN/p23+cdPgftKn2bqVvc3D6Z/f3T7+aNfZ6zk8rKow+Oizu8u6ny++Dz/foT/8trtfL52+/Vxv91K7OXX2MtvoZefbrGXn2Ivf4u9/D328nPs5R+xlx97102xd90Ue9dNsXfdLfauu8XedbfYu+4We9fdYu+6W+xdd4u9626xd90t9q67xd5199i77u74ub+39Oe1e+st3/Fz37J8x0+enPKf1+aXP3r/vXzHTx7L8h0/eQzLz46fPJblO/b7luU79vuW5Tt+7r//a/SWHT/3Lct37Pcty3fs9y3L97zrGpbvedc1LN/zrvt++YfnXdewfM+7rmH5nnddw/Jj77pH7F33iL3rHt/edbunB//92n/3cz2Xcb58gP/1IzFHiS6gRhfQggs4b9EFpOgCtugCdi8CfpaU/S3pn++VKT0afLZ0lDdLSvv++DZD2s+frzOkc3tZ1OlxUeW7iwL/AeCssZffQi+/3GIvP8Ve/hZ7+Xvs5efYyz9iL/+MvfzYu26JveuW2Ltujb3r1ti7bo2969bYu26NvevW2Ltujb3r1ti7bo2969bYu26Lveu22Ltui73rtti77j9vz5i7/Ni7bou967bYu26Lveu20LvufnP83H//Cfn95vi5b1m+4yfP+08J7zfHTx7L8h0/eSzLd/zkMSw/Ofb7luU79vuW5Tt+7r//sNueHD/3LcvPsZfv2O9blu951zUs3/Oua1i+513XsHzPu+775W+ed13D8j3vuoblx951t9i7LqAFZOryv73rfvLR2i0/Pwq5vb765aOQ+3ZGF1CiC6jRBbTgAvZbdAEpuoDNs4Dt9iNg/0vAf7/6Z9JCvb385Hq+iN2ZxGYmsa7dQP35YsSt9+/QtRuwCHDtBiwCXLsBiwDXbsAgILt2AxYBrt2ARYBrN/AiIN06Alzv8BYBrndtiwDPO/HrVxSP3r8BzzuxSYDnndgkwPNObBLgeSe2CDg878QmAZ53YpMAzzux4Zve++F5JzYJ8LwTmwS42Yl/luRmb/1ZEmC3rI932bZ8vFlSOh7zeNORO0uq/pbUvrsk8Oc6AU04U5efYi9/i738Pfbyc+zlH7GXf8Zefom9/Bp7+bF33RJ71y2xd90Se9ctsXddRF/PzOXH3nVL7F23xN51S+xdt8TedWvsXbfG3nVr7F23xt51EX09M5cfe9etsXfdGnvXrbF33Rp7122xd90We9dtsXfdFnvXRfT1zFx+7F23xd51W+xdt8XedVvoXTffQu+6+RZ618230LtuvoXedfMt9K6bb6F33XwLvevmW+hdN99C77r5FnvXTbF33RR7102xd90Ue9dFdFXNXH7sXTfF3nVT7F03xd51U+xdd4u9626xd90t9q67xd51EV1VM5cfe9fdYu+6W+xdd4u9626xd9099q67x95199i77h5710U0SM1cfuxdd4+96+6xd9099q67x951c+xdN8fedXPsXTfH3nURDVAzlx97182xd90ce9fNsXfdHHvXPWLvukfsXfeIvesesXddRNvTzOXH3nWP2LvuEXvXPWLvurG7qXLsbqocu5sqx+6myrG7qXLsbqocu5sqx+6myrG7qXLsbqocu5sqx+6myrG7qXLsbqocu5sqx+6myrG7qXLsbqocu5sqx+6myrG7qXLsbqocu5sqx+6myrG7qXLsbqocu5sq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by9k/e2FrL+9kPW3F7L+9kLW317I+tsLWX97IetvL2T97YWsv72Q9bcXsv72QtbfXsj62wtZf3sh628vZP3thay/vZD1txey/vZC1t9eyPrbC1l/eyHrby9k/e2FrL+9kPW3F7L+9kLW317I+tsLWX97IetvL2T97YWsv72Q9bcXsv72QtbfXsj62wtZf3sh628vZP3thay/vZD1txey/vZC1t9eyPrbC1l/eyHrby9k/e2FrL+9kvW3V7L+9krW317J+tvrLZPp5fJXlay/vZL1t1ey/vZK1t9eyfrbK1l/eyXrb69k/e2VrL+9kvW3V7L+9krW317J+tsrWX97Jetvr2T97ZWsv72S9bdXsv72StbfXsn62ytZf3sl62+vZP3tlay/vZL1t1ey/vZK1t9eyfrbK1l/eyXrb69k/e2VrL+9kvW3V7L+9krW317J+tsrWX97Jetvr2T97ZWsv72S9bdXsv72StbfXsn62ytZf3sl62+vZP3tlay/va7T71239OfF9z/i//WTX9Qus/ta1K7T/XyPPQ+1r6v4W+0yT2aT2mWeyya1yzyVTWqXybwmtcskXpPadfZbi9p19luL2mWyrkXtOk3PJrVUXmqdlmeT2qBe6kVBDq/AsecpaasPBVu+vcvd6WfR223/efX5mrs99zBfotex77lEr2Pnc4lex97nCr2ee5gv0evY/1yi17EDukSvYw90id5MppfMX3nuYb5EL5m/8tzDfIleMn/luYf5Er1k/spzD/Mlesn8lece5kv0kvkrzz3Ml+gl81eee5gv0cvlr5rnHuZL9HL5q+a5h/kSvVz+qt0ymV4uf9U89zBfopfLXzXPPcyX6CXzV557mC/RS+avPPcwX6J3mf3I8M2J5rm1Fq/Wc6fph2rff9qveW40vUDtMs8pk9plUqBJbaZSu0wCNKldZ7+1qF1nv7WoXSb7mdQuk/wsaj33l16glspLee4u/V9qXxQE9UcvCrJjBVt9ftMl5/Iud+dyeyz6SC/raNurXs+u5wq9nn3PFXo9O58r9Hr2Plfo9ex+LtDruV/0Er2eHdAVej17oCv0enZMV+jNZHrJ/JXnftFL9JL5K8/9opfoJfNXnvtFL9FL5q8894teopfMX3nuF71EL5m/Osj8lef+2Ev0kvmrg8xfnWT+ynNH8CV6yfyV557gS/RmMr1k/spz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cLMT/yzJzd76syTAblkf77Jt+XizpHTsj5985M6Sqr8lte8uCfy5TkATztTlp9jL32Ivf4+9/Bx7+Ufs5Z+xl19iL7/GXn7sXbfE3nVL7F23xN51S+xdF9HXM3P5sXfdEnvXLbF33RJ71y2xd90ae9etsXfdGnvXrbF3XURfz8zlx951a+xdt8bedWvsXbfG3nVb7F23xd51W+xdt8XedRF9PTOXH3vXbbF33RZ7122xd90WetfNt9C7br6F3nXzLfSum2+hd918C73r5lvoXTffQu+6+RZ618230LtuvsXedVPsXTfF3nVT7F03xd51EV1VM5cfe9dNsXfdFHvXTbF33RR7191i77pb7F13i73rbrF3XURX1czlx951t9i77hZ7191i77pb7F13j73r7rF33T32rrvH3nURDVIzlx97191j77p77F13j73r7rF33Rx7182xd90ce9fNsXddRAPUzOXH3nVz7F03x951c+xdN8fedY/Yu+4Re9c9Yu+6R+xdF9H2NHP5sXfdI/aue8TedY/Yu27sbqocu5sqx+6myrG7qXLsbqocu5sqx+6myrG7qXLsbqocu5sqx+6myrG7qXLsbqocu5sqx+6myrG7qXLsbqocu5sqx+6myrG7qXLsbqocu5sqx+6myrG7qXLsbqocu5sqx+6myrG7qXLsbqocu5sqx+6myrG7qXLsbqocu5sqx+6myrG7qXLsbqocu5sqx+6myrG7qXLsbqojdjfVEbub6ojdTXXE7qY6bqF33SN2N9URu5vqiN1NdcTupjpid1MdsbupjtjdVEfsbqojdjfVEbub6ojdTXXE7qY6YndTHbG7qY7Y3VRH7G6qI3Y31RG7m+qI3U11xO6mOmJ3Ux2xu6mO2N1UR+xuqiN2N9URu5vqiN1NdcTupjpid1MdsbupjtjdVEfsbqojdjfVEbub6ojdTXXE7qY6YndTHbG7qY7Y3VRH7G6qI3Y31RG7m+qI3U11xO6mOmJ3Ux2xu6mO2N1UR+xuqiN2N9URu5vqiN1NdcTupjpid1MdsbupjtjdVEfsbqojdjfVEbub6ojdTXXE7qY6YndTHbG7qY7Y3VRH7G6qI3Y31RG7m+qI3U11xO6mOmJ3Ux2xu6mO2N1UR+xuqiN2N9URu5vqiN1NdcTupjpid1MdsbupjtjdVEfsbqojdjfVEbub6ojdTXXE7qY6YndTHbG7qY7Y3VRH7G6qI3Y31RG7m+qI3U11xO6mOmJ3Ux2xu6mO2N1UZ+xuqjN2N9UZu5vqjN1Ndd5C77pn7G6qM3Y31Rm7m+qM3U11xu6mOmN3U52xu6nO2N1UZ+xuqjN2N9UZu5vqjN1Ndcbupjpjd1OdsbupztjdVGfsbqozdjfVGbub6ozdTXXG7qY6Y3dTnbG7qc7Y3VRn7G6qM3Y31Rm7m+qM3U11xu6mOmN3U52xu6nO2N1UZ+xuqjN2N9UZu5vqjN1Ndcbupjpjd1OdsbupztjdVGfsbqozdjfVGbub6ozdTXXG7qY6Y3dTnbG7qc7Y3VRn7G6qM3Y31Rm7m+qM3U11xu6mOmN3U52xu6nO2N1UZ+xuqjN2N9UZu5vqjN1Ndcbupjpjd1OdsbupztjdVGfsbqozdjfVGbub6ozdTXXG7qY6Y3dTnbG7qc7Y3VRn7G6qM3Y31Rm7m+qM3U11xu6mOmN3U52xu6nO2N1UZ+xuqjN2N9UZu5vqjN1Ndcbupjpjd1OdsbupztjdVGfsbqozdjfVGbub6ozdTXXG7qY6Y3dTnbG7qUrsbqoSu5uqxO6mKrG7qcot9K5bYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WJ3U1VYndTldjdVCV2N1WN3U1VY3dT1djdVDV2N1W9hd51a+xuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qaqsbupauxuqhq7m6rG7qZqsbupWuxuqha7m6rF7qZqt9C7bovdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1ULXY3VYvdTdVid1O12N1U6Ra7nOq+/tD77n39oTfe+/pD77z39Yfeeu/rD7333tcfevO9rz/07ntff+jt977+4Ptv7Jqq+/qD77+xi6ru6w++/8auqrqvP/j+G7us6r7+4Ptv7Lqq+/qD77+xC6vuqwu+/8aurLqvLvj+G7u06r664Ptv7Nqq++qC77+xi6vuqwu+/8aurrqvP/j+G7u86r7+4Ptv7Pqq+/qD77+xC6zu6w++/8ausLqvP/j+G7vE6r7+4Ptv7Bqr+/qD77+xi6zu6w++/8ausrqvP/j+G7vM6r7+4Ptv7Dqr+/qD77+xC63u6w++/8autLqv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esn8leuZDFfoJfNXrucnXKGXzF+5nnVwhV4yf+V6LsEVesn8lesZAlfoJfNXrvv+r9BL5q92Mn+1k/kr11MprtBL5q/2TKaXzF+5nhByhV4yf+V6mscVesn8levJG1foJfNXrqdkXKGXzF+5nmhxhV4yf+V6+sQVesn8letJEVfoJfNXrqc6XKGXzF+5nsBwhV4yf+V6WsIVesn8levJBlfoJfNXrqcQXKGXzF+5nhhwhV4yf+W63f8KvWT+ynUT/xV6yfyV69b8K/SS+SvXDfdX6CXzV67b6K/QS+avXDfHX6GXzF+5bnm/Qi+Zv3Ld3n6FXjJ/RdbffpL1t59k/e0nWX/7SdbffpL1t59k/e0nWX/7SdbffpL1t59k/e0nWX/7SdbffpL1t59k/e0nWX/7SdbffpL1t59k/e0nWX/7SdbffpL1txey/vZC1t9eyPrbC1l/e7llMr1c/qqQ9bcXsv72QtbfXsj62wtZf3sh628vZP3thay/vZD1txey/vZC1t9eyPrbC1l/eyHrby9k/e2FrL+9kPW3F7L+9kLW317I+tsLWX97IetvL2T97YWsv72Q9bcXsv72QtbfXsj62wtZf3sh628vZP3thay/vZD1txey/vZC1t9eyPrbC1l/eyHrby9k/e2FrL+9kPW3F7L+9kLW317I+tsLWX97IetvL2T97YWsv72Q9bcXsv72QtbfXsj62wtZf3sh628vZP3thay/vZD1txey/vZC1t9eyPrbC1l/eyHrby9k/e2FrL+9kPW3F7L+9kLW317I+tsLWX97IetvL2T97YWsv72Q9bcXsv72QtbfXsj62wtZf3sh628vZP3thay/vZD1txey/vZC1t9eyPrbC1l/eyHrby9k/e2FrL+9kPW3F7L+9kLW317I+tsLWX97Ietvr2T97ZWsv72S9bdXsv72estkern8VSXrb69k/e2VrL+9kvW3V7L+9krW317J+tsrWX97Jetvr2T97ZWsv72S9bdXsv72StbfXsn62ytZf3sl62+vZP3tlay/vZL1t1ey/vZK1t9eyfrbK1l/eyXrb69k/e2VrL+9kvW3V7L+9krW317J+tsrWX97Jetvr2T97ZWsv72S9bdXsv72StbfXsn62ytZf3sl62+vZP3tlay/vZL1t1ey/vZK1t9eyfrbK1l/eyXrb6/r9HvXLf158f2P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38s37Pcly7e86wqWb3nXFSzf8q4rWL7lXff98qPlXVewfMu7rmD5vnfd6HvXVWgBWbr8b++6v/lobUyvj0LG66svH4U8Y/EuoHoX0LwL6M4FnId3AcG7gGhZQDx+BJx/CfjPV/9MWmjH5Se3chF7IolNSGJNu4H288WIY/Tv0LQbkAgw7QYkAky7AYkA025AICCZdgMSAabdgESAaTdwERCOgQDTO7xEgOldWyLA8k58/YpiHv0bsLwTiwRY3olFAizvxCIBlndiiYBseScWCbC8E4sEWN6JBd/0PrPlnVgkwPJOLBJgZif+WZKZvfVnSQq7ZXu+S4wpv1lSyM/5vCGnwZKavSX17y5J+XOdCk04S5cffC8/+l7+6Xv5yffys+/lF9/Lr76X33wv3/euW33vutX3rlt977rV966r0dezcvm+d93qe9etvnfd6nvXrb533eZ7122+d93me9dtvnddjb6elcv3ves237tu873rNt+7bvO963bfu273vet237tu973ravT1rFy+7123+951u+9dt/vedbvrXTcdrnfddLjeddPhetdNh+tdNx2ud910uN510+F6102H6103Ha533XT43nWD7103+N51g+9dN/jedTW6qlYu3/euG3zvusH3rht877rB964bfe+60feuG33vutH3rqvRVbVy+b533eh7142+d93oe9eNvnfd0/eue/redU/fu+7pe9fVaJBauXzfu+7pe9c9fe+6p+9d9/S96ybfu27yvesm37tu8r3rajRArVy+7103+d51k+9dN/nedZPvXTf73nWz7103+951s+9dV6PtaeXyfe+62feum33vutn3ruu7myr57qZKvrupku9uquS7myr57qZKvrupku9uquS7myr57qZKvrupku9uquS7myr57qZKvrupku9uquS7myr57qZKvrupku9uquS7myr57qZKvrupku9uquS7myr57qZKvrupku9uquS7myr57qZKvrupku9uquS7myr57qZKvrupku9uquS7myr57qZKvrupku9uquS7myr77qbKvrupsu9uquy7myofrnfd7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6my726q7LubKvvupsq+u6mK726q4rubqvjupiq+u6nK4XrXLb67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+O6mKr67qYrvbqriu5uq+u6mqr67qarvbqrqu5uqHq533eq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupqu9uquq7m6r67qaqvrupmu9uqua7m6r57qZqvrup2uF6122+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvnupmq+u6ma726q5rubqvvupuq+u6m6726q7rubqh+ud93uu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qbrvbqruu5uq++6m6r67qcLhu5zqsX7X++5j/a433sf6Xe+8j/W73nof63e99z7W73rzfazf9e77WL/r7fexfuf7r++aqsf6ne+/vouqHut3vv/6rqp6rN/5/uu7rOqxfuf7r++6qsf6ne+/vgurHqtzvv/6rqx6rM75/uu7tOqxOuf7r+/aqsfqnO+/vourHqtzvv/6rq56rN/5/uu7vOqxfuf7r+/6qsf6ne+/vgusHut3vv/6rrB6rN/5/uu7xOqxfuf7r+8aq8f6ne+/vousHut3vv/6rrJ6rN/5/uu7zOqxfuf7r+86q8f6ne+/vgutHut3vv/6rrR6rN/5/uu71Oqxfuf7r+9aq8f6ne+/voutHut3vv/6rrZ6rN/5/uu73Oqxfuf7r+96q8f6ne+/vguuHut3vv/6rrh6rN/5/uu75Oqxfuf7r++aq8f6ne+/vouuHut3vv/6rrp6rN/5/uu77Oqxfuf7r++6q8f6ne+/vguvHut3vv/6rrx6rN/5/uu79Oqxfuf7r+/aq8f6ne+/vouvHut3vv/6rr56rN/5/uu7/Oqxfuf7r+/6q8f6fe+/wXn/VXDefxWc918F5/1X4fC9/wbn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZz3XwXn/VfBef9VcN5/FZ33X0Xn/VfRef9VdN5/FQ/f+2903n8VnfdfRef9V9Fy/9LZw5/Xnn24fsPPf9H6DT9/Ukh/XptCHq3f8PNHtH7Dzx/R+g0/f0TrN+z/Res37P8l67fc/5NKfq6/hdH6DT//Res37P9F6zfs/0Xrt7z/StZvef+VrN/y/itZv+X9V7J+y/uvZP2W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utX3rlt977rN967bfO+6zfeu23zvuhp9PSuX73vXbb533eZ7122+d93me9ftvnfd7nvX7b533e5719Xo61m5fN+7bve963bfu273vet217tuOlzvuulwveumw/Wumw7Xu246XO+66XC966bD9a6bDte7bjpc77rp8L3rBt+7bvC96wbfu27wvetqdFWtXL7vXTf43nWD7103+N51g+9dN/redaPvXTf63nWj711Xo6tq5fJ977rR964bfe+60feuG33vuqfvXff0veuevnfd0/euq9EgtXL5vnfd0/eue/redU/fu+7pe9dNvnfd5HvXTb533eR719VogFq5fN+7bvK96ybfu27yvesm37tu9r3rZt+7bva962bfu65G29PK5fvedbPvXTf73nWz713XdzdV8t1NlXx3UyXf3VTJdzdV8t1NlXx3UyXf3VTJdzdV8t1NlXx3UyXf3VTJdzdV8t1NlXx3UyXf3VTJdzdV8t1NlXx3UyXf3VTJdzdV8t1NlXx3UyXf3VTJdzdV8t1NlXx3UyXf3VTJdzdV8t1NlXx3UyXf3VTJdzdV8t1NlXx3UyXf3VTJdzdV8t1NlXx3UyXf3VTJdzdV9t1NlX13U2Xf3VTZdzdVPlzvutl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTZd/dVNl3N1X23U2VfXdTFd/dVMV3N1Xx3U1VfHdTlcP1rlt8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfHdTVV8d1MV391UxXc3VfXdTVV9d1NV391U1Xc3VT1c77rVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13U1Xf3VTVdzdV9d1NVX13UzXf3VTNdzdV891N1Xx3U7XD9a7bfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1Xz3U3VfHdTNd/dVM13N1X33U3VfXdTdd/dVN13N1U/XO+63Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1N1391U3Xc3VffdTdV9d1OFw3c51WP9rvfdx/pdb7yP9bveeR/rd731Ptbveu99rN/15vtYv+vd97F+19vvY/3O91/fNVWP9Tvff30XVT3W73z/9V1V9Vi/8/3Xd1nVY/3O91/fdVWP9Tvff30XVj1W53z/9V1Z9Vid8/3Xd2nVY3XO91/ftVWP1Tnff30XVz1W53z/9V1d9Vi/8/3Xd3nVY/3O91/f9VWP9Tvff30XWD3W73z/9V1h9Vi/8/3Xd4nVY/3O91/fNVaP9Tvff30XWT3W73z/9V1l9Vi/8/3Xd5nVY/3O91/fdVaP9Tvff30XWj3W73z/9V1p9Vi/8/3Xd6nVY/3O91/ftVaP9Tvff30XWz3W73z/9V1t9Vi/8/3Xd7nVY/3O91/f9VaP9Tvff30XXD3W73z/9V1x9Vi/8/3Xd8nVY/3O91/fNVeP9Tvff30XXT3W73z/9V119Vi/8/3Xd9nVY/3O91/fdVeP9Tvff30XXj3W73z/9V15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jq9WWcaPvXVb7K3bYm/dHnvr9thbt8feuj321u2xt26PvXV77K3bY2/dHnvr9thb94i9dY/YW/eIvXWP2Fv379sz5o4fe+sesbfuEXvrHrG37hF6664Px+/7138hvz4cv+9bxo96G/5r/Kin4b/Gj3oZ/mv8qIfh/2/84tjvW8Z37Pct4zt+37/+Y7e1OH7ft4xfY4/v2O9bxve8dQ3je966hvE9b13D+J637vX4i+etaxjf89Y1jB976y6xty6gBWTq+L+9dT/509qlvv8Ucjm/+vSnkOuyRxfQogvo0QUcwQWsj+gCSnQBi2cBy+NbwPpDwH+/+vvSQn+cvnLfT2JXJrGVSaxrN9C/PxjxGP136NoNWAS4dgMWAa7dgEWAazdgEFBduwGLANduwCLAtRs4CSiPgQDXG94iwPXWtgjwvInPH1HcRv8NeN7EJgGeN7FJgOdNbBLgeRNbBGyeN7FJgOdNbBLgeRMbPum9bp43sUmA501sEuBmE3+P5Ga3fo8E2Jb99V2WpW4XI5VtfX3lrQ5G6v5GOn53JPDfdQKacKaOX2KPv8Qef409fo09/hZ7/D32+C32+D32+LG3bou9dVvsrdtib90We+si+npmjh9767bYW7fF3rot9tZtsbduj711e+yt22Nv3R576yL6emaOH3vr9thbt8feuj321u2xt+4Re+sesbfuEXvrHrG3LqKvZ+b4sbfuEXvrHrG37hF76x6ht259hN669RF669ZH6K1bH6G3bn2E3rr1EXrr1kforVsfobdufYTeuvURe+uW2Fu3xN66JfbWLbG3LqKraub4sbduib11S+ytW2Jv3RJ76y6xt+4Se+susbfuEnvrIrqqZo4fe+susbfuEnvrLrG37hJ7666xt+4ae+uusbfuGnvrIhqkZo4fe+uusbfuGnvrrrG37hp769bYW7fG3ro19tatsbcuogFq5vixt26NvXVr7K1bY2/dGnvrbrG37hZ7626xt+4We+si2p5mjh97626xt+4We+tusbdu7G6qGrubqsbupqqxu6lq7G6qGrubqsbupqqxu6lq7G6qGrubqsbupqqxu6lq7G6qGrubqsbupqqxu6lq7G6qGrubqsbupqqxu6lq7G6qGrubqsbupqqxu6lq7G6qGrubqsbupqqxu6lq7G6qGrubqsbupqqxu6lq7G6qGrubqsbupqqxu6lq7G6qGrubqsbupqqxu6lq7G6qLXY31Ra7m2qL3U21xe6m2h6ht+4Wu5tqi91NtcXuptpid1NtsbupttjdVFvsbqotdjfVFrubaovdTbXF7qbaYndTbbG7qbbY3VRb7G6qLXY31Ra7m2qL3U21xe6m2mJ3U22xu6m22N1UW+xuqi12N9UWu5tqi91NtcXuptpid1NtsbupttjdVFvsbqotdjfVFrubaovdTbXF7qbaYndTbbG7qbbY3VRb7G6qLXY31Ra7m2qL3U21xe6m2mJ3U22xu6m22N1UW+xuqi12N9UWu5tqi91NtcXuptpid1NtsbupttjdVFvsbqotdjfVFrubaovdTbXF7qbaYndTbbG7qbbY3VRb7G6qLXY31Ra7m2qL3U21xe6m2mJ3U22xu6m22N1UW+xuqi12N9UWu5tqi91NtcXuptpid1NtsbupttjdVFvsbqotdjfVFrubaovdTbXF7qbaYndTbbG7qbbY3VRb7G6qLXY31Ra7m2qL3U21xe6m2mJ3U22xu6m22N1UW+xuqj12N9Ueu5tqj91NtcfuptofobfuHrubao/dTbXH7qbaY3dT7bG7qfbY3VR77G6qPXY31R67m2qP3U21x+6m2mN3U+2xu6n22N1Ue+xuqj12N9Ueu5tqj91Ntcfuptpjd1Ptsbup9tjdVHvsbqo9djfVHrubao/dTbXH7qbaY3dT7bG7qfbY3VR77G6qPXY31R67m2qP3U21x+6m2mN3U+2xu6n22N1Ue+xuqj12N9Ueu5tqj91Ntcfuptpjd1Ptsbup9tjdVHvsbqo9djfVHrubao/dTbXH7qbaY3dT7bG7qfbY3VR77G6qPXY31R67m2qP3U21x+6m2mN3U+2xu6n22N1Ue+xuqj12N9Ueu5tqj91Ntcfuptpjd1Ptsbup9tjdVHvsbqo9djfVHrubao/dTbXH7qbaY3dT7bG7qfbY3VR77G6qPXY31R67m2qP3U21x+6m2mN3U+2xu6n22N1Ue+xuqj12N9Ueu5tqj91Ntcfuptpjd1Ptsbup9tjdVHvsbqoWu5uqxe6marG7qVrsbqr2CL11W+xuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qZqsbupWuxuqha7m6rF7qbqsbupeuxuqh67m6rH7qbqj9Bbt8fupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qHrubqsfupuqxu6l67G6qI3Y31RG7m+qI3U11xO6mOh6ht+4Ru5vqiN1NdcTupjpid1MdsbupjtjdVEfsbqojdjfVEbub6ojdTXXE7qY6YndTHbG7qY7Y3VRH7G6qI3Y31RG7m+qI3U11xO6mOmJ3Ux2xu6mO2N1UR+xuqiN2N9URu5vqiN1NdcTupjpid1MdsbupjtjdVEfsbqojdjfVEbub6ojdTXXE7qY6YndTHbG7qY7Y3VRH7G6qI3Y31RG7m+qI3U11xO6mOmJ3Ux2xu6mO2N1UR+xuqiN2N9URu5vqiN1NdcTupjpid1MdsbupjtjdVEfsbqojdjfVEbub6ojdTXXE7qY6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7qbaY3dT7bG7qfbY3VR77G6qPXY31R67m2qP3U21x+6m2mN3U+2xu6n22N1Ue+xuqj12N9Ueu5tqj91Ntcfuptpjd1Ptsbup9tjdVHvsbqo9djfVHrubao/dTbXH7qbaY3dT7bG7qfbY3VR77G6qPXY31R67m2qP3U21x+6m2mN3U+2xu6n22N1Ue+xuqj12N9Ueu5tqj91Ntcfuptpjd1Ptsbup9tjdVHvsbqo9djfVHrubao/dTbXH7qbaY3dT7bG7qfbY3VR77G6qPXY31R67m2qP3U21x+6m2mN3U+2xu6n22N1Ue+xuqj12N9Ueu5tqj91Ntcfuptpjd1Ptsbup9tjdVHvsbqo9djfVHrubao/dTbXH7qbaY3dT7bG7qfbY3VQtdjdVi91N1WJ3U7XY3VTtEXrrttjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VYndTtdjdVC12N1WL3U3VY3dT9djdVD12N1WP3U3VH6G3bo/dTdVjd1P12N1UPXY3VY/dTdVjd1P12N1UPXY3VY/dTdVjd1P12N1UPXY3VY/dTdVjd1P12N1UPXY3VY/dTdVjd1P12N1UPXY3VY/dTdVjd1P12N1UPXY3VY/dTdVjd1P12N1UPXY3VY/dTdVjd1P12N1UPXY3VY/dTdVjd1P12N1UPXY3VY/dTdVjd1P12N1UPXY3VY/dTdVjd1P12N1UPXY3VY/dTdVjd1P12N1UPXY3VY/dTdVjd1P12N1UPXY3VY/dTdVjd1P12N1UPXY3VY/d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/vzwRn7DMfHv1B+l37d/LpnK9/i5ZCrf+aeSKf2+/XPJVHaJc8lU9o5zyVR2lHPJhMkMyFR+jnQuGTvwiIykAye+Dfco/b79c8lIOnCGTOn37Z9LRtKBE9/wepR+3/65ZCQdOEUmTGZARtKBU2QkHThFRtOBE393UPp9++eS0XTgBJnS79s/l4yoAyfIiDpwgoyoAyfIhMkMyIg6cIKMqAMnyNiBR2TswCMyduABmdLv2z+XjB14RMYOPCJjBx6RCZMZkLEDj8jYgUdk7MAjMnbgERk78IBM6a2Kc8nYgUdk7MAjMnbgEZkwmQEZO/CIjB14RMYOPCJjBx6RsQMPyJTeGDmXjB14RMYOPCJjBx6RCZMZkLEDj8j80T4Df3PtD1/YgM//h29m0OdfJj//Ovn5r5OfPyY//23y898nP/9j8vNPfv/uhe/fxDdSt0vh+zd1/sL3b+r8he/f1PkL37+Jb71tl8L3b+r8he/f1PkL37+p8xe+f1PnL3z/ps5f+f49fv6wLZXv38z5K9+/mfNXvn8z5y99/ybOX/r+TZy/9P2bOH/p+zdx/tL3b+L8pe/fxPknv3/Xye/fdfL7d538/l0nv3/Xye/fdfL7d538/l0nv3/Xye/fdfL79zr5/Xud/P69Tn7/Xie/f//w93jT55/8/r1Ofv9eJ79/r5Pfv9fJ79+Y/P6Nye/fmPz+jcnv3z/8HcL0+Se/f2Py+zcmv3+J95Qu6+v8y+0Bnj/x76824m2ip55/nfz818nPH5Of/zb5+e+Tn/8x+fm3yc+/z33+++T3773w/Zv596v3wvdv6vyF79/U+Qvfv6nzF75/M/9+8l74/k2dv/D9mzp/4fs3df7C92/m/I/C92/q/JXv38Tzh0fl+zdz/sr3b+b8le/fzPlL37+J85e+fxPnL33/Js5f+v5NnL/0/Xt8/q30/Zs4/+T37zb5/btNfv8S7yw69fyT37/b5PfvNvn9u01+/26T37/75PfvPvn9u09+/+6T37/E+5dOPf/k9+8++f27T37/7pPfv/vc9+9+mfv+3S9z37/7Ze77d7/Mff/ul7nv3/0y9/27X+a+f/fL3Pfvfpn7/t0vk9+/wPt/Ll9HWi/bFTx/4t9f7cD7f849f0x+/tvk579Pfv7H5OffJj//Pvf5gff/nHv+ZfLzT37/roXv38S/X92B9/+ce/7C92/q/IXv39T5C9+/iX8/ua+F79/U+Qvfv5nzXwvfv6nzF75/U+cvfP+mzl/5/k08fwDe/3Pu+Svfv5nzV75/M+cvff8mzl/6/k2cv/T9e3z+KH3/Js5f+v5NnL/0/Zs4/+T3L/D+n3PPP/n9G5PfvzH5/RuT378x+f17m/z+vU1+/94mv39vk9+/wPuXzj3/5PfvbfL79zb5/Xub/P69TX7/3ie/f++T37/3ye/f++T3L/D+pXPPP/n9e5/8/r1Pfv/eJ79/75Pfv4/J79/HnPfv87/995/+489/+qd//Zf/fP4//vY//tdf/vmvf/63v/z4r3/9n3/////lf/8P" }, { "name": "approve_public_authwit", "is_unconstrained": true, "custom_attributes": ["aztec(public)", "aztec(internal)"], "abi": { "parameters": [{ "name": "inputs", "type": { "kind": "struct", "path": "authwit::aztec::context::inputs::public_context_inputs::PublicContextInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "historical_header", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_effects_hash", "type": { "kind": "field" } }, { "name": "in_hash", "type": { "kind": "field" } }, { "name": "out_hash", "type": { "kind": "field" } }] } }, { "name": "state", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "integer", "sign": "unsigned", "width": 64 } }, { "name": "coinbase", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "public_global_variables", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "integer", "sign": "unsigned", "width": 64 } }, { "name": "coinbase", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] }, "visibility": "private" }, { "name": "outer_hash", "type": { "kind": "field" }, "visibility": "private" }], "param_witnesses": { "inputs": [{ "start": 0, "end": 34 }], "outer_hash": [{ "start": 34, "end": 35 }] }, "return_type": { "abi_type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "args_hash", "type": { "kind": "field" } }, { "name": "return_values", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "nullifier_read_requests", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::read_request::ReadRequest", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "nullifier_non_existent_read_requests", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::read_request::ReadRequest", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "contract_storage_update_requests", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest", "fields": [{ "name": "storage_slot", "type": { "kind": "field" } }, { "name": "new_value", "type": { "kind": "field" } }] } } }, { "name": "contract_storage_reads", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::contrakt::storage_read::StorageRead", "fields": [{ "name": "storage_slot", "type": { "kind": "field" } }, { "name": "current_value", "type": { "kind": "field" } }] } } }, { "name": "public_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "new_note_hashes", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_nullifiers", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "note_hash", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_l2_to_l1_msgs", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message", "fields": [{ "name": "recipient", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "content", "type": { "kind": "field" } }] } } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "end_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "unencrypted_logs_hash", "type": { "kind": "field" } }, { "name": "unencrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "historical_header", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_effects_hash", "type": { "kind": "field" } }, { "name": "in_hash", "type": { "kind": "field" } }, { "name": "out_hash", "type": { "kind": "field" } }] } }, { "name": "state", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "integer", "sign": "unsigned", "width": 64 } }, { "name": "coinbase", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "prover_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "revert_code", "type": { "kind": "integer", "sign": "unsigned", "width": 8 } }] }, "visibility": "public" }, "return_witnesses": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232] }, "bytecode": "", "debug_symbols": "" }, { "name": "cancel_authwit", "is_unconstrained": false, "custom_attributes": ["aztec(private)", "aztec(internal)"], "abi": { "parameters": [{ "name": "inputs", "type": { "kind": "struct", "path": "authwit::aztec::context::inputs::private_context_inputs::PrivateContextInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "historical_header", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_effects_hash", "type": { "kind": "field" } }, { "name": "in_hash", "type": { "kind": "field" } }, { "name": "out_hash", "type": { "kind": "field" } }] } }, { "name": "state", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "integer", "sign": "unsigned", "width": 64 } }, { "name": "coinbase", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "private_global_variables", "type": { "kind": "struct", "path": "authwit::aztec::context::globals::private_global_variables::PrivateGlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }] } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] }, "visibility": "private" }, { "name": "outer_hash", "type": { "kind": "field" }, "visibility": "private" }], "param_witnesses": { "inputs": [{ "start": 0, "end": 30 }], "outer_hash": [{ "start": 30, "end": 31 }] }, "return_type": { "abi_type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "args_hash", "type": { "kind": "field" } }, { "name": "return_values", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "min_revertible_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "max_block_number", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::max_block_number::MaxBlockNumber", "fields": [{ "name": "_opt", "type": { "kind": "struct", "path": "std::option::Option", "fields": [{ "name": "_is_some", "type": { "kind": "boolean" } }, { "name": "_value", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }, { "name": "note_hash_read_requests", "type": { "kind": "array", "length": 32, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "nullifier_read_requests", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::read_request::ReadRequest", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "nullifier_key_validation_requests", "type": { "kind": "array", "length": 1, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest", "fields": [{ "name": "public_key", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::grumpkin_point::GrumpkinPoint", "fields": [{ "name": "x", "type": { "kind": "field" } }, { "name": "y", "type": { "kind": "field" } }] } }, { "name": "secret_key", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey", "fields": [{ "name": "high", "type": { "kind": "field" } }, { "name": "low", "type": { "kind": "field" } }] } }] } } }, { "name": "new_note_hashes", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_nullifiers", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "note_hash", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "private_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "public_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "new_l2_to_l1_msgs", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message", "fields": [{ "name": "recipient", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "content", "type": { "kind": "field" } }] } } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "end_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "encrypted_logs_hash", "type": { "kind": "field" } }, { "name": "unencrypted_logs_hash", "type": { "kind": "field" } }, { "name": "encrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "unencrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "historical_header", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_effects_hash", "type": { "kind": "field" } }, { "name": "in_hash", "type": { "kind": "field" } }, { "name": "out_hash", "type": { "kind": "field" } }] } }, { "name": "state", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "integer", "sign": "unsigned", "width": 64 } }, { "name": "coinbase", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }] }, "visibility": "public" }, "return_witnesses": [179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385] }, "bytecode": "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", "debug_symbols": "7Z3djttGEoXfRdfGglVd/edXWezFbNYLGDDGQTwJEBh+92gssouOCREZUeRp4VwZAzeHZ74efTxqtd1fT58+//L08vHz85fT+68nkdP7f389ffn16fn1yy8vT7+9nN4P704fnv93/vPbu9P/P376cHqvNXx799M4HUoah6pY8NGDLoxOJcZxdKpSfxj9n3cnUZwo4aYoqtNQ1TLcGMVuiRLP32UcGtW0jS5LSWRog2VQaYMlLo226t85+1jL31PHLlOnLlPnW1LnUMeRufpYkbAYuv1ii2haGR2GMKUOEtONL4Ny0w9ZJzcUy2s/ZNApiIRc2ug8LE1MlmlixOZDXyPX7iLr0F9k6S+y9hc59BfZ+osc+4uc+ouc+4vc39NPQZ9+obQmlf4WOYA+/a5Fxnz6pSFPXS7K3yNjPv1yyq0Hx+tDz+1+mpDgRVVqXspwLumtMqf0w+hXGJjP1YNgGGE4DMwucDcY7VEiMvvGEwzMlnEQDMz+chAMzGZ0Lxg6tAWY8yLjTzAwO9cxMAyzzR0EA7Mn3u/RmhyG/ASj/wZa2lpp0BUY5w9G2qcRIp4hfG/j1n8B3Y6FQbKoYYpQq629SKbF/BgdW1iMkNpjtXgAvYDA7J4HgMDsnQeAwOycB4DA7JsHgMDsmvuDiJg98wAQmB3zABCY/fIAEJjl8gAQRhAXEGyWIwg2yxEEm+UIgs1yBMFmeQGR2CxHEGyWIwg2yxEEm+UIwgjiAoLNcgTBZjmCYLMcQbBZjiDYLC8gMpvlCILNcgTBZjmCYLMcQRhBXECwWY4g2CxHEGyWIwg2yxEEm+UFRGGzHEGwWY4g2CxHEGyWIwjrHUSWKUPWMgfx+tN1Xxev/nTdd8Ci029myXr9l/j6duHSfQvcDkX3PXA7FN03wc1Q1O674HYoum+D26Hovg9uh6L7RnitKlTjRE8T3X0n3A4FC2RDwQLZULBANhQskBMKGdggnUX3FfJaWZCBtdCnuvteuCELI4vGgjXSWbBHOgsWSWfBJuksuq+SVyuDsB22qRYuMDoLVklnwSrpLIwsGgtWSWfBKuksuq+S1ysD26FPNRcaGwvQgy+OYcEq6SxYJZ0Fq6SzMLJoLB56w6OAnnByzFRzodFZsEo6C1bJxgL0FJljWLBKOgtWSWfx0BsfBfQgm2OmmguNzoJV0lmwSjoLVklnwSrZWIAeYXMMi8fe/gh6Js0xU82FRmdhZNFYsEo6C1ZJZ8Eq6SxYJZ3FY29/7P/gme2muv+zZzZkwSrpLFglnYWRRWPBKuksWCWdxWNvf+z/jJkNp5oLjY1F/yfNbMiCVdJZsEo6C1ZJZ2Fk0Vg89vbH/o+T2XCqudDoLFglnQWrZGPR/9EyG7JglXQWrJLO4rG3P/Z/csyGU82FRmfBKuksWCWdBauks2CVbCz6P0tmQxaPvf2x/0NiNpxqLjQ6CyOLxoJV0lmwSjoLVklnwSrpLB57+yNPl/Gp5vEyMxasks6CVdJZGFk0FqySzoJV0lk89vZHnjIzm2ouNE4slMfMzFiwSjoLVklnwSrpLIwsGouH3v6oPGZmNtVcaHQWrJLOglWyseCZNDMWrJLOglXSWTz09kflMTOzqeZCo7NglXQWrJLOglXSWbBKNhY8k2bG4qG3PyqPmZlNNRcanYWRRWPBKuksWCWdBauks2CVdBYPvf1RecyMTzWPmZmxYJV0FqySzsLIorFglXQWrJLO4qG3PyqPmZlNNRcaGwseMzNjwSrpLFglnQWrpLMwsmgsMKtkyWWZxffM/6DyfR+/WIs0mU5gUgkrP6lVDeNoq1Ha6KKXW5S736L+a3kFWWXIbYKzX1brdFl622X5bZeVt11W33TZ8irS+mXytst0+bLcLjt/4jG/7OdJTjKNTbleHyoxTC8CidG/r9Q85QlgeQwsTwTLk8DyZLA8BSxPxcpjA1geAcsD5mcD87OB+dnA/GxgfjYwPxuYnw3MzxHMzxHMzxHMzxHMzxHMzxHMzxHMzxHMz2nX13sc6jg0ztaVVKbliqRQaXb9XY5hWsqJwZbSJKg0GSpNgUpTkdLkOzaM8Q5y9zvc7oUs01Jy/nHoeIdw9zvY3e8Q736HdPc75Lvfodz9Dre//nOcXtRlWHvGW2nPeKt54RlfBrA8ApZHwfIEsDwGlifumie2V7tEXerQJYHlyWB5ClieipWnDmB5BCzPvn6ev2e2Jf/UAJbHwPJEsDwJLE8Gy1PA8tTD8iyukckwoAUStEC3K7rotBpXc37j0ClNgEpjUGkiVJoElSZDpSlQaSpSGhmg0ghUGigXC5SLBcrFAuVigXKxQLlYoFwsUC5WKBcrlIsVysUK5WKFcrFCuVihXKxQLlYoFyuUiwOUiwOUiwOUiwOUiwOUiwOUiwOUiwOUiwOUiwOUiw3KxQblYoNysUG52KBcbFAuNigXG5SLDcrFBuXiCOXiCOXiCOXiCOXiCOXiCOXiCOXiCOXiCOXiCOXiBOXiBOXiBOXiBOXiBOXiBOXiBOXiBOXiBOXiBOXiDOXiDOXiDOXiDOXiDOXiDOXiDOXiDOXiDOXiDOXiAuXiAuXiAuXiAuXiAuXiAuXiAuXiAuXiAuXiAuXiCuXiCuXiCuXiCuXiCuXiCuXiuqtv1v5zH6kVKY7u+y+o1v7TGN33n1CtxzGsOBErTsKKc8eaM92i3P0W+27dXvXDvnu31+MYVpyIFSdhxdn1fUdsJxjEqItxClacChVn3y3c63EEK87ONam0OGExTsCKY1hxIlachBUnY8UpUCVy373cq3H23cy9Hkew4mC9eTWsN69mWHGw3rwa1ptXy1hxsKxsWFaOWFaOWFaOWFaOWFaOWFaOWFaOWFaOWFaOWFaOWFZOWFZOWFZOWFZOWFZOWFZOWFZOWFZOWFZOWFZOWFbOWFbOWFbOWFbOWFbOWFbOWFbOWFbO+x4/tPbhYxmw4kAdeKYF6sQzLQErju0aZ+3DxxKx4iSsOBkrTsGKs/OhcCuf9tUBK45gxVGsOAErjmHFgTqmU2vCigN1UKdWqJM6tUId1RmGASuOYMVRrDgBK45hxYGychigrBwGKCuHAcrKYcCysmBZWbCsLFhWFiwrC5aVBcvKgmVlwbKyYFlZsKysWFZWLCsrlpUVy8qKZWXFsrJiWVmxrKwoVj5/9cfTbx+f/vvpw5fzFa9/+fvzLy8fPz+PX778+evlb779BQ==" }, { "name": "lookup_validity", "is_unconstrained": true, "custom_attributes": [], "abi": { "parameters": [{ "name": "myself", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] }, "visibility": "private" }, { "name": "block_number", "type": { "kind": "integer", "sign": "unsigned", "width": 32 }, "visibility": "private" }, { "name": "check_private", "type": { "kind": "boolean" }, "visibility": "private" }, { "name": "message_hash", "type": { "kind": "field" }, "visibility": "private" }], "param_witnesses": { "block_number": [{ "start": 1, "end": 2 }], "check_private": [{ "start": 2, "end": 3 }], "message_hash": [{ "start": 3, "end": 4 }], "myself": [{ "start": 0, "end": 1 }] }, "return_type": { "abi_type": { "kind": "array", "length": 2, "type": { "kind": "boolean" } }, "visibility": "public" }, "return_witnesses": [4, 5] }, "bytecode": "", "debug_symbols": "" }, { "name": "spend_public_authwit", "is_unconstrained": true, "custom_attributes": ["aztec(public)"], "abi": { "parameters": [{ "name": "inputs", "type": { "kind": "struct", "path": "authwit::aztec::context::inputs::public_context_inputs::PublicContextInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "historical_header", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_effects_hash", "type": { "kind": "field" } }, { "name": "in_hash", "type": { "kind": "field" } }, { "name": "out_hash", "type": { "kind": "field" } }] } }, { "name": "state", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "integer", "sign": "unsigned", "width": 64 } }, { "name": "coinbase", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "public_global_variables", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "integer", "sign": "unsigned", "width": 64 } }, { "name": "coinbase", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] }, "visibility": "private" }, { "name": "inner_hash", "type": { "kind": "field" }, "visibility": "private" }], "param_witnesses": { "inner_hash": [{ "start": 34, "end": 35 }], "inputs": [{ "start": 0, "end": 34 }] }, "return_type": { "abi_type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "args_hash", "type": { "kind": "field" } }, { "name": "return_values", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "nullifier_read_requests", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::read_request::ReadRequest", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "nullifier_non_existent_read_requests", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::read_request::ReadRequest", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "contract_storage_update_requests", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest", "fields": [{ "name": "storage_slot", "type": { "kind": "field" } }, { "name": "new_value", "type": { "kind": "field" } }] } } }, { "name": "contract_storage_reads", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::contrakt::storage_read::StorageRead", "fields": [{ "name": "storage_slot", "type": { "kind": "field" } }, { "name": "current_value", "type": { "kind": "field" } }] } } }, { "name": "public_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "new_note_hashes", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_nullifiers", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "note_hash", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_l2_to_l1_msgs", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message", "fields": [{ "name": "recipient", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "content", "type": { "kind": "field" } }] } } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "end_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "unencrypted_logs_hash", "type": { "kind": "field" } }, { "name": "unencrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "historical_header", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_effects_hash", "type": { "kind": "field" } }, { "name": "in_hash", "type": { "kind": "field" } }, { "name": "out_hash", "type": { "kind": "field" } }] } }, { "name": "state", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "integer", "sign": "unsigned", "width": 64 } }, { "name": "coinbase", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "prover_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "revert_code", "type": { "kind": "integer", "sign": "unsigned", "width": 8 } }] }, "visibility": "public" }, "return_witnesses": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232] }, "bytecode": "", "debug_symbols": "" }, { "name": "constructor", "is_unconstrained": false, "custom_attributes": ["aztec(private)", "aztec(initializer)"], "abi": { "parameters": [{ "name": "inputs", "type": { "kind": "struct", "path": "authwit::aztec::context::inputs::private_context_inputs::PrivateContextInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "historical_header", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_effects_hash", "type": { "kind": "field" } }, { "name": "in_hash", "type": { "kind": "field" } }, { "name": "out_hash", "type": { "kind": "field" } }] } }, { "name": "state", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "integer", "sign": "unsigned", "width": 64 } }, { "name": "coinbase", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "private_global_variables", "type": { "kind": "struct", "path": "authwit::aztec::context::globals::private_global_variables::PrivateGlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }] } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] }, "visibility": "private" }, { "name": "signing_pub_key_x", "type": { "kind": "field" }, "visibility": "public" }, { "name": "signing_pub_key_y", "type": { "kind": "field" }, "visibility": "public" }], "param_witnesses": { "inputs": [{ "start": 0, "end": 30 }], "signing_pub_key_x": [{ "start": 30, "end": 31 }], "signing_pub_key_y": [{ "start": 31, "end": 32 }] }, "return_type": { "abi_type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "args_hash", "type": { "kind": "field" } }, { "name": "return_values", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "min_revertible_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "max_block_number", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::max_block_number::MaxBlockNumber", "fields": [{ "name": "_opt", "type": { "kind": "struct", "path": "std::option::Option", "fields": [{ "name": "_is_some", "type": { "kind": "boolean" } }, { "name": "_value", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }, { "name": "note_hash_read_requests", "type": { "kind": "array", "length": 32, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "nullifier_read_requests", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::read_request::ReadRequest", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "nullifier_key_validation_requests", "type": { "kind": "array", "length": 1, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest", "fields": [{ "name": "public_key", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::grumpkin_point::GrumpkinPoint", "fields": [{ "name": "x", "type": { "kind": "field" } }, { "name": "y", "type": { "kind": "field" } }] } }, { "name": "secret_key", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey", "fields": [{ "name": "high", "type": { "kind": "field" } }, { "name": "low", "type": { "kind": "field" } }] } }] } } }, { "name": "new_note_hashes", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_nullifiers", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "note_hash", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "private_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "public_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "new_l2_to_l1_msgs", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message", "fields": [{ "name": "recipient", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "content", "type": { "kind": "field" } }] } } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "end_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "encrypted_logs_hash", "type": { "kind": "field" } }, { "name": "unencrypted_logs_hash", "type": { "kind": "field" } }, { "name": "encrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "unencrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "historical_header", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_effects_hash", "type": { "kind": "field" } }, { "name": "in_hash", "type": { "kind": "field" } }, { "name": "out_hash", "type": { "kind": "field" } }] } }, { "name": "state", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "integer", "sign": "unsigned", "width": 64 } }, { "name": "coinbase", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "authwit::aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }] }, "visibility": "public" }, "return_witnesses": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273] }, "bytecode": "H4sIAAAAAAAA/+2dB3QcxRnH56RTd4ckJMb2Yowxpt3pJEuKDcgYA8bGmN4xJ93KOpDuzN26yPTeE9J74pDeSSG9ENIrpJBeCOm9kh6H7y/t+sbrw8DTd34e/zXv/d/elpud38zs7Mw3szMJM+amJ4ypS4z9xqZOVC/yrP1k+Dvab4jtN8aub47tT4ntT4vtz4jt7xvb30/Ua+3PCs/bLkQYvQ4uk1rU0eF3tfvpTDqbau/p6+5MdXT2LepOd6c7uztz7d2ZjN/d0d3V09fTlepJd2T89EBnT2YgNeY8y6/UOF0ijJPIv9mibaI54dab2FJtDxMdYMbyrJ0vDpiIH/p8MdeMlb/IG3EXHesNt6nxubSiXyk7vAeKmsLfjVXCHznk/brw9zbFsJgwDuEarPtF90pa5xutsCT0w5K2eaul6/Qq8bNT2vcqBqYWmejAGvg7z+i9zGvFPU8/jVK76+FPGP2HH9vogTpINF90sGiB6BDRQjNWeYNrjsWdSlg6Ul2j90/uGGeRazOVQiC6BgXVPlaYkvphSsPfBm1/U6lFzaZS0Cr6u73CasJw91r3abDiqsVU4lnp3mn73olQLdY9o6SLfs+wro2ui+IjSuso7JNNJX+27OJ/ydj/pljXNFbh7zW6/E2x8DTFwtxgHcMLJJHcOWy1yG94furNji7+jPVav+28ov5cSVy1msqzu84PlhULQSnbH6wolINsod+3i6X4+94+ZyNsq3INXF2VY7i2zcKM7tFm+ZG0jtXFoqWtSrhaTA3f/4kwECiLt5pKAyQK5EEh1IJwOz/cHhJuZ4oOtf4XAR0cnj/Uuu6wKtctNJWKLrZTRYfHWOtizON992uWTYcb/TI24q0P42RuuEVZdcQTxE1qfC69QDGej1CMm91VB5pvdNMzckeaiQZQ6Pb+BhAy0ZE18Ddl9uwGELhT+mmUimcY7fTXitP5in6ljXuFp2aY7fC2m4nCM3R7f+EJT9tr4G/G7NmFJ7gz+mlUNazj5U+FYdWufab24PSOnHZcdigyRy2IKIzwO2q+dpodnXbazVKMk0XKcQJW+OmZSgs0KrBnh3EUdb0mwi1cl9m5xRrFaZd1XXfoX9I8vutV4hmn3+nuvlQm3ee39y3K9ee6MpnOvmw61zWQG8h0dNpmkchpl3OzjW7ZVoswznEgjJrWelPD9O5WDKddkekxY1ZYuN3Rc2BXPOGq9RzY5rvIAlujHoT2Gll007apssHqEWm1uBvD4xH/dOtYlEatplIZLRSD/MDIspKfDfzc6mLg2wkZ1ezjdlS7MK2zftdb1ydjx4zZ2c4a+Rdtq9l362P7gGyOhc9O8OhcTW2ztp/aT2WPqU3poV2rsGsC461VPNvo1yrgp2d23wCNWvXRRg/AYtES0VGm5v2yHUT9spmJftmJflm7X7beClst8tue2C8blSfSL7tmQ99Qvn+lP7K0kFuTLQX57NDSXK7kl8vVCqX6GMCu3uB7ZQ+t3f5cHEIsMZWe1aPNzu3Uo8PzR5lKz+oxsTDuyT2rx+j5NWoAj9ffjXGnTaadp8bp9y5tCLWM38WmNvGrHc4liuGcsMmMhZHNJmO/UODntPB3jWrjPXZt3L4H3JO1dbRVTps669j2l611bPvL1rqneg25I9XZbCo8av5KWiOsk6z4aa5iE2muYhOJ0tEfzgfLC/2lkfViE1lVXGent13jjZw9DM2+z2i8Wr9ts4fdWWkPYWuK/a8xdp8n2u6qAoa4aI1x2PnHPrdbTCfaJgnbjDDeCtNSo1v4gBV+eqGf2gUcqvDzjH4n2LFGv3CvRdprMi9zhDmhyHycI8x1iszLHWGuV2Q+3hHmpCLzCY4wNygyn+gIc6Mi8wpHmOcqMp/kCLOnyLySkHkVIfPJhMyrHWE+VpH5FMJ0XkPIfCoh82mEzKcTMp9ByHwmIfNZhMxnEzKfQ8h8LiHzeYTM5xMyX0DIfCEh80WEzGsJmS8mZM4SMvcRMvcTMucImX1C5gFC5nWEzIOEzHlC5ksImS8lZB4iZB4mZC4QMhcJmdcTMl9GyFwiZC4TMgeEzBsImTcSMm8iZN5MyDxCyLyFkPlyQuYrCJmvJGS+ipD5akLmawiZryVkvo6Q+XpC5hsImW8kZL6JkPlmQuZbCJlvJWS+jZD5dkLmOwiZ7yRkfg4h83MJme8iZH4eIfPzCZlfQMj8QkLmFxEyv5iQ+SWEzC8lZH6ZI8zdiswvd4RZc7mZVzjC7Ckyv5KQ+VWEzK8mZH4NIfNWQubXEjLfTcj8OkLm1xMyv4GQ+Y2EzG8iZH4zIfNbCJnfSsj8NkLmtxMyv4OQ+Z2EzO8iZL6HkPndhMzvIWR+LyHz+wiZ7yVkfj8h8wcImT9IyPwhR5g7FZk/TJjOH3GEeZYi80cdYdZcU/NjjjB7iswfd4RZc63gTxCm832EzJ8kZL6fkPlThMyfJmT+DCHzZwmZP0fI/HlC5i8QMn+RkPlLhMxfJmT+CiHzVwmZHyBkfpCQ+WuEzF8nZP4GIfM3CZkfImT+FiHztwmZv0PI/F1C5u8RMn+fkPkHhMw/JGT+ESHzjwmZHyZk/gkh8yOEzD8lZP4ZIfPPCZl/Qcj8S0LmXxEy/5qQ+TeEzL8lZP4dIfPvCZn/QMj8R0LmPxEy/5mQ+S+EzH8lZP4bIfOjjjBrfkf3d0eYlyoy/8MRZk+R+Z+EzP8iZP43IfN/HGFuUmT+ryPMzYrM/3OEuUWReZsjzK2KzP93hLlNkdkk3GCepMiccIR5siJznSPMUxSZ6x1hnqrInHSEeZoic4MjzNMVmRsdYZ6hyNzkCPM+iszNjjDvq8jc4gjz0xSZWx1hfroic5sjzM9QZJ7kCPN+isyTHWF+piLzFEeYn6XIPNUR5pmKzNMcYd5fkXm6IjPmKawP/Zpt8SfCOMC5pKhB1CiCLRO2Pdi6YPuBLQS2AbSV0XZEWwptC9S1UfdEXQx1E7yr8e5CWY6yDc868j7yAuJmlhXnCMcc0QPh/jLRcaLlouNFJ4hOFK0QnSRaKVolOlm0WnSKaI3oVNFpotNFZ4jOFJ0lOlt0juhc0Xmi80UXiC4UXSRaK7pYlBX1ifpFOZEvGhCtEw2K8qJLRJeKhkTDooKoKFovukxUEpVFgWiDaKNok2izaES0RXS56ArRlaKrRFeLrhFdK7pOdL3oBtGNoptEN4tuEd0quk10u+gO0Z0irHuPdeDvEmGdcKybjXWksa4y1hnGurtYhxbrsmKdUqzbiXUssa4j1jnEun9YB2+rCOuk3S3COlpYVwrrLGHdIazDg3VpsE4L1i3BOh5Y1wLrPGDdA6wDcI8I88Rj3nTMI455te8VYd5lzEOMeXkxTy3mbcU8ppjXE/NcYt5HzIN4nwjz5N0vwjxqmFcM82xh3inMw4R5iTBPD+atwTwumNcE83xg3gvkmwdFmCcA383jO3J8V/2QCN/d4jtUfJeJ7xTx3R6+Y8N3XfjOCd/94DuYh0X4TuIREcbRY1w5xllj3DHG4WJcKsZpYtwixvFhXBvGeWHcE8YBYVwMxolg3ATGEaBf/VER+l3RD4l+OfRTod8G/Riw68PODbsv7KB4AGEng90IdhTYFdDORrsT7TC0S1BPR70V9TjUa/Cex3sP7wGUiygn8MxGbka4nRlu+7NDQ15Q9LLlsl8K1g5nN6/tywdry/ktyOmjjync3HC7opAP8tmh/JZskC8WvMFsedDLFf2yVygG3nA26MczYbzw6lT8X37Jy+ZyJb9c9vJj/wkGfa+/WAhK2f7Ay/nrh4ojPp4XMy/87/7hNhsE/vD6YDSsuZy3KR8MesWNfmlgqIhnySx8itenn8r1jwFu1dGxNgMBAA==", "debug_symbols": "3ZnbThsxEIbfZa+jynPwjCevUnGRUiohoYAgrVQh3r27YX1IMFjJ0rDJVbTKb+ebf+2ZsfPc3d1frza39+unbvncAXTL78/d08NqPTw+bVaPm27pFt3N+mf/+bLoft3e3XRLNHpZvNGhCzJKEZiy2mFFLcH7US0GtqO+WnSA80GhSSiIUYoY3EQUnoLi+1lGqUfGpA41EnBJDA4hicHX1Gx5Zs1a1i21P0tqOUtqnUINHCCCeChAoBojRbHXPDOMSzWcEMRlENgBqcyszHFmDVndb86K2shGsYkVXtco1IdRq8bFzt26YSd0I8QAxfmGGwioMTuRdw03gkQM81K44atuxOgslKuUD8966C7BPM3mScs8AIuGABk11C37YKb2OZ/tk5Z9YJLqKIDbyXuHW4JfYgnofpbESb0FeIoOgjhrgIBpLBx9f9TCbjnIk8AFU8ET0R2UYfJJDQMoWsrwZZ6qxomgkNZVkP16ijIfFJ0PyrTinlMhBIcNlA/bHbSZgJCbCwjMBQQnLteQQWg/Q1A1bwJDyoes1jqZeY0ZDgVyx+atmjwtlx8HH4sbuZP4nOH9J8ALcoKXBny/yGgUs3koT1IDjswLRz8DJ79apcbbChy1IZS7RKsNl1laBkOTFdX9GaUys8Y4rWzlqtq+I8qdRRHeEVccFC7Gwb7PT6d6kIa4ZYud2BZwkvoFdG7HmJ6H3VfyAL3hgVPzIKa3i+XdQHXhcE7XLEU5e80ajOcMTyeHT5sQiLkBD5JqX9/TSiM5cYhJz1NOesG2gfIFBaoQS56ylIFW0hinAMEVFMO4Q9MY+wvyUFL7q0XXEOx/316wXNJC1EgdnO7vOJ13oJqzqDE0AiW1dFjKnUPw20Annad92qDSvI36uH1lmwcH6Lf6jTlJ/AkuU5GLo+pXxc1RcNQoPGoUHTyK7BtU4/KQb1uLs7qj17r8noepWScL+zuO3rOwMQiOGYTHDKKDB/WLqfpLPt11aHFqgf60c9U//Vk93q5+3N0M/4wPX/5eX8c/yvvHzd+H129e/gE=" }], "events": [], "file_map": { "3": { "source": "struct BoundedVec<T, MaxLen> {\n    storage: [T; MaxLen],\n    len: u64,\n}\n\nimpl<T, MaxLen> BoundedVec<T, MaxLen> {\n    pub fn new() -> Self {\n        let zeroed = crate::unsafe::zeroed();\n        BoundedVec { storage: [zeroed; MaxLen], len: 0 }\n    }\n\n    pub fn get(mut self: Self, index: u64) -> T {\n        assert(index as u64 < self.len);\n        self.storage[index]\n    }\n\n    pub fn get_unchecked(mut self: Self, index: u64) -> T {\n        self.storage[index]\n    }\n\n    pub fn push(&mut self, elem: T) {\n        assert(self.len < MaxLen as u64, \"push out of bounds\");\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    pub fn len(self) -> u64 {\n        self.len\n    }\n\n    pub fn max_len(_self: BoundedVec<T, MaxLen>) -> u64 {\n        MaxLen\n    }\n\n    // This is a intermediate method, while we don't have an\n    // .extend method\n    pub fn storage(self) -> [T; MaxLen] {\n        self.storage\n    }\n\n    pub fn extend_from_array<Len>(&mut self, array: [T; Len]) {\n        let new_len = self.len + array.len();\n        assert(new_len as u64 <= MaxLen as u64, \"extend_from_array out of bounds\");\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = new_len;\n    }\n\n    pub fn extend_from_slice(&mut self, slice: [T]) {\n        let new_len = self.len + slice.len();\n        assert(new_len as u64 <= MaxLen as u64, \"extend_from_slice out of bounds\");\n        for i in 0..slice.len() {\n            self.storage[self.len + i] = slice[i];\n        }\n        self.len = new_len;\n    }\n\n    pub fn extend_from_bounded_vec<Len>(&mut self, vec: BoundedVec<T, Len>) {\n        let append_len = vec.len();\n        let new_len = self.len + append_len;\n        assert(new_len as u64 <= MaxLen as u64, \"extend_from_bounded_vec out of bounds\");\n\n        let mut exceeded_len = false;\n        for i in 0..Len {\n            exceeded_len |= i == append_len;\n            if !exceeded_len {\n                self.storage[self.len + i] = vec.get_unchecked(i);\n            }\n        }\n        self.len = new_len;\n    }\n\n    pub fn pop(&mut self) -> T {\n        assert(self.len as u64 > 0);\n        self.len -= 1;\n\n        let elem = self.storage[self.len];\n        self.storage[self.len] = crate::unsafe::zeroed();\n        elem\n    }\n\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if !exceeded_len {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n}\n", "path": "std/collections/bounded_vec.nr" }, "20": { "source": "mod bn254;\nuse bn254::lt as bn254_lt;\n\nimpl Field {\n    pub fn to_le_bits(self: Self, bit_size: u32) -> [u1] {\n        crate::assert_constant(bit_size);\n        self.__to_le_bits(bit_size)\n    }\n\n    pub fn to_be_bits(self: Self, bit_size: u32) -> [u1] {\n        crate::assert_constant(bit_size);\n        self.__to_be_bits(bit_size)\n    }\n\n    #[builtin(to_le_bits)]\n    fn __to_le_bits(self, _bit_size: u32) -> [u1] {}\n\n    #[builtin(to_be_bits)]\n    fn __to_be_bits(self, bit_size: u32) -> [u1] {}\n\n    #[builtin(apply_range_constraint)]\n    fn __assert_max_bit_size(self, bit_size: u32) {}\n\n    pub fn assert_max_bit_size(self: Self, bit_size: u32) {\n        crate::assert_constant(bit_size);\n        assert(bit_size < modulus_num_bits() as u32);\n        self.__assert_max_bit_size(bit_size);\n    }\n\n    pub fn to_le_bytes(self: Self, byte_size: u32) -> [u8] {\n        self.to_le_radix(256, byte_size)\n    }\n\n    pub fn to_be_bytes(self: Self, byte_size: u32) -> [u8] {\n        self.to_be_radix(256, byte_size)\n    }\n\n    pub fn to_le_radix(self: Self, radix: u32, result_len: u32) -> [u8] {\n        crate::assert_constant(radix);\n        crate::assert_constant(result_len);\n        self.__to_le_radix(radix, result_len)\n    }\n\n    pub fn to_be_radix(self: Self, radix: u32, result_len: u32) -> [u8] {\n        crate::assert_constant(radix);\n        crate::assert_constant(result_len);\n        self.__to_be_radix(radix, result_len)\n    }\n\n    // decompose `_self` into a `_result_len` vector over the `_radix` basis\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix(self, radix: u32, result_len: u32) -> [u8] {}\n\n    #[builtin(to_be_radix)]\n    fn __to_be_radix(self, radix: u32, result_len: u32) -> [u8] {}\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b = exponent.to_le_bits(32);\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32-i] as Field) * (r * self) + (1 - b[32-i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x ∈ {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n\n    pub fn lt(self, another: Field) -> bool {\n        if crate::compat::is_bn254() {\n            bn254_lt(self, another)\n        } else {\n            lt_fallback(self, another)\n        }\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub fn modulus_num_bits() -> u64 {}\n\n#[builtin(modulus_be_bits)]\npub fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub fn modulus_le_bytes() -> [u8] {}\n// Convert a 32 byte array to a field element by modding\npub fn bytes32_to_field(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (bytes32[15 - i] as Field) * v;\n        low = low + (bytes32[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    low + high * v\n}\n\nfn lt_fallback(x: Field, y: Field) -> bool {\n    let num_bytes = (modulus_num_bits() as u32 + 7) / 8;\n    let x_bytes = x.to_le_bytes(num_bytes);\n    let y_bytes = y.to_le_bytes(num_bytes);\n    let mut x_is_lt = false;\n    let mut done = false;\n    for i in 0..num_bytes {\n        if (!done) {\n            let x_byte = x_bytes[num_bytes - 1 - i] as u8;\n            let y_byte = y_bytes[num_bytes - 1 - i] as u8;\n            let bytes_match = x_byte == y_byte;\n            if !bytes_match {\n                x_is_lt = x_byte < y_byte;\n                done = true;\n            }\n        }\n    }\n    x_is_lt\n}\n\n", "path": "std/field.nr" }, "30": { "source": "mod poseidon;\nmod mimc;\nmod poseidon2;\nmod pedersen;\n\nuse crate::default::Default;\nuse crate::uint128::U128;\n\n#[foreign(sha256)]\n// docs:start:sha256\npub fn sha256<N>(input: [u8; N]) -> [u8; 32]\n// docs:end:sha256\n{}\n\n#[foreign(sha256)]\n// docs:start:sha256_slice\npub fn sha256_slice(input: [u8]) -> [u8; 32]\n// docs:end:sha256_slice\n{}\n\n#[foreign(blake2s)]\n// docs:start:blake2s\npub fn blake2s<N>(input: [u8; N]) -> [u8; 32]\n// docs:end:blake2s\n{}\n\n#[foreign(blake2s)]\n// docs:start:blake2s_slice\npub fn blake2s_slice(input: [u8]) -> [u8; 32]\n// docs:end:blake2s_slice\n{}\n\n#[foreign(blake3)]\n// docs:start:blake3\npub fn blake3<N>(input: [u8; N]) -> [u8; 32]\n// docs:end:blake3\n{}\n\n#[foreign(blake3)]\n// docs:start:blake3_slice\npub fn blake3_slice(input: [u8]) -> [u8; 32]\n// docs:end:blake3_slice\n{}\n\n// docs:start:pedersen_commitment\nstruct PedersenPoint {\n   x : Field,\n   y : Field,\n}\n\npub fn pedersen_commitment<N>(input: [Field; N]) -> PedersenPoint {\n    // docs:end:pedersen_commitment\n    pedersen_commitment_with_separator(input, 0)\n}\n\n// docs:start:pedersen_commitment_slice\npub fn pedersen_commitment_slice(input: [Field]) -> PedersenPoint {\n    pedersen_commitment_with_separator_slice(input, 0)\n}\n// docs:end:pedersen_commitment_slice\n\n#[foreign(pedersen_commitment)]\npub fn __pedersen_commitment_with_separator<N>(input: [Field; N], separator: u32) -> [Field; 2] {}\n\n#[foreign(pedersen_commitment)]\npub fn __pedersen_commitment_with_separator_slice(input: [Field], separator: u32) -> [Field; 2] {}\n\npub fn pedersen_commitment_with_separator<N>(input: [Field; N], separator: u32) -> PedersenPoint {\n    let values = __pedersen_commitment_with_separator(input, separator);\n    PedersenPoint { x: values[0], y: values[1] }\n}\n\npub fn pedersen_commitment_with_separator_slice(input: [Field], separator: u32) -> PedersenPoint {\n    let values = __pedersen_commitment_with_separator_slice(input, separator);\n    PedersenPoint { x: values[0], y: values[1] }\n}\n\n// docs:start:pedersen_hash\npub fn pedersen_hash<N>(input: [Field; N]) -> Field\n// docs:end:pedersen_hash\n{\n    pedersen_hash_with_separator(input, 0)\n}\n\n// docs:start:pedersen_hash_slice\npub fn pedersen_hash_slice(input: [Field]) -> Field\n// docs:end:pedersen_hash_slice\n{\n    pedersen_hash_with_separator_slice(input, 0)\n}\n\n#[foreign(pedersen_hash)]\npub fn pedersen_hash_with_separator<N>(input: [Field; N], separator: u32) -> Field {}\n\n#[foreign(pedersen_hash)]\npub fn pedersen_hash_with_separator_slice(input: [Field], separator: u32) -> Field {}\n\npub fn hash_to_field(inputs: [Field]) -> Field {\n    let mut inputs_as_bytes = &[];\n\n    for input in inputs {\n        let input_bytes = input.to_le_bytes(32);\n        for i in 0..32 {\n            inputs_as_bytes = inputs_as_bytes.push_back(input_bytes[i]);\n        }\n    }\n\n    let hashed_input = blake2s_slice(inputs_as_bytes);\n    crate::field::bytes32_to_field(hashed_input)\n}\n\n#[foreign(keccak256)]\n// docs:start:keccak256\npub fn keccak256<N>(input: [u8; N], message_size: u32) -> [u8; 32]\n// docs:end:keccak256\n{}\n\n#[foreign(keccak256)]\n// docs:start:keccak256_slice\npub fn keccak256_slice(input: [u8], message_size: u32) -> [u8; 32]\n// docs:end:keccak256_slice\n{}\n\n#[foreign(poseidon2_permutation)]\npub fn poseidon2_permutation<N>(_input: [Field; N], _state_length: u32) -> [Field; N] {}\n\n#[foreign(sha256_compression)]\npub fn sha256_compression(_input: [u32; 16], _state: [u32; 8]) -> [u32; 8] {}\n\n// Generic hashing support. \n// Partially ported and impacted by rust.\n\n// Hash trait shall be implemented per type.\ntrait Hash{\n    fn hash<H>(self, state: &mut H) where H: Hasher;\n}\n\n// Hasher trait shall be implemented by algorithms to provide hash-agnostic means.\n// TODO: consider making the types generic here ([u8], [Field], etc.)\ntrait Hasher{\n    fn finish(self) -> Field;\n    \n    fn write(&mut self, input: [Field]);\n}\n\n// BuildHasher is a factory trait, responsible for production of specific Hasher.\ntrait BuildHasher<H> where H: Hasher{\n    fn build_hasher(self) -> H;\n}\n\nstruct BuildHasherDefault<H>;\n\nimpl<H> BuildHasher<H> for BuildHasherDefault<H>\nwhere \n    H: Hasher + Default\n{\n    fn build_hasher(_self: Self) -> H{\n        H::default()\n    }\n}\n\nimpl<H> Default for BuildHasherDefault<H>\nwhere \n    H: Hasher + Default\n{\n    fn default() -> Self{\n        BuildHasherDefault{}\n    }    \n}\n\nimpl Hash for Field {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, &[self]);\n    }\n}\n\nimpl Hash for u8 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, &[self as Field]);\n    }\n}\n\nimpl Hash for u32 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, &[self as Field]);\n    }\n}\n\nimpl Hash for u64 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, &[self as Field]);\n    }\n}\n\nimpl Hash for i8 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, &[self as Field]);\n    }\n}\n\nimpl Hash for i32 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, &[self as Field]);\n    }\n}\n\nimpl Hash for i64 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, &[self as Field]);\n    }\n}\n\nimpl Hash for bool {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, &[self as Field]);\n    }\n}\n\nimpl Hash for () {\n    fn hash<H>(_self: Self, _state: &mut H) where H: Hasher {}\n}\n\nimpl Hash for U128 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, &[self.lo as Field, self.hi as Field]);\n    }\n}\n\nimpl<T, N> Hash for [T; N] where T: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        for elem in self {\n            elem.hash(state);\n        }\n    }\n}\n\nimpl<T> Hash for [T] where T: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        self.len().hash(state);\n        for elem in self {\n            elem.hash(state);\n        }\n    }\n}\n\nimpl<A, B> Hash for (A, B) where A: Hash, B: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        self.0.hash(state);\n        self.1.hash(state);\n    }\n}\n\nimpl<A, B, C> Hash for (A, B, C) where A: Hash, B: Hash, C: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n    }\n}\n\nimpl<A, B, C, D> Hash for (A, B, C, D) where A: Hash, B: Hash, C: Hash, D: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n        self.3.hash(state);\n    }\n}\n\nimpl<A, B, C, D, E> Hash for (A, B, C, D, E) where A: Hash, B: Hash, C: Hash, D: Hash, E: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n        self.3.hash(state);\n        self.4.hash(state);\n    }\n}\n", "path": "std/hash.nr" }, "33": { "source": "// Regular merkle tree means a append-only merkle tree (Explain why this is the only way to have privacy and alternatives if you don't want it)\n// Currently we assume that it is a binary tree, so depth k implies a width of 2^k\n// XXX: In the future we can add an arity parameter\n// Returns the merkle root of the tree from the provided leaf, its hashpath, using a pedersen hash function.\npub fn compute_merkle_root<N>(leaf: Field, index: Field, hash_path: [Field; N]) -> Field {\n    let n = hash_path.len();\n    let index_bits = index.to_le_bits(n as u32);\n    let mut current = leaf;\n    for i in 0..n {\n        let path_bit = index_bits[i] as bool;\n        let (hash_left, hash_right) = if path_bit {\n            (hash_path[i], current)\n        } else {\n            (current, hash_path[i])\n        };\n        current = crate::hash::pedersen_hash([hash_left, hash_right]);\n    }\n    current\n}\n", "path": "std/merkle.nr" }, "35": { "source": "use crate::hash::{Hash, Hasher};\nuse crate::cmp::{Ordering, Ord, Eq};\nuse crate::default::Default;\n\nstruct Option<T> {\n    _is_some: bool,\n    _value: T,\n}\n\nimpl<T> Option<T> {\n    /// Constructs a None value\n    pub fn none() -> Self {\n        Self { _is_some: false, _value: crate::unsafe::zeroed() }\n    }\n\n    /// Constructs a Some wrapper around the given value\n    pub fn some(_value: T) -> Self {\n        Self { _is_some: true, _value }\n    }\n\n    /// True if this Option is None\n    pub fn is_none(self) -> bool {\n        !self._is_some\n    }\n\n    /// True if this Option is Some\n    pub fn is_some(self) -> bool {\n        self._is_some\n    }\n\n    /// Asserts `self.is_some()` and returns the wrapped value.\n    pub fn unwrap(self) -> T {\n        assert(self._is_some);\n        self._value\n    }\n\n    /// Returns the inner value without asserting `self.is_some()`\n    /// Note that if `self` is `None`, there is no guarantee what value will be returned,\n    /// only that it will be of type `T`.\n    pub fn unwrap_unchecked(self) -> T {\n        self._value\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, returns the given default value.\n    pub fn unwrap_or(self, default: T) -> T {\n        if self._is_some { self._value } else { default }\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, calls the given function to return\n    /// a default value.\n    pub fn unwrap_or_else<Env>(self, default: fn[Env]() -> T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default()\n        }\n    }\n\n    /// Asserts `self.is_some()` with a provided custom message and returns the contained `Some` value\n    fn expect<N, MessageTypes>(self, message: fmtstr<N, MessageTypes>) -> T {\n        assert(self.is_some(), message);\n        self._value\n    }\n\n    /// If self is `Some(x)`, this returns `Some(f(x))`. Otherwise, this returns `None`.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> Option<U> {\n        if self._is_some {\n            Option::some(f(self._value))\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns the given default value.\n    pub fn map_or<U, Env>(self, default: U, f: fn[Env](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns `default()`.\n    pub fn map_or_else<U, Env1, Env2>(self, default: fn[Env1]() -> U, f: fn[Env2](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default()\n        }\n    }\n\n    /// Returns None if self is None. Otherwise, this returns `other`.\n    pub fn and(self, other: Self) -> Self {\n        if self.is_none() {\n            Option::none()\n        } else {\n            other\n        }\n    }\n\n    /// If self is None, this returns None. Otherwise, this calls the given function\n    /// with the Some value contained within self, and returns the result of that call.\n    ///\n    /// In some languages this function is called `flat_map` or `bind`.\n    pub fn and_then<U, Env>(self, f: fn[Env](T) -> Option<U>) -> Option<U> {\n        if self._is_some {\n            f(self._value)\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `other`.\n    pub fn or(self, other: Self) -> Self {\n        if self._is_some { self } else { other }\n    }\n\n    /// If self is Some, return self. Otherwise, return `default()`.\n    pub fn or_else<U, Env>(self, default: fn[Env]() -> Self) -> Self {\n        if self._is_some { self } else { default() }\n    }\n\n    // If only one of the two Options is Some, return that option.\n    // Otherwise, if both options are Some or both are None, None is returned.\n    pub fn xor(self, other: Self) -> Self {\n        if self._is_some {\n            if other._is_some { Option::none() } else { self }\n        } else if other._is_some {\n            other\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Returns `Some(x)` if self is `Some(x)` and `predicate(x)` is true.\n    /// Otherwise, this returns `None`\n    pub fn filter<Env>(self, predicate: fn[Env](T) -> bool) -> Self {\n        if self._is_some {\n            if predicate(self._value) {\n                self\n            } else {\n                Option::none()\n            }\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Flattens an Option<Option<T>> into a Option<T>.\n    /// This returns None if the outer Option is None. Otherwise, this returns the inner Option.\n    pub fn flatten(option: Option<Option<T>>) -> Option<T> {\n        if option._is_some {\n            option._value\n        } else {\n            Option::none()\n        }\n    }\n}\n\nimpl<T> Default for Option<T> {\n    fn default() -> Self {\n        Option::none()\n    }\n}\n\nimpl<T> Eq for Option<T> where T: Eq {\n    fn eq(self, other: Self) -> bool {\n        if self._is_some == other._is_some {\n            if self._is_some {\n                self._value == other._value\n            } else {\n                true\n            }\n        } else {\n            false\n        }\n    }\n}\n\nimpl<T> Hash for Option<T> where T: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self._is_some.hash(state);\n        if self._is_some {\n            self._value.hash(state);\n        }\n    }\n}\n\n// For this impl we're declaring Option::none < Option::some\nimpl<T> Ord for Option<T> where T: Ord {\n    fn cmp(self, other: Self) -> Ordering {\n        if self._is_some {\n            if other._is_some {\n                self._value.cmp(other._value)\n            } else {\n                Ordering::greater()\n            }\n        } else {\n            if other._is_some {\n                Ordering::less()\n            } else {\n                Ordering::equal()\n            }\n        }\n    }\n}\n", "path": "std/option.nr" }, "50": { "source": "use dep::aztec::context::{PrivateContext, PublicContext, Context};\nuse dep::aztec::state_vars::{Map, PublicMutable};\nuse dep::aztec::protocol_types::{address::AztecAddress, abis::function_selector::FunctionSelector, hash::pedersen_hash};\n\nuse crate::entrypoint::{app::AppPayload, fee::FeePayload};\nuse crate::auth::{IS_VALID_SELECTOR, compute_outer_authwit_hash};\n\nstruct AccountActions {\n  context: Context,\n  is_valid_impl: fn(&mut PrivateContext, Field) -> bool,\n  approved_action: Map<Field, PublicMutable<bool>>,\n}\n\nimpl AccountActions {\n    pub fn init(\n        context: Context,\n        approved_action_storage_slot: Field,\n        is_valid_impl: fn(&mut PrivateContext, Field) -> bool\n    ) -> Self {\n        AccountActions {\n            context,\n            is_valid_impl,\n            approved_action: Map::new(\n                context,\n                approved_action_storage_slot,\n                |context, slot| {\n          PublicMutable::new(context, slot)\n        }\n            )\n        }\n    }\n\n    pub fn private(\n        context: &mut PrivateContext,\n        approved_action_storage_slot: Field,\n        is_valid_impl: fn(&mut PrivateContext, Field) -> bool\n    ) -> Self {\n        AccountActions::init(\n            Context::private(context),\n            approved_action_storage_slot,\n            is_valid_impl\n        )\n    }\n\n    pub fn public(\n        context: &mut PublicContext,\n        approved_action_storage_slot: Field,\n        is_valid_impl: fn(&mut PrivateContext, Field) -> bool\n    ) -> Self {\n        AccountActions::init(\n            Context::public(context),\n            approved_action_storage_slot,\n            is_valid_impl\n        )\n    }\n\n    // docs:start:entrypoint\n    pub fn entrypoint(self, app_payload: AppPayload, fee_payload: FeePayload) {\n        let valid_fn = self.is_valid_impl;\n        let mut private_context = self.context.private.unwrap();\n\n        let fee_hash = fee_payload.hash();\n        assert(valid_fn(private_context, fee_hash));\n        fee_payload.execute_calls(private_context);\n        private_context.capture_min_revertible_side_effect_counter();\n\n        let app_hash = app_payload.hash();\n        assert(valid_fn(private_context, app_hash));\n        app_payload.execute_calls(private_context);\n    }\n    // docs:end:entrypoint\n\n    // docs:start:spend_private_authwit\n    pub fn spend_private_authwit(self, inner_hash: Field) -> Field {\n        let context = self.context.private.unwrap();\n        // The `inner_hash` is \"siloed\" with the `msg_sender` to ensure that only it can \n        // consume the message.\n        // This ensures that contracts cannot consume messages that are not intended for them.\n        let message_hash = compute_outer_authwit_hash(\n            context.msg_sender(),\n            context.chain_id(),\n            context.version(),\n            inner_hash\n        );\n        let valid_fn = self.is_valid_impl;\n        assert(valid_fn(context, message_hash) == true, \"Message not authorized by account\");\n        context.push_new_nullifier(message_hash, 0);\n        IS_VALID_SELECTOR\n    }\n    // docs:end:spend_private_authwit\n\n    // docs:start:spend_public_authwit\n    pub fn spend_public_authwit(self, inner_hash: Field) -> Field {\n        let context = self.context.public.unwrap();\n        // The `inner_hash` is \"siloed\" with the `msg_sender` to ensure that only it can \n        // consume the message.\n        // This ensures that contracts cannot consume messages that are not intended for them.\n        let message_hash = compute_outer_authwit_hash(\n            context.msg_sender(),\n            context.chain_id(),\n            context.version(),\n            inner_hash\n        );\n        let is_valid = self.approved_action.at(message_hash).read();\n        assert(is_valid == true, \"Message not authorized by account\");\n        context.push_new_nullifier(message_hash, 0);\n        IS_VALID_SELECTOR\n    }\n    // docs:end:spend_public_authwit\n\n    // docs:start:approve_public_authwit\n    pub fn approve_public_authwit(self, message_hash: Field) {\n        self.approved_action.at(message_hash).write(true);\n    }\n    // docs:end:approve_public_authwit\n}\n", "path": "/usr/src/noir-projects/aztec-nr/authwit/src/account.nr" }, "52": { "source": "use dep::aztec::prelude::PrivateContext;\nuse dep::aztec::protocol_types::{constants::GENERATOR_INDEX__FEE_PAYLOAD, hash::pedersen_hash, traits::{Hash, Serialize}};\nuse crate::entrypoint::function_call::FunctionCall;\n\n// 2 * 4 (function call) + 1\nglobal FEE_PAYLOAD_SIZE: Field = 9;\n\n// 2*97 + 32\nglobal FEE_PAYLOAD_SIZE_IN_BYTES: Field = 226;\n\nglobal MAX_FEE_FUNCTION_CALLS = 2;\n\n// docs:start:fee-payload-struct\nstruct FeePayload {\n  function_calls: [FunctionCall; MAX_FEE_FUNCTION_CALLS],\n  nonce: Field,\n}\n// docs:end:fee-payload-struct\n\nimpl Serialize<FEE_PAYLOAD_SIZE> for FeePayload {\n  // Serializes the entrypoint struct\n  fn serialize(self) -> [Field; FEE_PAYLOAD_SIZE] {\n    let mut fields: BoundedVec<Field, FEE_PAYLOAD_SIZE> = BoundedVec::new();\n    for i in 0..MAX_FEE_FUNCTION_CALLS {\n      fields.extend_from_array(self.function_calls[i].serialize());\n    }\n    fields.push(self.nonce);\n    fields.storage\n  }\n}\n\nimpl Hash for FeePayload {\n  fn hash(self) -> Field {\n    pedersen_hash(\n      self.serialize(),\n      GENERATOR_INDEX__FEE_PAYLOAD\n    )\n  }\n}\n\nimpl FeePayload {\n    fn to_be_bytes(self) -> [u8; FEE_PAYLOAD_SIZE_IN_BYTES] {\n        let mut bytes: BoundedVec<u8, FEE_PAYLOAD_SIZE_IN_BYTES> = BoundedVec::new();\n\n        for i in 0..MAX_FEE_FUNCTION_CALLS {\n            bytes.extend_from_array(self.function_calls[i].to_be_bytes());\n        }\n        bytes.extend_from_slice(self.nonce.to_be_bytes(32));\n\n        bytes.storage\n    }\n\n    fn execute_calls(self, context: &mut PrivateContext) {\n        for call in self.function_calls {\n            if !call.target_address.is_zero() {\n                if call.is_public {\n                    context.call_public_function_with_packed_args(\n                        call.target_address,\n                        call.function_selector,\n                        call.args_hash,\n                        false,\n                        false\n                    );\n                } else {\n                    let _result = context.call_private_function_with_packed_args(\n                        call.target_address,\n                        call.function_selector,\n                        call.args_hash,\n                        false,\n                        false\n                    );\n                }\n            }\n        }\n    }\n}\n", "path": "/usr/src/noir-projects/aztec-nr/authwit/src/entrypoint/fee.nr" }, "53": { "source": "use dep::aztec::prelude::PrivateContext;\nuse dep::aztec::protocol_types::{constants::GENERATOR_INDEX__SIGNATURE_PAYLOAD, hash::pedersen_hash, traits::{Hash, Serialize}};\n\nuse crate::entrypoint::function_call::{FunctionCall, FUNCTION_CALL_SIZE_IN_BYTES};\n\n// FUNCTION_CALL_SIZE * ACCOUNT_MAX_CALLS + 1\nglobal APP_PAYLOAD_SIZE: u64 = 17;\n// FUNCTION_CALL_SIZE_IN_BYTES * ACCOUNT_MAX_CALLS + 32\nglobal APP_PAYLOAD_SIZE_IN_BYTES: u64 = 420;\n\nglobal ACCOUNT_MAX_CALLS: u64 = 4;\n\n// Note: If you change the following struct you have to update default_entrypoint.ts\n// docs:start:app-payload-struct\nstruct AppPayload {\n  function_calls: [FunctionCall; ACCOUNT_MAX_CALLS],\n  nonce: Field,\n}\n// docs:end:app-payload-struct\n\nimpl Serialize<APP_PAYLOAD_SIZE> for AppPayload {\n  // Serializes the entrypoint struct\n  fn serialize(self) -> [Field; APP_PAYLOAD_SIZE] {\n    let mut fields: BoundedVec<Field, APP_PAYLOAD_SIZE> = BoundedVec::new();\n    for call in self.function_calls {\n      fields.extend_from_array(call.serialize());\n    }\n    fields.push(self.nonce);\n    fields.storage\n  }\n}\n\nimpl Hash for AppPayload {\n  fn hash(self) -> Field {\n    pedersen_hash(\n      self.serialize(),\n      GENERATOR_INDEX__SIGNATURE_PAYLOAD\n    )\n  }\n}\n\nimpl AppPayload {\n    // Serializes the payload as an array of bytes. Useful for hashing with sha256.\n    fn to_be_bytes(self) -> [u8; APP_PAYLOAD_SIZE_IN_BYTES] {\n        let mut bytes: BoundedVec<u8, APP_PAYLOAD_SIZE_IN_BYTES> = BoundedVec::new();\n\n        for i in 0..ACCOUNT_MAX_CALLS {\n            bytes.extend_from_array(self.function_calls[i].to_be_bytes());\n        }\n        bytes.extend_from_slice(self.nonce.to_be_bytes(32));\n\n        bytes.storage\n    }\n\n    // Executes all private and public calls\n    // docs:start:entrypoint-execute-calls\n    fn execute_calls(self, context: &mut PrivateContext) {\n        for call in self.function_calls {\n            if !call.target_address.is_zero() {\n                if call.is_public {\n                    context.call_public_function_with_packed_args(\n                        call.target_address,\n                        call.function_selector,\n                        call.args_hash,\n                        false,\n                        false\n                    );\n                } else {\n                    let _result = context.call_private_function_with_packed_args(\n                        call.target_address,\n                        call.function_selector,\n                        call.args_hash,\n                        false,\n                        false\n                    );\n                }\n            }\n        }\n    }\n    // docs:end:entrypoint-execute-calls\n}\n", "path": "/usr/src/noir-projects/aztec-nr/authwit/src/entrypoint/app.nr" }, "55": { "source": "use dep::aztec::protocol_types::{\n    abis::function_selector::FunctionSelector, address::AztecAddress,\n    constants::{GENERATOR_INDEX__AUTHWIT_INNER, GENERATOR_INDEX__AUTHWIT_OUTER},\n    hash::{hash_args_array, pedersen_hash}\n};\nuse dep::aztec::context::{PrivateContext, PublicContext, Context};\n\nglobal IS_VALID_SELECTOR = 0xabf64ad4; // 4 first bytes of keccak256(\"IS_VALID()\")\n\n// docs:start:assert_current_call_valid_authwit\n// Assert that `on_behalf_of` have authorized the current call with a valid authentication witness\npub fn assert_current_call_valid_authwit(context: &mut PrivateContext, on_behalf_of: AztecAddress) {\n    let function_selector = FunctionSelector::from_signature(\"spend_private_authwit(Field)\");\n    let inner_hash = compute_inner_authwit_hash([context.msg_sender().to_field(), context.selector().to_field(), context.args_hash]);\n    let result = context.call_private_function(on_behalf_of, function_selector, [inner_hash])[0];\n    assert(result == IS_VALID_SELECTOR, \"Message not authorized by account\");\n}\n// docs:end:assert_current_call_valid_authwit\n\n// docs:start:assert_current_call_valid_authwit_public\n// Assert that `on_behalf_of` have authorized the current call in a public context\npub fn assert_current_call_valid_authwit_public(context: &mut PublicContext, on_behalf_of: AztecAddress) {\n    let function_selector = FunctionSelector::from_signature(\"spend_public_authwit(Field)\");\n    let inner_hash = compute_inner_authwit_hash([context.msg_sender().to_field(), context.selector().to_field(), context.args_hash]);\n    let result = context.call_public_function(on_behalf_of, function_selector, [inner_hash])[0];\n    assert(result == IS_VALID_SELECTOR, \"Message not authorized by account\");\n}\n// docs:end:assert_current_call_valid_authwit_public\n\n// docs:start:compute_call_authwit_hash\n// Compute the message hash to be used by an authentication witness \npub fn compute_call_authwit_hash<N>(\n    caller: AztecAddress,\n    consumer: AztecAddress,\n    chain_id: Field,\n    version: Field,\n    selector: FunctionSelector,\n    args: [Field; N]\n) -> Field {\n    let args_hash = hash_args_array(args);\n    let inner_hash = compute_inner_authwit_hash([caller.to_field(), selector.to_field(), args_hash]);\n    compute_outer_authwit_hash(consumer, chain_id, version, inner_hash)\n}\n// docs:end:compute_call_authwit_hash\n\npub fn compute_inner_authwit_hash<N>(args: [Field; N]) -> Field {\n    pedersen_hash(args, GENERATOR_INDEX__AUTHWIT_INNER)\n}\n\npub fn compute_outer_authwit_hash(\n    consumer: AztecAddress,\n    chain_id: Field,\n    version: Field,\n    inner_hash: Field\n) -> Field {\n    pedersen_hash(\n        [\n        consumer.to_field(),\n        chain_id,\n        version,\n        inner_hash\n    ],\n        GENERATOR_INDEX__AUTHWIT_OUTER\n    )\n}\n", "path": "/usr/src/noir-projects/aztec-nr/authwit/src/auth.nr" }, "57": { "source": "#[oracle(getAuthWitness)]\nfn get_auth_witness_oracle<N>(_message_hash: Field) -> [Field; N] {}\n\nunconstrained pub fn get_auth_witness<N>(message_hash: Field) -> [Field; N] {\n    get_auth_witness_oracle(message_hash)\n}\n", "path": "/usr/src/noir-projects/aztec-nr/authwit/src/auth_witness.nr" }, "59": { "source": "use dep::protocol_types::{address::AztecAddress, constants::GENERATOR_INDEX__INITIALIZATION_NULLIFIER, hash::pedersen_hash};\n\nuse crate::context::{PrivateContext, Context};\nuse crate::note::{\n    lifecycle::create_note, note_getter::{get_note, view_notes}, note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions\n};\nuse crate::oracle::notes::check_nullifier_exists;\nuse crate::state_vars::storage::Storage;\n\n// docs:start:struct\nstruct PrivateImmutable<Note> {\n    context: Option<&mut PrivateContext>,\n    storage_slot: Field,\n}\n// docs:end:struct\n\nimpl<T> Storage<T> for PrivateImmutable<T> {}\n\nimpl<Note> PrivateImmutable<Note> {\n    // docs:start:new\n    pub fn new(context: Context, storage_slot: Field) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Self { context: context.private, storage_slot }\n    }\n    // docs:end:new\n\n    // The following computation is leaky, in that it doesn't hide the storage slot that has been initialized, nor does it hide the contract address of this contract.\n    // When this initialization nullifier is emitted, an observer could do a dictionary or rainbow attack to learn the preimage of this nullifier to deduce the storage slot and contract address.\n    // For some applications, leaking the details that a particular state variable of a particular contract has been initialized will be unacceptable.\n    // Under such circumstances, such application developers might wish to _not_ use this state variable type.\n    // This is especially dangerous for initial assignment to elements of a `Map<AztecAddress, PrivateImmutable>` type (for example), because the storage slot often also identifies an actor. \n    // e.g. the initial assignment to `my_map.at(msg.sender)` will leak: `msg.sender`, the fact that an element of `my_map` was assigned-to for the first time, and the contract_address.\n    pub fn compute_initialization_nullifier(self) -> Field {\n        pedersen_hash(\n            [self.storage_slot],\n            GENERATOR_INDEX__INITIALIZATION_NULLIFIER\n        )\n    }\n\n    // docs:start:is_initialized\n    unconstrained pub fn is_initialized(self) -> bool {\n        let nullifier = self.compute_initialization_nullifier();\n        check_nullifier_exists(nullifier)\n    }\n    // docs:end:is_initialized\n\n    // docs:start:initialize\n    pub fn initialize<N>(self, note: &mut Note, broadcast: bool) where Note: NoteInterface<N> {\n        let context = self.context.unwrap();\n\n        // Nullify the storage slot.\n        let nullifier = self.compute_initialization_nullifier();\n        context.push_new_nullifier(nullifier, 0);\n\n        create_note(context, self.storage_slot, note, broadcast);\n    }\n    // docs:end:initialize\n\n    // docs:start:get_note\n    pub fn get_note<N>(self) -> Note where Note: NoteInterface<N> {\n        let context = self.context.unwrap();\n        let storage_slot = self.storage_slot;\n        get_note(context, storage_slot)\n    }\n    // docs:end:get_note\n\n    // docs:start:view_note\n    unconstrained pub fn view_note<N>(self) -> Note  where Note: NoteInterface<N> {\n        let options = NoteViewerOptions::new().set_limit(1);\n        view_notes(self.storage_slot, options)[0].unwrap()\n    }\n    // docs:end:view_note\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/state_vars/private_immutable.nr" }, "60": { "source": "use crate::context::{PrivateContext, PublicContext, Context};\nuse dep::protocol_types::{hash::pedersen_hash, traits::ToField};\nuse crate::state_vars::storage::Storage;\n\n// docs:start:map\nstruct Map<K, V> {\n    context: Context,\n    storage_slot: Field,\n    state_var_constructor: fn(Context, Field) -> V,\n}\n// docs:end:map\n\nimpl<K, T> Storage<T> for Map<K, T> {}\n\nimpl<K, V> Map<K, V> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        state_var_constructor: fn(Context, Field) -> V\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Map { context, storage_slot, state_var_constructor }\n    }\n    // docs:end:new\n\n    // docs:start:at\n    pub fn at(self, key: K) -> V where K: ToField {\n        // TODO(#1204): use a generator index for the storage slot\n        let derived_storage_slot = pedersen_hash([self.storage_slot, key.to_field()], 0);\n\n        let state_var_constructor = self.state_var_constructor;\n        state_var_constructor(self.context, derived_storage_slot)\n    }\n    // docs:end:at\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/state_vars/map.nr" }, "63": { "source": "use crate::context::Context;\nuse crate::oracle::storage::storage_read;\nuse crate::oracle::storage::storage_write;\nuse dep::protocol_types::traits::{Deserialize, Serialize};\nuse crate::state_vars::storage::Storage;\n\n// docs:start:public_mutable_struct\nstruct PublicMutable<T> {\n    context: Context,\n    storage_slot: Field,\n}\n// docs:end:public_mutable_struct\n\nimpl<T> Storage<T> for PublicMutable<T> {}\n\nimpl<T> PublicMutable<T> {\n    // docs:start:public_mutable_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicMutable { context, storage_slot }\n    }\n    // docs:end:public_mutable_struct_new\n\n    // docs:start:public_mutable_struct_read\n    pub fn read<T_SERIALIZED_LEN>(self) -> T where T: Deserialize<T_SERIALIZED_LEN> {\n        assert(self.context.private.is_none(), \"PublicMutable reads only supported in public functions\");\n        let fields = storage_read(self.storage_slot);\n        T::deserialize(fields)\n    }\n    // docs:end:public_mutable_struct_read\n\n    // docs:start:public_mutable_struct_write\n    pub fn write<T_SERIALIZED_LEN>(self, value: T) where T: Serialize<T_SERIALIZED_LEN> {\n        assert(self.context.private.is_none(), \"PublicMutable writes only supported in public functions\");\n        let fields = T::serialize(value);\n        storage_write(self.storage_slot, fields);\n    }\n    // docs:end:public_mutable_struct_write\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/state_vars/public_mutable.nr" }, "70": { "source": "use dep::std::merkle::compute_merkle_root;\nuse dep::protocol_types::header::Header;\n\nuse crate::{\n    context::{PrivateContext, ContextInterface},\n    oracle::get_nullifier_membership_witness::get_nullifier_membership_witness,\n    note::{utils::compute_siloed_nullifier, note_interface::NoteInterface}\n};\n\nfn _nullifier_inclusion(nullifier: Field, header: Header) {\n    // 1) Get the membership witness of the nullifier\n    let witness = get_nullifier_membership_witness(header.global_variables.block_number as u32, nullifier);\n\n    // 2) Check that the witness we obtained matches the nullifier\n    assert(witness.leaf_preimage.nullifier == nullifier, \"Nullifier does not match value in witness\");\n\n    // 3) Compute the nullifier tree leaf\n    let nullifier_leaf = witness.leaf_preimage.hash();\n\n    // 4) Prove that the nullifier is in the nullifier tree\n    assert(\n        header.state.partial.nullifier_tree.root\n        == compute_merkle_root(nullifier_leaf, witness.index, witness.path), \"Proving nullifier inclusion failed\"\n    );\n    // --> Now we have traversed the trees all the way up to archive root and verified that the nullifier\n    //     was included in the nullifier tree.\n}\n\npub fn prove_nullifier_inclusion<TContext>(\n    nullifier: Field,\n    context: TContext\n) where TContext: ContextInterface {\n    _nullifier_inclusion(nullifier, context.get_header());\n}\n\npub fn prove_nullifier_inclusion_at(\n    nullifier: Field,\n    block_number: u32, // The block at which we'll prove that the nullifier exists in the nullifier tree\n    context: PrivateContext\n) {\n    let header = context.get_header_at(block_number);\n\n    _nullifier_inclusion(nullifier, header);\n}\n\npub fn prove_note_is_nullified<Note, N>(\n    note: Note,\n    context: &mut PrivateContext\n) where Note: NoteInterface<N> {\n    let nullifier = compute_siloed_nullifier(note, context);\n\n    _nullifier_inclusion(nullifier, context.historical_header);\n}\n\npub fn prove_note_is_nullified_at<Note, N>(\n    note: Note,\n    block_number: u32,\n    context: &mut PrivateContext\n) where Note: NoteInterface<N> {\n    let nullifier = compute_siloed_nullifier(note, context);\n    let header = context.get_header_at(block_number);\n\n    _nullifier_inclusion(nullifier, header);\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/history/nullifier_inclusion.nr" }, "76": { "source": "use crate::{\n    context::{inputs::PublicContextInputs, interface::ContextInterface, interface::PublicContextInterface},\n    messaging::process_l1_to_l2_message, oracle::{arguments, public_call::call_public_function_internal}\n};\nuse dep::protocol_types::{\n    abis::{\n    global_variables::GlobalVariables, function_selector::FunctionSelector,\n    private_circuit_public_inputs::PrivateCircuitPublicInputs,\n    public_call_stack_item::PublicCallStackItem,\n    public_circuit_public_inputs::PublicCircuitPublicInputs, read_request::ReadRequest,\n    side_effect::{SideEffect, SideEffectLinkedToNoteHash}\n},\n    address::{AztecAddress, EthAddress},\n    constants::{\n    MAX_NEW_NOTE_HASHES_PER_CALL, MAX_NEW_L2_TO_L1_MSGS_PER_CALL, MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL, MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL,\n    MAX_NULLIFIER_READ_REQUESTS_PER_CALL, MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_CALL,\n    RETURN_VALUES_LENGTH\n},\n    contrakt::{storage_read::StorageRead, storage_update_request::StorageUpdateRequest},\n    hash::hash_args_array, header::Header, messaging::l2_to_l1_message::L2ToL1Message,\n    utils::reader::Reader\n};\n\nstruct PublicContext {\n    inputs: PublicContextInputs,\n    side_effect_counter: u32,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    nullifier_read_requests: BoundedVec<ReadRequest, MAX_NULLIFIER_READ_REQUESTS_PER_CALL>,\n    nullifier_non_existent_read_requests: BoundedVec<ReadRequest, MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_CALL>,\n    contract_storage_update_requests: BoundedVec<StorageUpdateRequest, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL>,\n    contract_storage_reads: BoundedVec<StorageRead, MAX_PUBLIC_DATA_READS_PER_CALL>,\n    public_call_stack_hashes: BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n\n    new_note_hashes: BoundedVec<SideEffect, MAX_NEW_NOTE_HASHES_PER_CALL>,\n    new_nullifiers: BoundedVec<SideEffectLinkedToNoteHash, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    new_l2_to_l1_msgs: BoundedVec<L2ToL1Message, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n\n    unencrypted_logs_hash: Field,\n    unencrypted_logs_preimages_length: Field,\n\n    // Header of a block whose state is used during public execution. Set by sequencer to be a header of a block\n    // previous to the one in which the tx is included.\n    historical_header: Header,\n    prover_address: AztecAddress,\n}\n\nimpl PublicContext {\n    pub fn new(inputs: PublicContextInputs, args_hash: Field) -> PublicContext {\n        PublicContext {\n            inputs,\n            side_effect_counter: inputs.start_side_effect_counter,\n            args_hash,\n            return_values: BoundedVec::new(),\n            nullifier_read_requests: BoundedVec::new(),\n            nullifier_non_existent_read_requests: BoundedVec::new(),\n            contract_storage_update_requests: BoundedVec::new(),\n            contract_storage_reads: BoundedVec::new(),\n            public_call_stack_hashes: BoundedVec::new(),\n            new_note_hashes: BoundedVec::new(),\n            new_nullifiers: BoundedVec::new(),\n            new_l2_to_l1_msgs: BoundedVec::new(),\n            unencrypted_logs_hash: 0,\n            unencrypted_logs_preimages_length: 0,\n            historical_header: inputs.historical_header,\n            prover_address: AztecAddress::zero() // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn call_public_function_no_args(\n        self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, false, false)\n    }\n\n    pub fn static_call_public_function_no_args(\n        self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, true, false)\n    }\n\n    pub fn delegate_call_public_function_no_args(\n        self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, false, true)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let side_effect_counter = self.side_effect_counter;\n        // TODO get next value from output of `call_public_function_internal`\n        self.side_effect_counter += 1;\n\n        call_public_function_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            side_effect_counter,\n            is_static_call,\n            is_delegate_call\n        )\n    }\n\n    pub fn finish(self) -> PublicCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let unencrypted_logs_hash = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        // Compute the public call stack hashes\n        let pub_circuit_pub_inputs = PublicCircuitPublicInputs {\n            call_context: self.inputs.call_context, // Done\n            args_hash: self.args_hash, // Done\n            nullifier_read_requests: self.nullifier_read_requests.storage,\n            nullifier_non_existent_read_requests: self.nullifier_non_existent_read_requests.storage,\n            contract_storage_update_requests: self.contract_storage_update_requests.storage,\n            contract_storage_reads: self.contract_storage_reads.storage,\n            return_values: self.return_values.storage,\n            new_note_hashes: self.new_note_hashes.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            public_call_stack_hashes: self.public_call_stack_hashes.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            start_side_effect_counter: self.inputs.start_side_effect_counter,\n            end_side_effect_counter: self.side_effect_counter,\n            unencrypted_logs_hash,\n            unencrypted_log_preimages_length,\n            historical_header: self.inputs.historical_header,\n            prover_address: self.prover_address,\n            revert_code: 0\n        };\n        pub_circuit_pub_inputs\n    }\n}\n\nimpl ContextInterface for PublicContext {\n    fn msg_sender(self) -> AztecAddress {\n        self.inputs.call_context.msg_sender\n    }\n\n    fn this_address(self) -> AztecAddress {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    fn this_portal_address(self) -> EthAddress {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    fn chain_id(self) -> Field {\n        self.inputs.public_global_variables.chain_id\n    }\n\n    fn version(self) -> Field {\n        self.inputs.public_global_variables.version\n    }\n\n    fn selector(self) -> FunctionSelector {\n        self.inputs.call_context.function_selector\n    }\n\n    fn get_args_hash(self) -> Field {\n        self.args_hash\n    }\n\n    fn get_header(self) -> Header {\n        self.historical_header\n    }\n\n    fn push_new_note_hash(&mut self, note_hash: Field) {\n        let side_effect = SideEffect { value: note_hash, counter: self.side_effect_counter };\n        self.new_note_hashes.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    fn push_new_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        let side_effect = SideEffectLinkedToNoteHash {\n            value: nullifier,\n            note_hash: 0, // cannot nullify pending notes in public context\n            counter: self.side_effect_counter\n        };\n        self.new_nullifiers.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n}\n\nimpl PublicContextInterface for PublicContext {\n    fn block_number(self) -> Field {\n        self.inputs.public_global_variables.block_number\n    }\n\n    fn timestamp(self) -> u64 {\n        self.inputs.public_global_variables.timestamp\n    }\n\n    fn coinbase(self) -> EthAddress {\n        self.inputs.public_global_variables.coinbase\n    }\n\n    fn fee_recipient(self) -> AztecAddress {\n        self.inputs.public_global_variables.fee_recipient\n    }\n\n    fn push_nullifier_read_request(&mut self, nullifier: Field) {\n        let request = ReadRequest { value: nullifier, counter: self.side_effect_counter };\n        self.nullifier_read_requests.push(request);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    fn push_nullifier_non_existent_read_request(&mut self, nullifier: Field) {\n        let request = ReadRequest { value: nullifier, counter: self.side_effect_counter };\n        self.nullifier_non_existent_read_requests.push(request);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    fn message_portal(&mut self, recipient: EthAddress, content: Field) {\n        let message = L2ToL1Message { recipient, content };\n        self.new_l2_to_l1_msgs.push(message);\n    }\n\n    // We can consume message with a secret in public context because the message cannot be modified and therefore\n    // there is no front-running risk (e.g. somebody could front run you to claim your tokens to your address).\n    fn consume_l1_to_l2_message(&mut self, content: Field, secret: Field, sender: EthAddress) {\n        let this = (*self).this_address();\n        let nullifier = process_l1_to_l2_message(\n            self.historical_header.state.l1_to_l2_message_tree.root,\n            this,\n            sender,\n            self.chain_id(),\n            self.version(),\n            content,\n            secret\n        );\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, 0)\n    }\n\n    fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    fn call_public_function<ARGS_COUNT>(\n        self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, false, false)\n    }\n\n    fn static_call_public_function<ARGS_COUNT>(\n        self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, true, false)\n    }\n\n    fn delegate_call_public_function<ARGS_COUNT>(\n        self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, false, true)\n    }\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/context/public_context.nr" }, "82": { "source": "use crate::{\n    context::{inputs::PrivateContextInputs, interface::ContextInterface},\n    key::nullifier_key::validate_nullifier_key_against_address, messaging::process_l1_to_l2_message,\n    oracle::{\n    arguments, call_private_function::call_private_function_internal,\n    enqueue_public_function_call::enqueue_public_function_call_internal, context::get_portal_address,\n    header::get_header_at, nullifier_key::{get_nullifier_key_pair, NullifierKeyPair}\n}\n};\nuse dep::protocol_types::{\n    abis::{\n    call_context::CallContext, function_data::FunctionData, function_selector::FunctionSelector,\n    max_block_number::MaxBlockNumber, nullifier_key_validation_request::NullifierKeyValidationRequest,\n    private_call_stack_item::PrivateCallStackItem,\n    private_circuit_public_inputs::PrivateCircuitPublicInputs,\n    public_call_stack_item::PublicCallStackItem,\n    public_circuit_public_inputs::PublicCircuitPublicInputs, read_request::ReadRequest,\n    side_effect::{SideEffect, SideEffectLinkedToNoteHash}\n},\n    address::{AztecAddress, EthAddress},\n    constants::{\n    MAX_NEW_NOTE_HASHES_PER_CALL, MAX_NEW_L2_TO_L1_MSGS_PER_CALL, MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_NOTE_HASH_READ_REQUESTS_PER_CALL, MAX_NULLIFIER_READ_REQUESTS_PER_CALL,\n    MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_CALL, MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL,\n    RETURN_VALUES_LENGTH\n},\n    contrakt::{storage_read::StorageRead, storage_update_request::StorageUpdateRequest},\n    grumpkin_private_key::GrumpkinPrivateKey, hash::hash_args_array, header::Header,\n    messaging::l2_to_l1_message::L2ToL1Message, utils::reader::Reader, traits::is_empty\n};\n\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n// use dep::std::collections::vec::Vec;\n\n// When finished, one can call .finish() to convert back to the abi\nstruct PrivateContext {\n    // docs:start:private-context\n    inputs: PrivateContextInputs,\n    side_effect_counter: u32,\n\n    min_revertible_side_effect_counter: u32,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    max_block_number: MaxBlockNumber,\n\n    note_hash_read_requests: BoundedVec<SideEffect, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL>,\n    nullifier_read_requests: BoundedVec<ReadRequest, MAX_NULLIFIER_READ_REQUESTS_PER_CALL>,\n    nullifier_key_validation_requests: BoundedVec<NullifierKeyValidationRequest, MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL>,\n\n    new_note_hashes: BoundedVec<SideEffect, MAX_NEW_NOTE_HASHES_PER_CALL>,\n    new_nullifiers: BoundedVec<SideEffectLinkedToNoteHash, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    private_call_stack_hashes : BoundedVec<Field, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_stack_hashes : BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    new_l2_to_l1_msgs : BoundedVec<L2ToL1Message, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    // Header of a block whose state is used during private execution (not the block the transaction is included in).\n    historical_header: Header,\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    // encrypted_logs_preimages: Vec<Field>,\n    // unencrypted_logs_preimages: Vec<Field>,\n\n    nullifier_key: Option<NullifierKeyPair>,\n}\n\nimpl ContextInterface for PrivateContext {\n    fn msg_sender(self) -> AztecAddress {\n        self.inputs.call_context.msg_sender\n    }\n\n    fn this_address(self) -> AztecAddress {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    fn this_portal_address(self) -> EthAddress {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    fn chain_id(self) -> Field {\n        self.inputs.private_global_variables.chain_id\n    }\n\n    fn version(self) -> Field {\n        self.inputs.private_global_variables.version\n    }\n\n    fn selector(self) -> FunctionSelector {\n        self.inputs.call_context.function_selector\n    }\n\n    fn get_args_hash(self) -> Field {\n        self.args_hash\n    }\n\n    // Returns the header of a block whose state is used during private execution (not the block the transaction is\n    // included in).\n    fn get_header(self) -> Header {\n        self.historical_header\n    }\n\n    fn push_new_note_hash(&mut self, note_hash: Field) {\n        let side_effect = SideEffect { value: note_hash, counter: self.side_effect_counter };\n        self.new_note_hashes.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    fn push_new_nullifier(&mut self, nullifier: Field, nullified_commitment: Field) {\n        let side_effect = SideEffectLinkedToNoteHash { value: nullifier, note_hash: nullified_commitment, counter: self.side_effect_counter };\n        self.new_nullifiers.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        let side_effect_counter = inputs.start_side_effect_counter;\n        let mut min_revertible_side_effect_counter = 0;\n        if is_empty(inputs.call_context.msg_sender) {\n            min_revertible_side_effect_counter = side_effect_counter;\n        }\n        PrivateContext {\n            inputs,\n            side_effect_counter,\n            min_revertible_side_effect_counter,\n            args_hash,\n            return_values: BoundedVec::new(),\n            max_block_number: MaxBlockNumber::default(),\n            note_hash_read_requests: BoundedVec::new(),\n            nullifier_read_requests: BoundedVec::new(),\n            nullifier_key_validation_requests: BoundedVec::new(),\n            new_note_hashes: BoundedVec::new(),\n            new_nullifiers: BoundedVec::new(),\n            historical_header: inputs.historical_header,\n            private_call_stack_hashes: BoundedVec::new(),\n            public_call_stack_hashes: BoundedVec::new(),\n            new_l2_to_l1_msgs: BoundedVec::new(),\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n            nullifier_key: Option::none()\n        }\n    }\n\n    // Returns the header of an arbitrary block whose block number is less than or equal to the block number\n    // of historical header.\n    pub fn get_header_at(self, block_number: u32) -> Header {\n        get_header_at(block_number, self)\n    }\n\n    pub fn finish(self) -> PrivateCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let encrypted_logs_hash = 0;\n        let unencrypted_logs_hash = 0;\n        let encrypted_log_preimages_length = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        let priv_circuit_pub_inputs = PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            return_values: self.return_values.storage,\n            min_revertible_side_effect_counter: self.min_revertible_side_effect_counter,\n            max_block_number: self.max_block_number,\n            note_hash_read_requests: self.note_hash_read_requests.storage,\n            nullifier_read_requests: self.nullifier_read_requests.storage,\n            nullifier_key_validation_requests: self.nullifier_key_validation_requests.storage,\n            new_note_hashes: self.new_note_hashes.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            private_call_stack_hashes: self.private_call_stack_hashes.storage,\n            public_call_stack_hashes: self.public_call_stack_hashes.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            start_side_effect_counter: self.inputs.start_side_effect_counter,\n            end_side_effect_counter: self.side_effect_counter,\n            encrypted_logs_hash,\n            unencrypted_logs_hash,\n            encrypted_log_preimages_length,\n            unencrypted_log_preimages_length,\n            historical_header: self.historical_header,\n            chain_id: self.inputs.private_global_variables.chain_id,\n            version: self.inputs.private_global_variables.version\n        };\n        priv_circuit_pub_inputs\n    }\n\n    pub fn capture_min_revertible_side_effect_counter(&mut self) {\n        self.min_revertible_side_effect_counter = self.side_effect_counter;\n    }\n\n    // docs:start:max-block-number\n    pub fn request_max_block_number(&mut self, max_block_number: u32) {\n        // docs:end:max-block-number\n        self.max_block_number = MaxBlockNumber::min_with_u32(self.max_block_number, max_block_number);\n    }\n\n    pub fn push_note_hash_read_request(&mut self, note_hash: Field) {\n        let side_effect = SideEffect { value: note_hash, counter: self.side_effect_counter };\n        self.note_hash_read_requests.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    pub fn push_nullifier_read_request(&mut self, nullifier: Field) {\n        let request = ReadRequest { value: nullifier, counter: self.side_effect_counter };\n        self.nullifier_read_requests.push(request);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    pub fn request_nullifier_secret_key(&mut self, account: AztecAddress) -> GrumpkinPrivateKey {\n        let key_pair = if self.nullifier_key.is_none() {\n            let key_pair = get_nullifier_key_pair(account);\n            validate_nullifier_key_against_address(account, key_pair.public_key);\n            let request = NullifierKeyValidationRequest { public_key: key_pair.public_key, secret_key: key_pair.secret_key };\n            self.nullifier_key_validation_requests.push(request);\n            self.nullifier_key = Option::some(key_pair);\n            key_pair\n        } else {\n            let key_pair = self.nullifier_key.unwrap_unchecked();\n            // If MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL is larger than 1, need to update the way the key pair is cached.\n            assert(MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL == 1);\n            assert(\n                key_pair.account == account, \"Cannot query nullifier key for more than one account per call\"\n            );\n            key_pair\n        };\n        key_pair.secret_key\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, recipient: EthAddress, content: Field) {\n        // docs:end:context_message_portal\n        let message = L2ToL1Message { recipient, content };\n        self.new_l2_to_l1_msgs.push(message);\n    }\n\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(&mut self, content: Field, secret: Field, sender: EthAddress) {\n        // docs:end:context_consume_l1_to_l2_message\n        let nullifier = process_l1_to_l2_message(\n            self.historical_header.state.l1_to_l2_message_tree.root,\n            self.this_address(),\n            sender,\n            self.chain_id(),\n            self.version(),\n            content,\n            secret\n        );\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, 0)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, false, false)\n    }\n\n    pub fn static_call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, true, false)\n    }\n\n    pub fn delegate_call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, false, true)\n    }\n\n    pub fn call_private_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, false, false)\n    }\n\n    pub fn static_call_private_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, true, false)\n    }\n\n    pub fn delegate_call_private_function_no_args<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, false, true)\n    }\n\n    pub fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let mut is_static_call = is_static_call | self.inputs.call_context.is_static_call;\n        let item = call_private_function_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            self.side_effect_counter,\n            is_static_call,\n            is_delegate_call\n        );\n\n        assert_eq(item.public_inputs.call_context.side_effect_counter, self.side_effect_counter);\n        assert_eq(item.public_inputs.start_side_effect_counter, self.side_effect_counter);\n        self.side_effect_counter = item.public_inputs.end_side_effect_counter + 1;\n\n        assert(contract_address.eq(item.contract_address));\n        assert(function_selector.eq(item.function_data.selector));\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        assert(item.public_inputs.call_context.is_delegate_call == is_delegate_call);\n        assert(item.public_inputs.call_context.is_static_call == is_static_call);\n\n        if (is_delegate_call) {\n            // For delegate calls, we also constrain the execution context address for the nested call to be equal to our address.\n            assert(\n                item.public_inputs.call_context.storage_contract_address.eq(self.inputs.call_context.storage_contract_address)\n            );\n            assert(item.public_inputs.call_context.msg_sender.eq(self.inputs.call_context.msg_sender));\n        } else {\n            // For non-delegate calls, we also constrain the execution context address for the nested call to be equal to the address we called.\n            assert(item.public_inputs.call_context.storage_contract_address.eq(contract_address));\n            assert(\n                item.public_inputs.call_context.msg_sender.eq(self.inputs.call_context.storage_contract_address)\n            );\n        }\n\n        self.private_call_stack_hashes.push(item.hash());\n\n        item.public_inputs.return_values\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, false, false)\n    }\n\n    pub fn static_call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, true, false)\n    }\n\n    pub fn delegate_call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, false, true)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, false, false)\n    }\n\n    pub fn static_call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, true, false)\n    }\n\n    pub fn delegate_call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, false, true)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) {\n        let mut is_static_call = is_static_call | self.inputs.call_context.is_static_call;\n        let fields = enqueue_public_function_call_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            self.side_effect_counter,\n            is_static_call,\n            is_delegate_call\n        );\n\n        let mut reader = Reader::new(fields);\n\n        // Note: Not using PublicCirclePublicInputs::deserialize here, because everything below args_hash is 0 and\n        // there is no more data in fields because there is only ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE fields!\n        let item = PublicCallStackItem {\n            contract_address: AztecAddress::from_field(reader.read()),\n            function_data: reader.read_struct(FunctionData::deserialize),\n            public_inputs: PublicCircuitPublicInputs {\n                call_context: reader.read_struct(CallContext::deserialize),\n                args_hash: reader.read(),\n                return_values: [0; RETURN_VALUES_LENGTH],\n                nullifier_read_requests: [ReadRequest::empty(); MAX_NULLIFIER_READ_REQUESTS_PER_CALL],\n                nullifier_non_existent_read_requests: [ReadRequest::empty(); MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_CALL],\n                contract_storage_update_requests: [StorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n                contract_storage_reads: [StorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n                public_call_stack_hashes: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n                new_note_hashes: [SideEffect::empty(); MAX_NEW_NOTE_HASHES_PER_CALL],\n                new_nullifiers: [SideEffectLinkedToNoteHash::empty(); MAX_NEW_NULLIFIERS_PER_CALL],\n                new_l2_to_l1_msgs: [L2ToL1Message::empty(); MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n                start_side_effect_counter: 0,\n                end_side_effect_counter: 0,\n                unencrypted_logs_hash: 0,\n                unencrypted_log_preimages_length: 0,\n                historical_header: Header::empty(),\n                prover_address: AztecAddress::zero(),\n                revert_code: 0\n            },\n            is_execution_request: true\n        };\n        reader.finish();\n\n        assert(contract_address.eq(item.contract_address));\n        assert(function_selector.eq(item.function_data.selector));\n\n        assert_eq(item.public_inputs.call_context.side_effect_counter, self.side_effect_counter);\n        // We increment the sideffect counter by one, to account for the call itself being a side effect.\n        self.side_effect_counter = self.side_effect_counter + 1;\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        assert(item.public_inputs.call_context.is_delegate_call == is_delegate_call);\n        assert(item.public_inputs.call_context.is_static_call == is_static_call);\n\n        if (is_delegate_call) {\n            // For delegate calls, we also constrain the execution context address for the nested call to be equal to our address.\n            assert(\n                item.public_inputs.call_context.storage_contract_address.eq(self.inputs.call_context.storage_contract_address)\n            );\n            assert(item.public_inputs.call_context.msg_sender.eq(self.inputs.call_context.msg_sender));\n        } else {\n            // For non-delegate calls, we also constrain the execution context address for the nested call to be equal to the address we called.\n            assert(item.public_inputs.call_context.storage_contract_address.eq(contract_address));\n            assert(\n                item.public_inputs.call_context.msg_sender.eq(self.inputs.call_context.storage_contract_address)\n            );\n        }\n\n        self.public_call_stack_hashes.push(item.hash());\n    }\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/context/private_context.nr" }, "85": { "source": "use crate::context::{PrivateContext, PublicContext};\nuse crate::oracle;\nuse dep::protocol_types::{address::AztecAddress, grumpkin_point::GrumpkinPoint};\n\npub fn emit_encrypted_log<N>(\n    context: &mut PrivateContext,\n    contract_address: AztecAddress,\n    storage_slot: Field,\n    note_type_id: Field,\n    encryption_pub_key: GrumpkinPoint,\n    log: [Field; N]\n) {\n    let _ = oracle::logs::emit_encrypted_log(\n        contract_address,\n        storage_slot,\n        note_type_id,\n        encryption_pub_key,\n        log\n    );\n    context.accumulate_encrypted_logs(log);\n}\n\npub fn emit_unencrypted_log<T>(context: &mut PublicContext, log: T) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n\n// TODO: We might want to remove this since emitting unencrypted logs from private functions is violating privacy.\n// --> might be a better approach to force devs to make a public function call that emits the log if needed then\n// it would be less easy to accidentally leak information.\n// If we decide to keep this function around would make sense to wait for traits and then merge it with emit_unencrypted_log.\npub fn emit_unencrypted_log_from_private<T>(context: &mut PrivateContext, log: T) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/log.nr" }, "89": { "source": "use dep::protocol_types::{address::{AztecAddress, PartialAddress, PublicKeysHash}, grumpkin_point::GrumpkinPoint};\n\n#[oracle(getPublicKeyAndPartialAddress)]\nfn get_public_key_and_partial_address_oracle(_address: AztecAddress) -> [Field; 3] {}\n\nunconstrained fn get_public_key_and_partial_address_internal(address: AztecAddress) -> [Field; 3] {\n    get_public_key_and_partial_address_oracle(address)\n}\n\npub fn get_public_key(address: AztecAddress) -> GrumpkinPoint {\n    let result = get_public_key_and_partial_address_internal(address);\n    let pub_key = GrumpkinPoint::new(result[0], result[1]);\n    let partial_address = PartialAddress::from_field(result[2]);\n\n    let calculated_address = AztecAddress::compute(PublicKeysHash::compute(pub_key), partial_address);\n    assert(calculated_address.eq(address));\n\n    pub_key\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/oracle/get_public_key.nr" }, "92": { "source": "use dep::protocol_types::{address::AztecAddress, grumpkin_point::GrumpkinPoint, grumpkin_private_key::GrumpkinPrivateKey};\n\nstruct NullifierKeyPair {\n    account: AztecAddress,\n    public_key: GrumpkinPoint,\n    secret_key: GrumpkinPrivateKey,\n}\n\n#[oracle(getNullifierKeyPair)]\nfn get_nullifier_key_pair_oracle(_account: AztecAddress) -> [Field; 4] {}\n\nunconstrained fn get_nullifier_key_pair_internal(account: AztecAddress) -> NullifierKeyPair {\n    let result = get_nullifier_key_pair_oracle(account);\n    NullifierKeyPair {\n        account,\n        public_key: GrumpkinPoint { x: result[0], y: result[1] },\n        secret_key: GrumpkinPrivateKey { high: result[2], low: result[3] }\n    }\n}\n\npub fn get_nullifier_key_pair(account: AztecAddress) -> NullifierKeyPair {\n    get_nullifier_key_pair_internal(account)\n}\n\npub fn get_nullifier_secret_key(account: AztecAddress) -> GrumpkinPrivateKey {\n    get_nullifier_key_pair_internal(account).secret_key\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/oracle/nullifier_key.nr" }, "97": { "source": "use dep::protocol_types::{\n    abis::{function_selector::FunctionSelector, private_call_stack_item::PrivateCallStackItem},\n    address::AztecAddress, constants::PRIVATE_CALL_STACK_ITEM_LENGTH\n};\n\n#[oracle(callPrivateFunction)]\nfn call_private_function_oracle(\n    _contract_address: AztecAddress,\n    _function_selector: FunctionSelector,\n    _args_hash: Field,\n    _start_side_effect_counter: u32,\n    _is_static_call: bool,\n    _is_delegate_call: bool\n) -> [Field; PRIVATE_CALL_STACK_ITEM_LENGTH] {}\n\nunconstrained pub fn call_private_function_internal(\n    contract_address: AztecAddress,\n    function_selector: FunctionSelector,\n    args_hash: Field,\n    start_side_effect_counter: u32,\n    is_static_call: bool,\n    is_delegate_call: bool\n) -> PrivateCallStackItem {\n    let fields = call_private_function_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n        start_side_effect_counter,\n        is_static_call,\n        is_delegate_call\n    );\n\n    PrivateCallStackItem::deserialize(fields)\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/oracle/call_private_function.nr" }, "98": { "source": "use dep::protocol_types::{\n    abis::function_selector::FunctionSelector, address::AztecAddress,\n    constants::ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_LENGTH\n};\n\n#[oracle(enqueuePublicFunctionCall)]\nfn enqueue_public_function_call_oracle(\n    _contract_address: AztecAddress,\n    _function_selector: FunctionSelector,\n    _args_hash: Field,\n    _side_effect_counter: u32,\n    _is_static_call: bool,\n    _is_delegate_call: bool\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_LENGTH] {}\n\nunconstrained pub fn enqueue_public_function_call_internal(\n    contract_address: AztecAddress,\n    function_selector: FunctionSelector,\n    args_hash: Field,\n    side_effect_counter: u32,\n    is_static_call: bool,\n    is_delegate_call: bool\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_LENGTH] {\n    enqueue_public_function_call_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n        side_effect_counter,\n        is_static_call,\n        is_delegate_call\n    )\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/oracle/enqueue_public_function_call.nr" }, "99": { "source": "use dep::protocol_types::{\n    abis::nullifier_leaf_preimage::{NullifierLeafPreimage, NULLIFIER_LEAF_PREIMAGE_LENGTH},\n    constants::NULLIFIER_TREE_HEIGHT, hash::pedersen_hash, utils::arr_copy_slice\n};\n\n// INDEX_LENGTH + NULLIFIER_LEAF_PREIMAGE_LENGTH + NULLIFIER_TREE_HEIGHT\nglobal NULLIFIER_MEMBERSHIP_WITNESS: Field = 24;\n\nstruct NullifierMembershipWitness {\n    index: Field,\n    leaf_preimage: NullifierLeafPreimage,\n    path: [Field; NULLIFIER_TREE_HEIGHT],\n}\n\nimpl NullifierMembershipWitness {\n    pub fn deserialize(fields: [Field; NULLIFIER_MEMBERSHIP_WITNESS]) -> Self {\n        let leaf_preimage_fields = arr_copy_slice(fields, [0; NULLIFIER_LEAF_PREIMAGE_LENGTH], 1);\n        Self {\n            index: fields[0],\n            leaf_preimage: NullifierLeafPreimage::deserialize(leaf_preimage_fields),\n            path: arr_copy_slice(\n                fields,\n                [0; NULLIFIER_TREE_HEIGHT],\n                1 + NULLIFIER_LEAF_PREIMAGE_LENGTH\n            )\n        }\n    }\n}\n\n#[oracle(getLowNullifierMembershipWitness)]\nfn get_low_nullifier_membership_witness_oracle(\n    _block_number: u32,\n    _nullifier: Field\n) -> [Field; NULLIFIER_MEMBERSHIP_WITNESS] {}\n\n// Nullifier here refers to the nullifier we are looking to get non-inclusion proof for (by proving that a lower\n// nullifier's next_value is bigger than the nullifier)\nunconstrained pub fn get_low_nullifier_membership_witness(block_number: u32, nullifier: Field) -> NullifierMembershipWitness {\n    let fields = get_low_nullifier_membership_witness_oracle(block_number, nullifier);\n    NullifierMembershipWitness::deserialize(fields)\n}\n\n#[oracle(getNullifierMembershipWitness)]\nfn get_nullifier_membership_witness_oracle(\n    _block_number: u32,\n    _nullifier: Field\n) -> [Field; NULLIFIER_MEMBERSHIP_WITNESS] {}\n\n// Nullifier here refers to the nullifier we are looking to get non-inclusion proof for (by proving that a lower\n// nullifier's next_value is bigger than the nullifier)\nunconstrained pub fn get_nullifier_membership_witness(block_number: u32, nullifier: Field) -> NullifierMembershipWitness {\n    let fields = get_nullifier_membership_witness_oracle(block_number, nullifier);\n    NullifierMembershipWitness::deserialize(fields)\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/oracle/get_nullifier_membership_witness.nr" }, "102": { "source": "use dep::protocol_types::{address::AztecAddress, contract_instance::ContractInstance, constants::CONTRACT_INSTANCE_LENGTH};\n\n#[oracle(getContractInstance)]\nfn get_contract_instance_oracle(_address: AztecAddress) -> [Field; CONTRACT_INSTANCE_LENGTH] {}\n\nunconstrained fn get_contract_instance_internal(address: AztecAddress) -> [Field; CONTRACT_INSTANCE_LENGTH] {\n    get_contract_instance_oracle(address)\n}\n\npub fn get_contract_instance(address: AztecAddress) -> ContractInstance {\n    let instance = ContractInstance::deserialize(get_contract_instance_internal(address));\n    assert(instance.to_address().eq(address));\n    instance\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/oracle/get_contract_instance.nr" }, "103": { "source": "use crate::note::{note_header::NoteHeader, note_interface::NoteInterface};\n\nuse dep::protocol_types::{address::AztecAddress, utils::arr_copy_slice};\n\n#[oracle(notifyCreatedNote)]\nfn notify_created_note_oracle<N>(\n    _storage_slot: Field,\n    _note_type_id: Field,\n    _serialized_note: [Field; N],\n    _inner_note_hash: Field\n) -> Field {}\n\nunconstrained pub fn notify_created_note<N>(\n    storage_slot: Field,\n    note_type_id: Field,\n    serialized_note: [Field; N],\n    inner_note_hash: Field\n) -> Field {\n    notify_created_note_oracle(storage_slot, note_type_id, serialized_note, inner_note_hash)\n}\n\n#[oracle(notifyNullifiedNote)]\nfn notify_nullified_note_oracle<N>(_nullifier: Field, _inner_note_hash: Field) -> Field {}\n\nunconstrained pub fn notify_nullified_note<N>(nullifier: Field, inner_note_hash: Field) -> Field {\n    notify_nullified_note_oracle(nullifier, inner_note_hash)\n}\n\n#[oracle(getNotes)]\nfn get_notes_oracle<N, S>(\n    _storage_slot: Field,\n    _num_selects: u8,\n    _select_by_indexes: [u8; N],\n    _select_by_offsets: [u8; N],\n    _select_by_lengths: [u8; N],\n    _select_values: [Field; N],\n    _select_comparators: [u8; N],\n    _sort_by_indexes: [u8; N],\n    _sort_by_offsets: [u8; N],\n    _sort_by_lengths: [u8; N],\n    _sort_order: [u8; N],\n    _limit: u32,\n    _offset: u32,\n    _status: u8,\n    _return_size: u32,\n    _placeholder_fields: [Field; S]\n) -> [Field; S] {}\n\nunconstrained fn get_notes_oracle_wrapper<N, S>(\n    storage_slot: Field,\n    num_selects: u8,\n    select_by_indexes: [u8; N],\n    select_by_offsets: [u8; N],\n    select_by_lengths: [u8; N],\n    select_values: [Field; N],\n    select_comparators: [u8; N],\n    sort_by_indexes: [u8; N],\n    sort_by_offsets: [u8; N],\n    sort_by_lengths: [u8; N],\n    sort_order: [u8; N],\n    limit: u32,\n    offset: u32,\n    status: u8,\n    mut placeholder_fields: [Field; S]\n) -> [Field; S] {\n    let return_size = placeholder_fields.len() as u32;\n    get_notes_oracle(\n        storage_slot,\n        num_selects,\n        select_by_indexes,\n        select_by_offsets,\n        select_by_lengths,\n        select_values,\n        select_comparators,\n        sort_by_indexes,\n        sort_by_offsets,\n        sort_by_lengths,\n        sort_order,\n        limit,\n        offset,\n        status,\n        return_size,\n        placeholder_fields\n    )\n}\n\nunconstrained pub fn get_notes<Note, N, M, S, NS>(\n    storage_slot: Field,\n    num_selects: u8,\n    select_by_indexes: [u8; M],\n    select_by_offsets: [u8; M],\n    select_by_lengths: [u8; M],\n    select_values: [Field; M],\n    select_comparators: [u8; M],\n    sort_by_indexes: [u8; M],\n    sort_by_offsets: [u8; M],\n    sort_by_lengths: [u8; M],\n    sort_order: [u8; M],\n    limit: u32,\n    offset: u32,\n    status: u8,\n    mut placeholder_opt_notes: [Option<Note>; S], // TODO: Remove it and use `limit` to initialize the note array.\n    placeholder_fields: [Field; NS], // TODO: Remove it and use `limit` to initialize the note array.\n    _placeholder_note_length: [Field; N] // Turbofish hack? Compiler breaks calculating read_offset unless we add this parameter\n) -> [Option<Note>; S] where Note: NoteInterface<N> {\n    let fields = get_notes_oracle_wrapper(\n        storage_slot,\n        num_selects,\n        select_by_indexes,\n        select_by_offsets,\n        select_by_lengths,\n        select_values,\n        select_comparators,\n        sort_by_indexes,\n        sort_by_offsets,\n        sort_by_lengths,\n        sort_order,\n        limit,\n        offset,\n        status,\n        placeholder_fields\n    );\n    let num_notes = fields[0] as u64;\n    let contract_address = AztecAddress::from_field(fields[1]);\n    for i in 0..placeholder_opt_notes.len() {\n        if i < num_notes {\n            // lengths named as per typescript.\n            let return_header_length: u64 = 2; // num_notes & contract_address.\n            let extra_preimage_length: u64 = 2; // nonce & is_transient.\n            let read_offset: u64 = return_header_length + i * (N + extra_preimage_length);\n            let nonce = fields[read_offset];\n            let is_transient = fields[read_offset + 1] as bool;\n            let header = NoteHeader { contract_address, nonce, storage_slot, is_transient };\n            let serialized_note = arr_copy_slice(fields, [0; N], read_offset + 2);\n            let mut note = Note::deserialize_content(serialized_note);\n            // TODO: change this to note.set_header(header) once https://github.com/noir-lang/noir/issues/4095 is fixed\n            Note::set_header(&mut note, header);\n            placeholder_opt_notes[i] = Option::some(note);\n        };\n    }\n    placeholder_opt_notes\n}\n\n#[oracle(checkNullifierExists)]\nfn check_nullifier_exists_oracle(_inner_nullifier: Field) -> Field {}\n\nunconstrained pub fn check_nullifier_exists(inner_nullifier: Field) -> bool {\n    check_nullifier_exists_oracle(inner_nullifier) == 1\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/oracle/notes.nr" }, "105": { "source": "use dep::protocol_types::{address::AztecAddress, grumpkin_point::GrumpkinPoint};\n\n// TODO: Should take encrypted data.\n#[oracle(emitEncryptedLog)]\nfn emit_encrypted_log_oracle<N>(\n    _contract_address: AztecAddress,\n    _storage_slot: Field,\n    _note_type_id: Field,\n    _encryption_pub_key: GrumpkinPoint,\n    _preimage: [Field; N]\n) -> Field {}\n\nunconstrained pub fn emit_encrypted_log<N>(\n    contract_address: AztecAddress,\n    storage_slot: Field,\n    note_type_id: Field,\n    encryption_pub_key: GrumpkinPoint,\n    preimage: [Field; N]\n) -> Field {\n    emit_encrypted_log_oracle(\n        contract_address,\n        storage_slot,\n        note_type_id,\n        encryption_pub_key,\n        preimage\n    )\n}\n\n#[oracle(emitUnencryptedLog)]\nfn emit_unencrypted_log_oracle<T>(\n    _contract_address: AztecAddress,\n    _event_selector: Field,\n    _message: T\n) -> Field {}\n\nunconstrained pub fn emit_unencrypted_log<T>(\n    contract_address: AztecAddress,\n    event_selector: Field,\n    message: T\n) -> Field {\n    // https://github.com/AztecProtocol/aztec-packages/issues/885\n    emit_unencrypted_log_oracle(contract_address, event_selector, message)\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/oracle/logs.nr" }, "106": { "source": "use dep::protocol_types::traits::{Deserialize, Serialize};\n\n#[oracle(storageRead)]\nfn storage_read_oracle<N>(_storage_slot: Field, _number_of_elements: Field) -> [Field; N] {}\n\nunconstrained fn storage_read_oracle_wrapper<N>(_storage_slot: Field) -> [Field; N] {\n    storage_read_oracle(_storage_slot, N)\n}\n\npub fn storage_read<N>(storage_slot: Field) -> [Field; N] {\n    storage_read_oracle_wrapper(storage_slot)\n}\n\n#[oracle(storageWrite)]\nfn storage_write_oracle<N>(_storage_slot: Field, _values: [Field; N]) -> [Field; N] {}\n\nunconstrained pub fn storage_write<N>(storage_slot: Field, fields: [Field; N]) {\n    let _hash = storage_write_oracle(storage_slot, fields);\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/oracle/storage.nr" }, "109": { "source": "mod globals;\nmod inputs;\n\nmod private_context;\nmod public_context;\nmod avm_context;\nmod interface;\n\nuse interface::ContextInterface;\nuse private_context::PrivateContext;\nuse public_context::PublicContext;\nuse avm_context::AvmContext;\n\nstruct Context {\n    private: Option<&mut PrivateContext>,\n    public: Option<&mut PublicContext>,\n    avm: Option<&mut AvmContext>,\n}\n\nimpl Context {\n    pub fn private(context: &mut PrivateContext) -> Context {\n        Context { private: Option::some(context), public: Option::none(), avm: Option::none() }\n    }\n\n    pub fn public(context: &mut PublicContext) -> Context {\n        Context { public: Option::some(context), private: Option::none(), avm: Option::none() }\n    }\n\n    pub fn avm(context: &mut AvmContext) -> Context {\n        Context { avm: Option::some(context), public: Option::none(), private: Option::none() }\n    }\n\n    pub fn none() -> Context {\n        Context { public: Option::none(), private: Option::none(), avm: Option::none() }\n    }\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/context.nr" }, "111": { "source": "use dep::protocol_types::{\n    address::{AztecAddress, EthAddress},\n    constants::{GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET, GENERATOR_INDEX__NULLIFIER},\n    hash::{pedersen_hash, silo_nullifier}\n};\n\nuse dep::protocol_types::hash::{hash_args, hash_args_array, sha256_to_field};\n\npub fn compute_secret_hash(secret: Field) -> Field {\n    // TODO(#1205) This is probably not the right index to use\n    pedersen_hash([secret], GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET)\n}\n\npub fn compute_message_hash(\n    sender: EthAddress,\n    chain_id: Field,\n    recipient: AztecAddress,\n    version: Field,\n    content: Field,\n    secret_hash: Field\n) -> Field {\n    let mut hash_bytes = [0 as u8; 192];\n    let sender_bytes = sender.to_field().to_be_bytes(32);\n    let chain_id_bytes = chain_id.to_be_bytes(32);\n    let recipient_bytes = recipient.to_field().to_be_bytes(32);\n    let version_bytes = version.to_be_bytes(32);\n    let content_bytes = content.to_be_bytes(32);\n    let secret_hash_bytes = secret_hash.to_be_bytes(32);\n\n    for i in 0..32 {\n        hash_bytes[i] = sender_bytes[i];\n        hash_bytes[i + 32] = chain_id_bytes[i];\n        hash_bytes[i + 64] = recipient_bytes[i];\n        hash_bytes[i + 96] = version_bytes[i];\n        hash_bytes[i + 128] = content_bytes[i];\n        hash_bytes[i + 160] = secret_hash_bytes[i];\n    }\n\n    sha256_to_field(hash_bytes)\n}\n\n// The nullifier of a l1 to l2 message is the hash of the message salted with the secret and index of the message hash\n// in the L1 to L2 message tree\npub fn compute_message_nullifier(message_hash: Field, secret: Field, leaf_index: Field) -> Field {\n    pedersen_hash(\n        [message_hash, secret, leaf_index],\n        GENERATOR_INDEX__NULLIFIER\n    )\n}\n\npub fn compute_siloed_nullifier(address: AztecAddress, nullifier: Field) -> Field {\n    silo_nullifier(address, nullifier)\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/hash.nr" }, "113": { "source": "use dep::protocol_types::{\n    hash::{silo_nullifier, pedersen_hash}, constants::GENERATOR_INDEX__CONSTRUCTOR,\n    abis::function_selector::FunctionSelector\n};\n\nuse crate::{\n    context::{PrivateContext, PublicContext, ContextInterface},\n    oracle::get_contract_instance::get_contract_instance,\n    history::nullifier_inclusion::prove_nullifier_inclusion\n};\n\npub fn mark_as_initialized<TContext>(context: &mut TContext) where TContext: ContextInterface {\n    let init_nullifier = compute_unsiloed_contract_initialization_nullifier(*context);\n    ContextInterface::push_new_nullifier(context, init_nullifier, 0);\n}\n\npub fn assert_is_initialized<TContext>(context: &mut TContext) where TContext: ContextInterface {\n    let init_nullifier = compute_contract_initialization_nullifier(*context);\n    prove_nullifier_inclusion(init_nullifier, *context);\n}\n\npub fn compute_contract_initialization_nullifier<TContext>(context: TContext) -> Field where TContext: ContextInterface {\n    let address = context.this_address();\n    silo_nullifier(\n        address,\n        compute_unsiloed_contract_initialization_nullifier(context)\n    )\n}\n\npub fn compute_unsiloed_contract_initialization_nullifier<TContext>(context: TContext) -> Field where TContext: ContextInterface {\n    context.this_address().to_field()\n}\n\npub fn assert_initialization_matches_address_preimage<TContext>(context: TContext) where TContext: ContextInterface {\n    let address = context.this_address();\n    let instance = get_contract_instance(address);\n    let expected_init = compute_initialization_hash(context.selector(), context.get_args_hash());\n    assert(instance.initialization_hash == expected_init, \"Initialization hash does not match\");\n    assert(\n        (instance.deployer.is_zero()) | (instance.deployer == context.msg_sender()), \"Initializer address is not the contract deployer\"\n    );\n}\n\npub fn compute_initialization_hash(init_selector: FunctionSelector, init_args_hash: Field) -> Field {\n    pedersen_hash(\n        [init_selector.to_field(), init_args_hash],\n        GENERATOR_INDEX__CONSTRUCTOR\n    )\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/initializer.nr" }, "114": { "source": "use dep::protocol_types::address::AztecAddress;\nuse dep::protocol_types::traits::{Empty, Serialize};\n\nstruct NoteHeader {\n    contract_address: AztecAddress,\n    nonce: Field,\n    storage_slot: Field,\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1386)\n    // Remove this and check the nonce to see whether a note is transient or not.\n    is_transient: bool,\n}\n\nimpl Empty for NoteHeader {\n    fn empty() -> Self {\n        NoteHeader { contract_address: AztecAddress::zero(), nonce: 0, storage_slot: 0, is_transient: false }\n    }\n}\n\nimpl NoteHeader {\n    pub fn new(contract_address: AztecAddress, nonce: Field, storage_slot: Field) -> Self {\n        NoteHeader { contract_address, nonce, storage_slot, is_transient: false }\n    }\n}\n\nimpl Serialize<4> for NoteHeader {\n    fn serialize(self) -> [Field; 4] {\n        [self.contract_address.to_field(), self.nonce, self.storage_slot, self.is_transient as Field]\n    }\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/note/note_header.nr" }, "115": { "source": "use dep::std::option::Option;\nuse crate::note::note_getter_options::{PropertySelector, Select, Sort, Comparator, NoteStatus};\nuse dep::protocol_types::{constants::MAX_NOTES_PER_PAGE, traits::ToField};\nuse crate::note::note_interface::NoteInterface;\n\n// docs:start:NoteViewerOptions\nstruct NoteViewerOptions<Note, N> {\n    selects: BoundedVec<Option<Select>, N>,\n    sorts: BoundedVec<Option<Sort>, N>,\n    limit: u32,\n    offset: u32,\n    status: u8,\n}\n// docs:end:NoteViewerOptions\n\nimpl<Note, N> NoteViewerOptions<Note, N> {\n    pub fn new() -> NoteViewerOptions<Note, N> where Note: NoteInterface<N> {\n        NoteViewerOptions {\n            selects: BoundedVec::new(),\n            sorts: BoundedVec::new(),\n            limit: MAX_NOTES_PER_PAGE as u32,\n            offset: 0,\n            status: NoteStatus.ACTIVE\n        }\n    }\n\n    // This method adds a `Select` criterion to the options.\n    // It takes a field_index indicating which field to select,\n    // a value representing the specific value to match in that field, and\n    // a comparator (For possible values of comparators, please see the Comparator enum from note_getter_options)\n    pub fn select<T>(\n        &mut self,\n        property_selector: PropertySelector,\n        value: T,\n        comparator: Option<u8>\n    ) -> Self where T: ToField {\n        self.selects.push(\n            Option::some(\n                Select::new(\n                    property_selector,\n                    value.to_field(),\n                    comparator.unwrap_or(Comparator.EQ)\n                )\n            )\n        );\n        *self\n    }\n\n    pub fn sort(&mut self, property_selector: PropertySelector, order: u8) -> Self {\n        self.sorts.push(Option::some(Sort::new(property_selector, order)));\n        *self\n    }\n\n    pub fn set_limit(&mut self, limit: u32) -> Self {\n        assert(limit <= MAX_NOTES_PER_PAGE as u32);\n        self.limit = limit;\n        *self\n    }\n\n    pub fn set_offset(&mut self, offset: u32) -> Self {\n        self.offset = offset;\n        *self\n    }\n\n    // This method sets the status value, which determines whether to retrieve active or nullified notes.\n    pub fn set_status(&mut self, status: u8) -> Self {\n        self.status = status;\n        *self\n    }\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/note/note_viewer_options.nr" }, "117": { "source": "use crate::context::{PrivateContext, PublicContext};\nuse crate::note::{\n    note_header::NoteHeader, note_interface::NoteInterface,\n    utils::{compute_note_hash_for_insertion, compute_note_hash_for_consumption}\n};\nuse crate::oracle::notes::{notify_created_note, notify_nullified_note};\n\npub fn create_note<Note, N>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note: &mut Note,\n    broadcast: bool\n) where Note: NoteInterface<N> {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    // TODO: change this to note.set_header(header) once https://github.com/noir-lang/noir/issues/4095 is fixed\n    Note::set_header(note, header);\n    // As `is_transient` is true, this will compute the inner note hsah\n    let inner_note_hash = compute_note_hash_for_insertion(*note);\n\n    // TODO: Strong typing required because of https://github.com/noir-lang/noir/issues/4088\n    let serialized_note: [Field; N] = Note::serialize_content(*note);\n    assert(\n        notify_created_note(\n        storage_slot,\n        Note::get_note_type_id(),\n        serialized_note,\n        inner_note_hash\n    )\n        == 0\n    );\n\n    context.push_new_note_hash(inner_note_hash);\n\n    if broadcast {\n        Note::broadcast(*note, context, storage_slot);\n    }\n}\n\npub fn create_note_hash_from_public<Note, N>(\n    context: &mut PublicContext,\n    storage_slot: Field,\n    note: &mut Note\n) where Note: NoteInterface<N> {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    // TODO: change this to note.set_header(header) once https://github.com/noir-lang/noir/issues/4095 is fixed\n    Note::set_header(note, header);\n    let inner_note_hash = compute_note_hash_for_insertion(*note);\n\n    context.push_new_note_hash(inner_note_hash);\n}\n\npub fn destroy_note<Note, N>(context: &mut PrivateContext, note: Note) where Note: NoteInterface<N> {\n    let mut nullifier = 0;\n    let mut consumed_note_hash: Field = 0;\n    nullifier = note.compute_nullifier(context);\n\n    // We also need the note hash corresponding to the \"nullifier\"\n    let header = note.get_header();\n    // `consumed_note_hash` is used to inform the kernel which pending note hash\n    // the nullifier corresponds to so they can be matched and both squashed/deleted.\n    // nonzero nonce implies \"persistable\" nullifier (nullifies a persistent/in-tree\n    // note hash) in which case `consumed_note_hash` is not used since the kernel\n    // just siloes and forwards the nullifier to its output.\n    if (header.is_transient) {\n        // TODO(1718): Can we reuse the note hash computed in `compute_nullifier`?\n        consumed_note_hash = compute_note_hash_for_consumption(note);\n    }\n    assert(notify_nullified_note(nullifier, consumed_note_hash) == 0);\n\n    context.push_new_nullifier(nullifier, consumed_note_hash)\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/note/lifecycle.nr" }, "120": { "source": "use crate::{context::PrivateContext, note::{note_header::NoteHeader, note_interface::NoteInterface}};\n\nuse dep::protocol_types::{\n    address::AztecAddress,\n    constants::{GENERATOR_INDEX__OUTER_NULLIFIER, GENERATOR_INDEX__UNIQUE_NOTE_HASH, GENERATOR_INDEX__SILOED_NOTE_HASH},\n    hash::pedersen_hash, utils::arr_copy_slice\n};\n\nfn compute_siloed_hash(contract_address: AztecAddress, inner_note_hash: Field) -> Field {\n    let inputs = [contract_address.to_field(), inner_note_hash];\n    pedersen_hash(inputs, GENERATOR_INDEX__SILOED_NOTE_HASH)\n}\n\nfn compute_unique_hash(nonce: Field, siloed_note_hash: Field) -> Field {\n    let inputs = [nonce, siloed_note_hash];\n    pedersen_hash(inputs, GENERATOR_INDEX__UNIQUE_NOTE_HASH)\n}\n\nfn compute_inner_note_hash<Note, N>(note: Note) -> Field where Note: NoteInterface<N> {\n    let header = note.get_header();\n    let note_hash = note.compute_note_content_hash();\n\n    // TODO(#1205) Do we need a generator index here?\n    pedersen_hash([header.storage_slot, note_hash], 0)\n}\n\nfn compute_siloed_note_hash<Note, N>(note_with_header: Note) -> Field where Note: NoteInterface<N> {\n    let header = note_with_header.get_header();\n\n    let inner_note_hash = compute_inner_note_hash(note_with_header);\n\n    compute_siloed_hash(header.contract_address, inner_note_hash)\n}\n\nfn compute_unique_siloed_note_hash<Note, N>(note_with_header: Note) -> Field where Note: NoteInterface<N> {\n    let header = note_with_header.get_header();\n\n    let siloed_note_hash = compute_siloed_note_hash(note_with_header);\n\n    compute_unique_hash(header.nonce, siloed_note_hash)\n}\n\npub fn compute_siloed_nullifier<Note, N>(\n    note_with_header: Note,\n    context: &mut PrivateContext\n) -> Field where Note: NoteInterface<N> {\n    let header = note_with_header.get_header();\n    let inner_nullifier = note_with_header.compute_nullifier(context);\n\n    let input = [header.contract_address.to_field(), inner_nullifier];\n    pedersen_hash(input, GENERATOR_INDEX__OUTER_NULLIFIER)\n}\n\npub fn compute_note_hash_for_insertion<Note, N>(note: Note) -> Field where Note: NoteInterface<N> {\n    compute_inner_note_hash(note)\n}\n\npub fn compute_note_hash_for_consumption<Note, N>(note: Note) -> Field where Note: NoteInterface<N> {\n    let header = note.get_header();\n    // There are 3 cases for reading a note intended for consumption:\n    // 1. The note was inserted in this transaction, and is transient.\n    // 2. The note was inserted in a previous transaction, and was inserted in public\n    // 3. The note was inserted in a previous transaction, and was inserted in private\n\n    if (header.is_transient) {\n        // If a note is transient, we just read the inner_note_hash (kernel will silo by contract address).\n        compute_inner_note_hash(note)\n    } else if (header.nonce == 0) {\n        // If not transient and nonce is zero, that means we are reading a public note.\n        compute_siloed_note_hash(note)\n    } else {\n        // When nonce is nonzero, that means we are reading a settled note (from tree) created in a\n        // previous TX. So we need the unique_siloed_note_hash which has already been hashed with\n        // contract address and then nonce. This hash will match the existing leaf in the private\n        // data tree, so the kernel can just perform a membership check directly on this hash/leaf.\n        compute_unique_siloed_note_hash(note)\n        // IMPORTANT NOTE ON REDUNDANT SILOING BY CONTRACT ADDRESS: The note hash computed above is\n        // \"siloed\" by contract address. When a note hash is computed solely for the purpose of\n        // nullification, it is not strictly necessary to silo the note hash before computing\n        // its nullifier. In other words, it is NOT NECESSARY for protocol security that a nullifier\n        // be computed from a siloed note hash. After all, persistable note hashes and nullifiers are\n        // siloed by the kernel circuit. That being said, the siloed note hash computed above CAN be\n        // used for nullifier computation, and this achieves the (arguably unnecessary) property that\n        // nullifiers are computed from a note hash's fully-computed private data tree leaf.\n    }\n}\n\npub fn compute_note_hash_and_nullifier<T, N, S>(\n    // docs:start:compute_note_hash_and_nullifier_args\n    deserialize_content: fn([Field; N]) -> T,\n    note_header: NoteHeader,\n    serialized_note: [Field; S] // docs:end:compute_note_hash_and_nullifier_args\n) -> [Field; 4] where T: NoteInterface<N> {\n    let mut note = deserialize_content(arr_copy_slice(serialized_note, [0; N], 0));\n    // TODO: change this to note.set_header(header) once https://github.com/noir-lang/noir/issues/4095 is fixed\n    T::set_header((&mut note), note_header);\n\n    let inner_note_hash = compute_inner_note_hash(note);\n\n    let siloed_note_hash = compute_siloed_hash(note_header.contract_address, inner_note_hash);\n\n    let unique_siloed_note_hash = compute_unique_hash(note_header.nonce, siloed_note_hash);\n\n    let inner_nullifier = note.compute_nullifier_without_context();\n    // docs:start:compute_note_hash_and_nullifier_returns\n    [inner_note_hash, siloed_note_hash, unique_siloed_note_hash, inner_nullifier]\n    // docs:end:compute_note_hash_and_nullifier_returns\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/note/utils.nr" }, "121": { "source": "use dep::protocol_types::{\n    constants::{\n    MAX_NOTE_HASH_READ_REQUESTS_PER_CALL, GET_NOTE_ORACLE_RETURN_LENGTH, GET_NOTES_ORACLE_RETURN_LENGTH,\n    MAX_NOTES_PER_PAGE, VIEW_NOTE_ORACLE_RETURN_LENGTH\n}\n};\nuse crate::context::PrivateContext;\nuse crate::note::{\n    note_getter_options::{NoteGetterOptions, Select, Sort, SortOrder, Comparator, NoteStatus, PropertySelector},\n    note_interface::NoteInterface, note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_consumption\n};\nuse crate::oracle;\n\nfn extract_property_value_from_selector<N>(serialized_note: [Field; N], selector: PropertySelector) -> Field {\n    // Selectors use PropertySelectors in order to locate note properties inside the serialized note. \n    // This allows easier packing and custom (de)serialization schemas. A note property is located\n    // inside the serialized note using the index inside the array, a byte offset and a length.\n    let value = serialized_note[selector.index].to_be_bytes(32);\n    let offset = selector.offset;\n    let length = selector.length;\n    let mut value_field = 0 as Field;\n    let mut acc: Field = 1;\n    for i in 0..32 {\n        if i < length {\n            value_field += value[31 + offset - i] as Field * acc;\n            acc = acc * 256;\n        }\n    }\n    value_field\n}\n\nfn check_note_header<Note, N>(context: PrivateContext, storage_slot: Field, note: Note) where Note: NoteInterface<N> {\n    let header = note.get_header();\n    let contract_address = context.this_address();\n    assert(header.contract_address.eq(contract_address));\n    assert(header.storage_slot == storage_slot);\n}\n\nfn check_note_fields<N>(serialized_note: [Field; N], selects: BoundedVec<Option<Select>, N>) {\n    for i in 0..selects.len {\n        let select = selects.get_unchecked(i).unwrap_unchecked();\n        let value_field = extract_property_value_from_selector(serialized_note, select.property_selector);\n\n        // Values are computed ahead of time because circuits evaluate all branches\n        let is_equal = value_field == select.value.to_field();\n        let is_lt = value_field.lt(select.value.to_field());\n\n        if (select.comparator == Comparator.EQ) {\n            assert(is_equal, \"Mismatch return note field.\");\n        } else if (select.comparator == Comparator.NEQ) {\n            assert(!is_equal, \"Mismatch return note field.\");\n        } else if (select.comparator == Comparator.LT) {\n            assert(is_lt, \"Mismatch return note field.\");\n        } else if (select.comparator == Comparator.LTE) {\n            assert(is_lt | is_equal, \"Mismatch return note field.\");\n        } else if (select.comparator == Comparator.GT) {\n            assert(!is_lt & !is_equal, \"Mismatch return note field.\");\n        } else if (select.comparator == Comparator.GTE) {\n            assert(!is_lt, \"Mismatch return note field.\");\n        }\n    }\n}\n\nfn check_notes_order<N>(\n    fields_0: [Field; N],\n    fields_1: [Field; N],\n    sorts: BoundedVec<Option<Sort>, N>\n) {\n    for i in 0..sorts.len {\n        let sort = sorts.get_unchecked(i).unwrap_unchecked();\n        let field_0 = extract_property_value_from_selector(fields_0, sort.property_selector);\n        let field_1 = extract_property_value_from_selector(fields_1, sort.property_selector);\n        let eq = field_0 == field_1;\n        let lt = field_0.lt(field_1);\n        if sort.order == SortOrder.ASC {\n            assert(eq | lt, \"Return notes not sorted in ascending order.\");\n        } else if !eq {\n            assert(!lt, \"Return notes not sorted in descending order.\");\n        }\n    }\n}\n\npub fn get_note<Note, N>(\n    context: &mut PrivateContext,\n    storage_slot: Field\n) -> Note where Note: NoteInterface<N> {\n    let note = get_note_internal(storage_slot);\n\n    check_note_header(*context, storage_slot, note);\n\n    let note_hash_for_read_request = compute_note_hash_for_consumption(note);\n\n    context.push_note_hash_read_request(note_hash_for_read_request);\n    note\n}\n\npub fn get_notes<Note, N, FILTER_ARGS>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>\n) -> [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL] where Note: NoteInterface<N> {\n    let opt_notes = get_notes_internal(storage_slot, options);\n\n    _get_notes_constrain_get_notes_internal(context, storage_slot, opt_notes, options)\n}\n\npub fn _get_notes_constrain_get_notes_internal<Note, N, FILTER_ARGS>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    opt_notes: [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL],\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>\n) -> [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL] where Note: NoteInterface<N> {\n    let mut returned_notes = [Option::none(); MAX_NOTE_HASH_READ_REQUESTS_PER_CALL];\n\n    let mut num_notes = 0;\n    let mut prev_fields = [0; N];\n    for i in 0..opt_notes.len() {\n        let opt_note = opt_notes[i];\n        if opt_note.is_some() {\n            let note = opt_note.unwrap_unchecked();\n            let fields = note.serialize_content();\n            check_note_header(*context, storage_slot, note);\n            check_note_fields(fields, options.selects);\n            if i != 0 {\n                check_notes_order(prev_fields, fields, options.sorts);\n            }\n            prev_fields = fields;\n\n            let note_hash_for_read_request = compute_note_hash_for_consumption(note);\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1410): test to ensure\n            // failure if malicious oracle injects 0 nonce here for a \"pre-existing\" note.\n            context.push_note_hash_read_request(note_hash_for_read_request);\n\n            // The below code is used to collapse a sparse array into one where the values are guaranteed to be at the front of the array\n            // We write at returned_notes[num_notes] because num_notes is only advanced when we have a value in opt_notes\n            returned_notes[num_notes] = Option::some(note);\n            num_notes += 1;\n        };\n    }\n    if options.limit != 0 {\n        assert(num_notes <= options.limit, \"Invalid number of return notes.\");\n    }\n\n    assert(num_notes != 0, \"Cannot return zero notes\");\n\n    returned_notes\n}\n\nunconstrained fn get_note_internal<Note, N>(storage_slot: Field) -> Note where Note: NoteInterface<N> {\n    let placeholder_note = [Option::none()];\n    let placeholder_fields = [0; GET_NOTE_ORACLE_RETURN_LENGTH];\n    let placeholder_note_length = [0; N];\n    oracle::notes::get_notes(\n        storage_slot,\n        0,\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        1, // limit\n        0, // offset\n        NoteStatus.ACTIVE,\n        placeholder_note,\n        placeholder_fields,\n        placeholder_note_length\n    )[0].unwrap() // Notice: we don't allow dummies to be returned from get_note (singular).\n}\n\nunconstrained fn get_notes_internal<Note, N, FILTER_ARGS>(\n    storage_slot: Field,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>\n) -> [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL] where Note: NoteInterface<N> {\n    let (num_selects, select_by_indexes, select_by_offsets, select_by_lengths, select_values, select_comparators, sort_by_indexes, sort_by_offsets, sort_by_lengths, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_NOTE_HASH_READ_REQUESTS_PER_CALL];\n    let placeholder_fields = [0; GET_NOTES_ORACLE_RETURN_LENGTH];\n    let placeholder_note_length = [0; N];\n    let opt_notes = oracle::notes::get_notes(\n        storage_slot,\n        num_selects,\n        select_by_indexes,\n        select_by_offsets,\n        select_by_lengths,\n        select_values,\n        select_comparators,\n        sort_by_indexes,\n        sort_by_offsets,\n        sort_by_lengths,\n        sort_order,\n        options.limit,\n        options.offset,\n        options.status,\n        placeholder_opt_notes,\n        placeholder_fields,\n        placeholder_note_length\n    );\n\n    let filter = options.filter;\n    let filter_args = options.filter_args;\n    filter(opt_notes, filter_args)\n}\n\nunconstrained pub fn view_notes<Note, N>(\n    storage_slot: Field,\n    options: NoteViewerOptions<Note, N>\n) -> [Option<Note>; MAX_NOTES_PER_PAGE] where Note: NoteInterface<N> {\n    let (num_selects, select_by_indexes, select_by_offsets, select_by_lengths, select_values, select_comparators, sort_by_indexes, sort_by_offsets, sort_by_lengths, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_NOTES_PER_PAGE];\n    let placeholder_fields = [0; VIEW_NOTE_ORACLE_RETURN_LENGTH];\n    let placeholder_note_length = [0; N];\n    oracle::notes::get_notes(\n        storage_slot,\n        num_selects,\n        select_by_indexes,\n        select_by_offsets,\n        select_by_lengths,\n        select_values,\n        select_comparators,\n        sort_by_indexes,\n        sort_by_offsets,\n        sort_by_lengths,\n        sort_order,\n        options.limit,\n        options.offset,\n        options.status,\n        placeholder_opt_notes,\n        placeholder_fields,\n        placeholder_note_length\n    )\n}\n\nunconstrained fn flatten_options<Note, N>(\n    selects: BoundedVec<Option<Select>, N>,\n    sorts: BoundedVec<Option<Sort>, N>\n) -> (u8, [u8; N], [u8; N], [u8; N], [Field; N], [u8; N], [u8; N], [u8; N], [u8; N], [u8; N]) {\n    let mut num_selects = 0;\n    let mut select_by_indexes = [0; N];\n    let mut select_by_offsets = [0; N];\n    let mut select_by_lengths = [0; N];\n    let mut select_values = [0; N];\n    let mut select_comparators = [0; N];\n\n    for i in 0..selects.len {\n        let select = selects.get(i);\n        if select.is_some() {\n            select_by_indexes[num_selects] = select.unwrap_unchecked().property_selector.index;\n            select_by_offsets[num_selects] = select.unwrap_unchecked().property_selector.offset;\n            select_by_lengths[num_selects] = select.unwrap_unchecked().property_selector.length;\n            select_values[num_selects] = select.unwrap_unchecked().value;\n            select_comparators[num_selects] = select.unwrap_unchecked().comparator;\n            num_selects += 1;\n        };\n    }\n\n    let mut sort_by_indexes = [0; N];\n    let mut sort_by_offsets = [0; N];\n    let mut sort_by_lengths = [0; N];\n    let mut sort_order = [0; N];\n    for i in 0..sorts.len {\n        let sort = sorts.get(i);\n        if sort.is_some() {\n            sort_by_indexes[i] = sort.unwrap_unchecked().property_selector.index;\n            sort_by_offsets[i] = sort.unwrap_unchecked().property_selector.offset;\n            sort_by_lengths[i] = sort.unwrap_unchecked().property_selector.length;\n            sort_order[i] = sort.unwrap_unchecked().order;\n        };\n    }\n\n    (\n        num_selects, select_by_indexes, select_by_offsets, select_by_lengths, select_values, select_comparators, sort_by_indexes, sort_by_offsets, sort_by_lengths, sort_order\n    )\n}\n", "path": "/usr/src/noir-projects/aztec-nr/aztec/src/note/note_getter.nr" }, "129": { "source": "use crate::{\n    abis::{\n    append_only_tree_snapshot::{AppendOnlyTreeSnapshot, APPEND_ONLY_TREE_SNAPSHOT_LENGTH},\n    global_variables::{GlobalVariables, GLOBAL_VARIABLES_LENGTH}\n},\n    constants::{GENERATOR_INDEX__BLOCK_HASH, HEADER_LENGTH, STATE_REFERENCE_LENGTH, CONTENT_COMMITMENT_LENGTH},\n    hash::pedersen_hash, state_reference::StateReference, traits::{Deserialize, Empty, Hash, Serialize},\n    utils::arr_copy_slice, content_commitment::ContentCommitment\n};\n\n// docs:start:header\nstruct Header {\n    last_archive: AppendOnlyTreeSnapshot,\n    content_commitment: ContentCommitment,\n    state: StateReference,\n    global_variables: GlobalVariables,\n}\n// docs:end:header\n\nimpl Eq for Header {\n    fn eq(self, other: Self) -> bool {\n        self.last_archive.eq(other.last_archive) &\n        self.content_commitment.eq(other.content_commitment) &\n        self.state.eq(other.state) &\n        self.global_variables.eq(other.global_variables)\n    }\n}\n\nimpl Serialize<HEADER_LENGTH> for Header {\n    fn serialize(self) -> [Field; HEADER_LENGTH] {\n        let mut fields: BoundedVec<Field, HEADER_LENGTH> = BoundedVec::new();\n\n        fields.extend_from_array(self.last_archive.serialize());\n        fields.extend_from_array(self.content_commitment.serialize());\n        fields.extend_from_array(self.state.serialize());\n        fields.extend_from_array(self.global_variables.serialize());\n\n        fields.storage\n    }\n}\n\nimpl Deserialize<HEADER_LENGTH> for Header {\n    fn deserialize(serialized: [Field; HEADER_LENGTH]) -> Self {\n        let mut offset = 0;\n\n        let last_archive_fields = arr_copy_slice(serialized, [0; APPEND_ONLY_TREE_SNAPSHOT_LENGTH], offset);\n        offset = offset + APPEND_ONLY_TREE_SNAPSHOT_LENGTH;\n\n        let content_commitment_fields = arr_copy_slice(serialized, [0; CONTENT_COMMITMENT_LENGTH], offset);\n        offset = offset + CONTENT_COMMITMENT_LENGTH;\n\n        let state_fields = arr_copy_slice(serialized, [0; STATE_REFERENCE_LENGTH], offset);\n        offset = offset + STATE_REFERENCE_LENGTH;\n\n        let global_variables_fields = arr_copy_slice(serialized, [0; GLOBAL_VARIABLES_LENGTH], offset);\n\n        Header {\n            last_archive: AppendOnlyTreeSnapshot::deserialize(last_archive_fields),\n            content_commitment: ContentCommitment::deserialize(content_commitment_fields),\n            state: StateReference::deserialize(state_fields),\n            global_variables: GlobalVariables::deserialize(global_variables_fields),\n        }\n    }\n}\n\nimpl Empty for Header {\n    fn empty() -> Self {\n        Self {\n            last_archive: AppendOnlyTreeSnapshot::zero(),\n            content_commitment: ContentCommitment::empty(),\n            state: StateReference::empty(),\n            global_variables: GlobalVariables::empty(),\n        }\n    }\n}\n\nimpl Hash for Header {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__BLOCK_HASH)\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let header: Header = dep::std::unsafe::zeroed();\n    let serialized = header.serialize();\n    let deserialized = Header::deserialize(serialized);\n    assert(header.eq(deserialized));\n}\n\n#[test]\nfn hash_smoke() {\n    let header: Header = dep::std::unsafe::zeroed();\n    let _hashed = header.hash();\n}\n\n#[test]\nfn empty_hash_is_zero() {\n    let header: Header = dep::std::unsafe::zeroed();\n    let hash = header.hash();\n\n    // Value from new_contract_data.test.ts \"computes empty hash\" test\n    let test_data_empty_hash = 0x2a45c01b78a6b9a2392b7490966b41f47e5d9ac95610fa3eabe99d9aec7f6ad0;\n    assert_eq(hash, test_data_empty_hash);\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/header.nr" }, "131": { "source": "struct Reader<N> {\n    data: [Field; N],\n    offset: u64,\n}\n\nimpl<N> Reader<N> {\n    pub fn new(data: [Field; N]) -> Self {\n        Self { data, offset: 0 }\n    }\n\n    pub fn read(&mut self) -> Field {\n        let result = self.data[self.offset];\n        self.offset += 1;\n        result\n    }\n\n    pub fn read_array<K>(&mut self, mut result: [Field; K]) -> [Field; K] {\n        for i in 0..K {\n            result[i] = self.data[self.offset + i];\n        }\n        self.offset += K;\n        result\n    }\n\n    // TODO(#4394)\n    pub fn read_struct<T, K>(&mut self, deserialise: fn([Field; K]) -> T) -> T {\n        let result = deserialise(self.read_array([0; K]));\n        result\n    }\n\n    pub fn read_struct_array<T, K, C>(&mut self, deserialise: fn([Field; K]) -> T, mut result: [T; C]) -> [T; C] {\n        for i in 0..C {\n            result[i] = self.read_struct(deserialise);\n        }\n        result\n    }\n\n    pub fn finish(self) {\n        assert(self.offset == self.data.len(), \"Reader did not read all data\");\n    }\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/utils/reader.nr" }, "143": { "source": "use crate::{\n    constants::ETH_ADDRESS_LENGTH, hash::pedersen_hash,\n    traits::{Empty, ToField, Serialize, Deserialize}, utils\n};\n\nstruct EthAddress{\n    inner : Field\n}\n\nimpl Eq for EthAddress {\n    fn eq(self, other : Self) -> bool {\n        self.to_field() == other.to_field()\n    }\n}\n\nimpl Empty for EthAddress {\n    fn empty() -> Self {\n        Self {\n            inner : 0\n        }\n    }\n}\n\nimpl ToField for EthAddress {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl Serialize<ETH_ADDRESS_LENGTH> for EthAddress {\n    fn serialize(self: Self) -> [Field; ETH_ADDRESS_LENGTH] {\n        [self.inner]\n    }\n}\n\nimpl Deserialize<ETH_ADDRESS_LENGTH> for EthAddress {\n    fn deserialize(fields: [Field; ETH_ADDRESS_LENGTH]) -> Self {\n        EthAddress::from_field(fields[0])\n    }\n}\n\nimpl EthAddress {\n    pub fn zero() -> Self {\n        Self { inner: 0 }\n    }\n\n    pub fn from_field(field: Field) -> Self {\n        field.assert_max_bit_size(160);\n        Self { inner: field }\n    }\n\n    pub fn is_zero(self) -> bool {\n        self.inner == 0\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n\n    pub fn conditional_assign(predicate: bool, lhs: Self, rhs: Self) -> Self {\n        let result = utils::conditional_assign(predicate, rhs.to_field(), lhs.to_field());\n        Self { inner: result }\n    }\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/address/eth_address.nr" }, "144": { "source": "use crate::{\n    address::{eth_address::EthAddress, aztec_address::AztecAddress},\n    constants::GENERATOR_INDEX__PARTIAL_ADDRESS, hash::pedersen_hash, traits::ToField\n};\n\n// Salted initialization hash. Used in the computation of a partial address.\nstruct SaltedInitializationHash {\n    inner: Field\n}\n\nimpl ToField for SaltedInitializationHash {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl SaltedInitializationHash {\n    pub fn from_field(field: Field) -> Self {\n        Self { inner: field }\n    }\n\n    pub fn compute(\n        salt: Field,\n        initialization_hash: Field,\n        portal_contract_address: EthAddress,\n        deployer: AztecAddress\n    ) -> Self {\n        SaltedInitializationHash::from_field(\n            pedersen_hash(\n                [\n            salt,\n            initialization_hash,\n            deployer.to_field(),\n            portal_contract_address.to_field()\n        ],\n                GENERATOR_INDEX__PARTIAL_ADDRESS\n            )\n        )\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/address/salted_initialization_hash.nr" }, "145": { "source": "use crate::{\n    address::{\n    eth_address::EthAddress, salted_initialization_hash::SaltedInitializationHash,\n    aztec_address::AztecAddress\n},\n    constants::GENERATOR_INDEX__PARTIAL_ADDRESS, contract_class_id::ContractClassId,\n    hash::pedersen_hash, traits::ToField\n};\n\n// Partial address\nstruct PartialAddress {\n    inner : Field\n}\n\nimpl ToField for PartialAddress {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl PartialAddress {\n    pub fn from_field(field: Field) -> Self {\n        Self { inner: field }\n    }\n\n    pub fn compute(\n        contract_class_id: ContractClassId,\n        salt: Field,\n        initialization_hash: Field,\n        portal_contract_address: EthAddress,\n        deployer: AztecAddress\n    ) -> Self {\n        PartialAddress::compute_from_salted_initialization_hash(\n            contract_class_id,\n            SaltedInitializationHash::compute(salt, initialization_hash, portal_contract_address, deployer)\n        )\n    }\n\n    pub fn compute_from_salted_initialization_hash(\n        contract_class_id: ContractClassId,\n        salted_initialization_hash: SaltedInitializationHash\n    ) -> Self {\n        PartialAddress::from_field(\n            pedersen_hash(\n                [\n            contract_class_id.to_field(),\n            salted_initialization_hash.to_field()\n        ],\n                GENERATOR_INDEX__PARTIAL_ADDRESS\n            )\n        )\n    }\n\n    pub fn to_field(self) -> Field {\n        self.inner\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/address/partial_address.nr" }, "146": { "source": "use crate::{\n    constants::GENERATOR_INDEX__PARTIAL_ADDRESS, hash::pedersen_hash, grumpkin_point::GrumpkinPoint,\n    traits::{ToField, Serialize, Deserialize}\n};\n\n// Public keys hash. Used in the computation of an address.\nstruct PublicKeysHash {\n    inner: Field\n}\n\nimpl ToField for PublicKeysHash {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl Serialize<1> for PublicKeysHash {\n    fn serialize(self: Self) -> [Field; 1] {\n        [self.to_field()]\n    }\n}\n\nimpl Deserialize<1> for PublicKeysHash {\n    fn deserialize(fields: [Field; 1]) -> Self {\n        PublicKeysHash::from_field(fields[0])\n    }\n}\n\nimpl Eq for PublicKeysHash {\n    fn eq(self, other: Self) -> bool {\n        self.inner == other.inner\n    }\n}\n\nimpl PublicKeysHash {\n    pub fn from_field(field: Field) -> Self {\n        Self { inner: field }\n    }\n\n    pub fn compute(public_key: GrumpkinPoint) -> Self {\n        PublicKeysHash::from_field(\n            pedersen_hash(\n                [\n            public_key.x,\n            public_key.y\n        ],\n                GENERATOR_INDEX__PARTIAL_ADDRESS\n            )\n        )\n    }\n\n    pub fn to_field(self) -> Field {\n        self.inner\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n}\n\n#[test]\nfn compute_public_keys_hash() {\n    let point = GrumpkinPoint { x: 1, y: 2 };\n    let actual = PublicKeysHash::compute(point);\n    let expected_public_keys_hash = 0x1923a6246e305720b6aaf751fde0342613e93c82e455c3831e28375c16dd40d8;\n    assert(actual.to_field() == expected_public_keys_hash);\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/address/public_keys_hash.nr" }, "147": { "source": "use crate::{\n    crate::address::{eth_address::EthAddress, partial_address::PartialAddress, public_keys_hash::PublicKeysHash},\n    constants::{AZTEC_ADDRESS_LENGTH, GENERATOR_INDEX__CONTRACT_ADDRESS},\n    contract_class_id::ContractClassId, hash::pedersen_hash, grumpkin_point::GrumpkinPoint,\n    traits::{Empty, ToField, Serialize, Deserialize}, utils\n};\n\n// Aztec address\nstruct AztecAddress {\n    inner : Field\n}\n\nimpl Eq for AztecAddress {\n    fn eq(self, other : Self) -> bool {\n        self.to_field() == other.to_field()\n    }\n}\n\nimpl Empty for AztecAddress {\n    fn empty() -> Self {\n        Self {\n            inner : 0\n        }\n    }\n}\n\nimpl ToField for AztecAddress {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl Serialize<AZTEC_ADDRESS_LENGTH> for AztecAddress {\n    fn serialize(self: Self) -> [Field; AZTEC_ADDRESS_LENGTH] {\n        [self.to_field()]\n    }\n}\n\nimpl Deserialize<AZTEC_ADDRESS_LENGTH> for AztecAddress {\n    fn deserialize(fields: [Field; AZTEC_ADDRESS_LENGTH]) -> Self {\n        AztecAddress::from_field(fields[0])\n    }\n}\n\nimpl AztecAddress {\n    pub fn zero() -> Self {\n        Self { inner: 0 }\n    }\n\n    pub fn from_field(field: Field) -> Self {\n        Self { inner: field }\n    }\n\n    pub fn compute_from_public_key(\n        pub_key: GrumpkinPoint,\n        contract_class_id: ContractClassId,\n        salt: Field,\n        initialization_hash: Field,\n        portal_contract_address: EthAddress,\n        deployer: AztecAddress\n    ) -> AztecAddress {\n        AztecAddress::compute(\n            PublicKeysHash::compute(pub_key),\n            PartialAddress::compute(\n                contract_class_id,\n                salt,\n                initialization_hash,\n                portal_contract_address,\n                deployer\n            )\n        )\n    }\n\n    pub fn compute(pub_keys_hash: PublicKeysHash, partial_address: PartialAddress) -> AztecAddress {\n        AztecAddress::from_field(\n            pedersen_hash(\n                [pub_keys_hash.to_field(), partial_address.to_field()],\n                GENERATOR_INDEX__CONTRACT_ADDRESS\n            )\n        )\n    }\n\n    pub fn is_zero(self) -> bool {\n        self.inner == 0\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n\n    pub fn conditional_assign(predicate: bool, lhs: Self, rhs: Self) -> Self {\n        let result = utils::conditional_assign(predicate, rhs.to_field(), lhs.to_field());\n        Self { inner: result }\n    }\n}\n\n#[test]\nfn compute_address() {\n    let point = GrumpkinPoint { x: 1, y: 2 };\n    let contract_address_salt = 3;\n    let contract_class_id = ContractClassId::from_field(4);\n    let initialization_hash = 5;\n    let portal_contract_address = EthAddress::from_field(6);\n    let deployer = AztecAddress::from_field(7);\n\n    let address = AztecAddress::compute_from_public_key(\n        point,\n        contract_class_id,\n        contract_address_salt,\n        initialization_hash,\n        portal_contract_address,\n        deployer\n    );\n\n    let expected_computed_address_from_preimage = 0x027ea2b41ced2ec9a98305984e96dd28518536a4628883ccdc06e38aa8997220;\n    assert(address.to_field() == expected_computed_address_from_preimage);\n}\n\n#[test]\nfn compute_address_from_partial_and_pubkey() {\n    let point = GrumpkinPoint { x: 1, y: 2 };\n    let partial_address = PartialAddress::from_field(3);\n\n    let address = AztecAddress::compute(PublicKeysHash::compute(point), partial_address);\n    let expected_computed_address_from_partial_and_pubkey = 0x0447f893197175723deb223696e2e96dbba1e707ee8507766373558877e74197;\n    assert(address.to_field() == expected_computed_address_from_partial_and_pubkey);\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/address/aztec_address.nr" }, "149": { "source": "use crate::{address::EthAddress, constants::L2_TO_L1_MESSAGE_LENGTH, traits::{Deserialize, Empty, Serialize}};\n\n// Note: Not to be confused with L2ToL1Msg in Solidity\nstruct L2ToL1Message {\n    recipient: EthAddress,\n    content: Field,\n}\n\nimpl Empty for L2ToL1Message {\n    fn empty() -> Self {\n        Self {\n            recipient: EthAddress::empty(),\n            content: 0,\n        }\n    }\n}\n\nimpl Eq for L2ToL1Message {\n    fn eq(self, other: Self) -> bool {\n        (self.recipient == other.recipient) & (self.content == other.content)\n    }\n}\n\nimpl Serialize<L2_TO_L1_MESSAGE_LENGTH> for L2ToL1Message {\n    fn serialize(self) -> [Field; L2_TO_L1_MESSAGE_LENGTH] {\n        [self.recipient.to_field(), self.content]\n    }\n}\n\nimpl Deserialize<L2_TO_L1_MESSAGE_LENGTH> for L2ToL1Message {\n    fn deserialize(values: [Field; L2_TO_L1_MESSAGE_LENGTH]) -> Self {\n        Self {\n            recipient: EthAddress::from_field(values[0]),\n            content: values[1],\n        }\n    }\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/messaging/l2_to_l1_message.nr" }, "152": { "source": "use dep::std::cmp::Eq;\n\n// Trait: is_empty\n//\n// The general is_empty trait checks if a data type is is empty,\n// and it defines empty for the basic data types as 0.\n//\n// If a Field is equal to zero, then it is regarded as zero.\n// We will go with this definition for now, however it can be problematic \n// if a value can actually be zero. In a future refactor, we can \n// use the optional type for safety. Doing it now would lead to a worse devex\n// and would make it harder to sync up with the cpp code.\n// Preferred over Default trait to convey intent, as default doesn't necessarily mean empty.\ntrait Empty {\n    fn empty() -> Self;\n}\n\nimpl Empty for Field { fn empty() -> Self {0} }\n\nimpl Empty for u1 { fn empty() -> Self {0} }\nimpl Empty for u8 { fn empty() -> Self {0} }\nimpl Empty for u32 { fn empty() -> Self {0} }\nimpl Empty for u64 { fn empty() -> Self {0} }\nimpl Empty for U128 { fn empty() -> Self {U128::from_integer(0)} }\n\npub fn is_empty<T>(item: T) -> bool where T: Empty + Eq {\n    item.eq(T::empty())\n}\n\npub fn is_empty_array<T, N>(array: [T; N]) -> bool where T: Empty + Eq {\n    array.all(|elem| is_empty(elem))\n}\n\ntrait Hash {\n    fn hash(self) -> Field;\n}\n\ntrait ToField {\n    fn to_field(self) -> Field;\n}\n\nimpl ToField for Field {\n    fn to_field(self) -> Field {\n        self\n    }\n}\n\nimpl ToField for bool { fn to_field(self) -> Field { self as Field } }\nimpl ToField for u1 { fn to_field(self) -> Field { self as Field } }\nimpl ToField for u8 { fn to_field(self) -> Field { self as Field } }\nimpl ToField for u32 { fn to_field(self) -> Field { self as Field } }\nimpl ToField for u64 { fn to_field(self) -> Field { self as Field } }\nimpl ToField for U128 {\n    fn to_field(self) -> Field {\n        self.to_integer()\n    }\n}\n\ntrait FromField {\n    fn from_field(value: Field) -> Self;\n}\n\nimpl FromField for Field {\n    fn from_field(value: Field) -> Self {\n        value\n    }\n}\n\nimpl FromField for bool { fn from_field(value: Field) -> Self { value as bool } }\nimpl FromField for u1 { fn from_field(value: Field) -> Self { value as u1 } }\nimpl FromField for u8 { fn from_field(value: Field) -> Self { value as u8 } }\nimpl FromField for u32 { fn from_field(value: Field) -> Self { value as u32 } }\nimpl FromField for u64 { fn from_field(value: Field) -> Self { value as u64 } }\nimpl FromField for U128 {\n    fn from_field(value: Field) -> Self {\n        U128::from_integer(value)\n    }\n}\n\n// docs:start:serialize\ntrait Serialize<N> {\n    fn serialize(self) -> [Field; N];\n}\n// docs:end:serialize\n\n// docs:start:deserialize\ntrait Deserialize<N> {\n    fn deserialize(fields: [Field; N]) -> Self;\n}\n// docs:end:deserialize\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/traits.nr" }, "154": { "source": "use crate::{\n    abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot, constants::PARTIAL_STATE_REFERENCE_LENGTH,\n    traits::{Deserialize, Empty, Hash, Serialize}\n};\n\nstruct PartialStateReference {\n    note_hash_tree: AppendOnlyTreeSnapshot,\n    nullifier_tree: AppendOnlyTreeSnapshot,\n    public_data_tree: AppendOnlyTreeSnapshot,\n}\n\nimpl Eq for PartialStateReference {\n    fn eq(self, other: PartialStateReference) -> bool {\n        self.note_hash_tree.eq(other.note_hash_tree) &\n        self.nullifier_tree.eq(other.nullifier_tree) &\n        self.public_data_tree.eq(other.public_data_tree)\n    }\n}\n\nimpl Serialize<PARTIAL_STATE_REFERENCE_LENGTH> for PartialStateReference {\n    fn serialize(self) -> [Field; PARTIAL_STATE_REFERENCE_LENGTH] {\n        let serialized_note_hash_tree = self.note_hash_tree.serialize();\n        let serialized_nullifier_tree = self.nullifier_tree.serialize();\n        let serialized_public_data_tree = self.public_data_tree.serialize();\n\n        [\n            serialized_note_hash_tree[0], \n            serialized_note_hash_tree[1],\n            serialized_nullifier_tree[0],\n            serialized_nullifier_tree[1],\n            serialized_public_data_tree[0],\n            serialized_public_data_tree[1],\n        ]\n    }\n}\n\nimpl Deserialize<PARTIAL_STATE_REFERENCE_LENGTH> for PartialStateReference {\n    fn deserialize(serialized: [Field; PARTIAL_STATE_REFERENCE_LENGTH]) -> PartialStateReference {\n        PartialStateReference {\n            note_hash_tree: AppendOnlyTreeSnapshot::deserialize(\n                [serialized[0], serialized[1]]\n            ),\n            nullifier_tree: AppendOnlyTreeSnapshot::deserialize(\n                [serialized[2], serialized[3]]\n            ),\n            public_data_tree: AppendOnlyTreeSnapshot::deserialize(\n                [serialized[4], serialized[5]]\n            ),\n        }\n    }\n}\n\nimpl Empty for PartialStateReference {\n    fn empty() -> Self {\n        Self {\n            note_hash_tree: AppendOnlyTreeSnapshot::zero(),\n            nullifier_tree: AppendOnlyTreeSnapshot::zero(),\n            public_data_tree: AppendOnlyTreeSnapshot::zero(),\n        }\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let partial: PartialStateReference = dep::std::unsafe::zeroed();\n    let _serialized = partial.serialize();\n    let _deserialized = PartialStateReference::deserialize(_serialized);\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/partial_state_reference.nr" }, "162": { "source": "use crate::{\n    abis::function_selector::FunctionSelector,\n    constants::{GENERATOR_INDEX__FUNCTION_DATA, FUNCTION_DATA_LENGTH}, hash::pedersen_hash,\n    traits::{Serialize, Hash, Deserialize}\n};\n\nstruct FunctionData {\n    selector : FunctionSelector,\n    is_private : bool,\n    // Remove once the AVM is fully operational.\n    is_transpiled: bool,\n}\n\nimpl Eq for FunctionData {\n    fn eq(self, other: Self) -> bool {\n        self.selector.eq(other.selector) &\n        (self.is_private == other.is_private) &\n        (self.is_transpiled == other.is_transpiled)\n    }\n}\n\nimpl Serialize<FUNCTION_DATA_LENGTH> for FunctionData {\n    // A field is ~256 bits\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/3057): Since, function data can fit into a Field,\n    // This method will simply return a bit packed Field instead of hashing\n    fn serialize(self) -> [Field; FUNCTION_DATA_LENGTH] {\n        [\n            self.selector.to_field(),\n            self.is_private as Field,\n            self.is_transpiled as Field,\n        ]\n    }\n}\n\nimpl Deserialize<FUNCTION_DATA_LENGTH> for FunctionData {\n    fn deserialize(serialized: [Field; FUNCTION_DATA_LENGTH]) -> Self {\n        Self {\n            selector: FunctionSelector::from_field(serialized[0]),\n            is_private: serialized[1] as bool,\n            is_transpiled: serialized[2] as bool,\n        }\n    }\n}\n\nimpl Hash for FunctionData {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__FUNCTION_DATA)\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let data: FunctionData = dep::std::unsafe::zeroed();\n    let serialized = data.serialize();\n    let deserialized = FunctionData::deserialize(serialized);\n    assert(data.eq(deserialized));\n}\n\n#[test]\nfn empty_hash() {\n    let data: FunctionData = dep::std::unsafe::zeroed();\n    let hash = data.hash();\n\n    // Value from function_data.test.ts \"computes empty item hash\" test\n    let test_data_empty_hash = 0x066e6cdc4a6ba5e4781deda650b0be6c12f975f064fc38df72c1060716759b17;\n    assert_eq(hash, test_data_empty_hash);\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/abis/function_data.nr" }, "166": { "source": "use crate::{\n    abis::side_effect::{OrderedValue, ContractScopedOrderedValue},\n    traits::{Empty, Serialize, Deserialize}, address::AztecAddress\n};\nuse dep::std::cmp::Eq;\n\nglobal READ_REQUEST_SERIALIZED_LEN = 2;\nglobal READ_REQUEST_CONTEXT_SERIALIZED_LEN = 3;\n\nstruct ReadRequest {\n    value: Field,\n    counter: u32,\n}\n\nimpl OrderedValue<Field> for ReadRequest {\n    fn value(self) -> Field {\n        self.value\n    }\n    fn counter(self) -> u32 {\n        self.counter\n    }\n}\n\nimpl Eq for ReadRequest {\n    fn eq(self, read_request: ReadRequest) -> bool {\n        (self.value == read_request.value)\n        & (self.counter == read_request.counter)\n    }\n}\n\nimpl Empty for ReadRequest {\n    fn empty() -> Self {\n        ReadRequest {\n            value: 0,\n            counter: 0,\n        }\n    }\n}\n\nimpl Serialize<READ_REQUEST_SERIALIZED_LEN> for ReadRequest {\n    fn serialize(self) -> [Field; READ_REQUEST_SERIALIZED_LEN] {\n        [self.value, self.counter as Field]\n    }\n}\n\nimpl Deserialize<READ_REQUEST_SERIALIZED_LEN> for ReadRequest {\n    fn deserialize(values: [Field; READ_REQUEST_SERIALIZED_LEN]) -> Self {\n        Self {\n            value: values[0],\n            counter: values[1] as u32,\n        }\n    }\n}\n\nimpl ReadRequest {\n    pub fn to_context(self, contract_address: AztecAddress) -> ReadRequestContext {\n        ReadRequestContext { value: self.value, counter: self.counter, contract_address }\n    }\n}\n\nstruct ReadRequestContext {\n    value: Field,\n    counter: u32,\n    contract_address: AztecAddress,\n}\n\nimpl OrderedValue<Field> for ReadRequestContext {\n    fn value(self) -> Field {\n        self.value\n    }\n    fn counter(self) -> u32 {\n        self.counter\n    }\n}\n\nimpl ContractScopedOrderedValue<Field> for ReadRequestContext {\n    fn value(self) -> Field {\n        self.value\n    }\n    fn counter(self) -> u32 {\n        self.counter\n    }\n    fn contract_address(self) -> AztecAddress {\n        self.contract_address\n    }\n}\n\nimpl Eq for ReadRequestContext {\n    fn eq(self, read_request: ReadRequestContext) -> bool {\n        (self.value == read_request.value)\n        & (self.counter == read_request.counter)\n        & (self.contract_address.eq(read_request.contract_address))\n    }\n}\n\nimpl Empty for ReadRequestContext {\n    fn empty() -> Self {\n        ReadRequestContext {\n            value: 0,\n            counter: 0,\n            contract_address: AztecAddress::empty(),\n        }\n    }\n}\n\nimpl Serialize<READ_REQUEST_CONTEXT_SERIALIZED_LEN> for ReadRequestContext {\n    fn serialize(self) -> [Field; READ_REQUEST_CONTEXT_SERIALIZED_LEN] {\n        [self.value, self.counter as Field, self.contract_address.to_field()]\n    }\n}\n\nimpl Deserialize<READ_REQUEST_CONTEXT_SERIALIZED_LEN> for ReadRequestContext {\n    fn deserialize(values: [Field; READ_REQUEST_CONTEXT_SERIALIZED_LEN]) -> Self {\n        Self {\n            value: values[0],\n            counter: values[1] as u32,\n            contract_address: AztecAddress::from_field(values[2]),\n        }\n    }\n}\n\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/abis/read_request.nr" }, "167": { "source": "use crate::{\n    abis::function_selector::FunctionSelector, address::{EthAddress, AztecAddress},\n    constants::{CALL_CONTEXT_LENGTH, GENERATOR_INDEX__CALL_CONTEXT}, hash::pedersen_hash,\n    traits::{Deserialize, Hash, Serialize}, abis::side_effect::Ordered\n};\n\n// docs:start:call-context\nstruct CallContext {\n    msg_sender : AztecAddress,\n    storage_contract_address : AztecAddress,\n    portal_contract_address : EthAddress,\n\n    function_selector : FunctionSelector,\n\n    is_delegate_call : bool,\n    is_static_call : bool,\n\n    side_effect_counter : u32,\n}\n// docs:end:call-context\n\nimpl CallContext {\n    fn assert_is_zero(self) {\n        let serialized: [Field; CALL_CONTEXT_LENGTH] = self.serialize();\n\n        for i in 0..CALL_CONTEXT_LENGTH {\n            assert(serialized[i] == 0);\n        }\n    }\n}\n\nimpl Eq for CallContext {\n    fn eq(self, other: CallContext) -> bool {\n        self.serialize() == other.serialize()\n    }\n}\n\nimpl Hash for CallContext {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CALL_CONTEXT)\n    }\n}\n\nimpl Serialize<CALL_CONTEXT_LENGTH> for CallContext {\n    fn serialize(self) -> [Field; CALL_CONTEXT_LENGTH] {\n        [\n            self.msg_sender.to_field(),\n            self.storage_contract_address.to_field(),\n            self.portal_contract_address.to_field(),\n            self.function_selector.to_field(),\n            self.is_delegate_call as Field,\n            self.is_static_call as Field,\n            self.side_effect_counter as Field,\n        ]\n    }\n}\n\nimpl Deserialize<CALL_CONTEXT_LENGTH> for CallContext {\n    fn deserialize(serialized: [Field; CALL_CONTEXT_LENGTH]) -> CallContext {\n        CallContext {\n            msg_sender: AztecAddress::from_field(serialized[0]),\n            storage_contract_address: AztecAddress::from_field(serialized[1]),\n            portal_contract_address: EthAddress::from_field(serialized[2]),\n            function_selector: FunctionSelector::from_field(serialized[3]),\n            is_delegate_call: serialized[4] as bool,\n            is_static_call: serialized[5] as bool,\n            side_effect_counter: serialized[6] as u32,\n        }\n    }\n}\n\n#[test]\nfn serialize_deserialize_of_empty() {\n    let context: CallContext = dep::std::unsafe::zeroed();\n    let serialized = context.serialize();\n    let deserialized = CallContext::deserialize(serialized);\n    assert(context.eq(deserialized));\n}\n\n#[test]\nfn assert_is_zero() {\n    let context: CallContext = dep::std::unsafe::zeroed();\n    context.assert_is_zero();\n}\n\n#[test(should_fail)]\nfn not_zero_assert_is_zero() {\n    let mut context: CallContext = dep::std::unsafe::zeroed();\n    context.is_delegate_call = true;\n    context.assert_is_zero();\n}\n\n#[test]\nfn test_eq() {\n    let mut context1: CallContext = dep::std::unsafe::zeroed();\n    let mut context2: CallContext = dep::std::unsafe::zeroed();\n\n    context1.is_delegate_call = true;\n    context2.is_delegate_call = true;\n\n    let address: AztecAddress = AztecAddress::from_field(69420);\n    context1.msg_sender = address;\n    context2.msg_sender = address;\n\n    assert(context1.eq(context2));\n}\n\n#[test(should_fail)]\nfn not_eq_test_eq() {\n    let mut context1: CallContext = dep::std::unsafe::zeroed();\n    let mut context2: CallContext = dep::std::unsafe::zeroed();\n\n    context1.is_delegate_call = true;\n    context2.is_delegate_call = false;\n\n    let address1: AztecAddress = AztecAddress::from_field(69420);\n    let address2: AztecAddress = AztecAddress::from_field(42069);\n\n    context1.msg_sender = address1;\n    context2.msg_sender = address2;\n\n    assert(context1.eq(context2));\n}\n\n#[test]\nfn hash_smoke() {\n    let context: CallContext = dep::std::unsafe::zeroed();\n    let _hashed = context.hash();\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/abis/call_context.nr" }, "180": { "source": "use crate::{\n    abis::{function_data::FunctionData, private_circuit_public_inputs::PrivateCircuitPublicInputs},\n    address::AztecAddress,\n    constants::{GENERATOR_INDEX__CALL_STACK_ITEM, PRIVATE_CALL_STACK_ITEM_LENGTH}, hash::pedersen_hash,\n    traits::{Deserialize, Hash, Serialize}, utils::reader::Reader\n};\n\nstruct PrivateCallStackItem {\n    // This is the _actual_ contract address relating to where this function's code resides in the\n    // contract tree. Regardless of whether this is a call or delegatecall, this\n    // `contract_address` _does not change_. Amongst other things, it's used as a lookup for\n    // getting the correct code from the tree. There is a separate `storage_contract_address`\n    // within a CallStackItem which varies depending on whether this is a call or delegatecall.\n    contract_address: AztecAddress,\n    function_data: FunctionData,\n    public_inputs: PrivateCircuitPublicInputs,\n}\n\nimpl Eq for PrivateCallStackItem {\n    fn eq(self, other: Self) -> bool {\n        self.contract_address.eq(other.contract_address) &\n        self.function_data.eq(other.function_data) &\n        self.public_inputs.eq(other.public_inputs)\n    }\n}\n\nimpl Serialize<PRIVATE_CALL_STACK_ITEM_LENGTH> for PrivateCallStackItem {\n    fn serialize(self) -> [Field; PRIVATE_CALL_STACK_ITEM_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CALL_STACK_ITEM_LENGTH> = BoundedVec::new();\n\n        fields.push(self.contract_address.to_field());\n        fields.extend_from_array(self.function_data.serialize());\n        fields.extend_from_array(self.public_inputs.serialize());\n\n        assert_eq(fields.len(), PRIVATE_CALL_STACK_ITEM_LENGTH);\n\n        fields.storage\n    }\n}\n\nimpl Deserialize<PRIVATE_CALL_STACK_ITEM_LENGTH> for PrivateCallStackItem {\n    fn deserialize(serialized: [Field; PRIVATE_CALL_STACK_ITEM_LENGTH]) -> Self {\n        // TODO(#4390): This should accept a reader ^ to avoid copying data.\n        let mut reader = Reader::new(serialized);\n\n        let item = Self {\n            contract_address: reader.read_struct(AztecAddress::deserialize),\n            function_data: reader.read_struct(FunctionData::deserialize),\n            public_inputs: reader.read_struct(PrivateCircuitPublicInputs::deserialize),\n        };\n\n        reader.finish();\n        item\n    }\n}\n\nimpl Hash for PrivateCallStackItem {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let item: PrivateCallStackItem = dep::std::unsafe::zeroed();\n    let serialized = item.serialize();\n    let deserialized = PrivateCallStackItem::deserialize(serialized);\n    assert(item.eq(deserialized));\n}\n\n#[test]\nfn empty_hash() {\n    let mut item: PrivateCallStackItem = dep::std::unsafe::zeroed();\n    item.function_data.is_private = true;\n    let hash = item.hash();\n\n    // Value from private_call_stack_item.test.ts \"computes empty item hash\" test\n    let test_data_empty_hash = 0x06b381be873c42defb570287e3ba23900175838afb6047a27c7dce1f653b4ac5;\n    assert_eq(hash, test_data_empty_hash);\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/abis/private_call_stack_item.nr" }, "184": { "source": "use crate::abis::{function_data::FunctionData, public_circuit_public_inputs::PublicCircuitPublicInputs};\nuse crate::address::AztecAddress;\nuse crate::constants::GENERATOR_INDEX__CALL_STACK_ITEM;\nuse crate::traits::Hash;\n\nstruct PublicCallStackItem {\n    contract_address: AztecAddress,\n    public_inputs: PublicCircuitPublicInputs,\n    function_data: FunctionData,\n    // True if this call stack item represents a request to execute a function rather than a\n    // fulfilled execution. Used when enqueuing calls from private to public functions.\n    is_execution_request: bool,\n}\n\nimpl Hash for PublicCallStackItem {\n    fn hash(self) -> Field {\n        let item = if self.is_execution_request {\n            self.as_execution_request()\n        } else {\n            self\n        };\n\n        dep::std::hash::pedersen_hash_with_separator([\n            item.contract_address.to_field(),\n            item.function_data.hash(),\n            item.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n\nimpl PublicCallStackItem {\n    fn as_execution_request(self) -> Self {\n        let public_inputs = self.public_inputs;\n        let mut request_public_inputs: PublicCircuitPublicInputs = dep::std::unsafe::zeroed();\n        request_public_inputs.call_context = public_inputs.call_context;\n        request_public_inputs.args_hash = public_inputs.args_hash;\n\n        let call_stack_item = PublicCallStackItem {\n            contract_address: self.contract_address,\n            function_data: self.function_data,\n            is_execution_request: true,\n            public_inputs: request_public_inputs\n        };\n        call_stack_item\n    }\n}\n\nmod tests {\n    use crate::{\n        abis::{\n        function_data::FunctionData, function_selector::FunctionSelector,\n        public_circuit_public_inputs::PublicCircuitPublicInputs,\n        public_call_stack_item::PublicCallStackItem, side_effect::SideEffect\n    },\n        address::AztecAddress, constants::GENERATOR_INDEX__CALL_STACK_ITEM, traits::Hash\n    };\n\n    #[test]\n    fn compute_call_stack_item_request_hash() {\n        let contract_address = AztecAddress::from_field(1);\n        let function_data = FunctionData { selector: FunctionSelector::from_u32(2), is_private: false, is_transpiled: false };\n\n        let mut public_inputs: PublicCircuitPublicInputs = dep::std::unsafe::zeroed();\n        public_inputs.new_note_hashes[0] = SideEffect{\n            value: 1,\n            counter: 0,\n        };\n\n        let call_stack_item = PublicCallStackItem { contract_address, public_inputs, is_execution_request: true, function_data };\n\n        // Value from public_call_stack_item.test.ts \"Computes a callstack item request hash\" test\n        let test_data_call_stack_item_request_hash = 0x09bd19d3ebcda705ab1ed598db287340aed3efda0ad3bbbf3296737bda731fa9;\n        assert_eq(call_stack_item.hash(), test_data_call_stack_item_request_hash);\n    }\n\n    #[test]\n    fn compute_call_stack_item_hash() {\n        let contract_address = AztecAddress::from_field(1);\n        let function_data = FunctionData { selector: FunctionSelector::from_u32(2), is_private: false, is_transpiled: false };\n\n        let mut public_inputs: PublicCircuitPublicInputs = dep::std::unsafe::zeroed();\n        public_inputs.new_note_hashes[0] = SideEffect{\n            value: 1,\n            counter: 0,\n        };\n\n        let call_stack_item = PublicCallStackItem { contract_address, public_inputs, is_execution_request: false, function_data };\n\n        // Value from public_call_stack_item.test.ts \"Computes a callstack item hash\" test\n        let test_data_call_stack_item_hash = 0x1fe20dd657d73941763bf8437471ac000be6efcb046895014b1a84b5aaf55905;\n        assert_eq(call_stack_item.hash(), test_data_call_stack_item_hash);\n    }\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/abis/public_call_stack_item.nr" }, "186": { "source": "use crate::utils::field::field_from_bytes;\nuse dep::std::cmp::Eq;\nuse crate::traits::{Serialize, Deserialize, FromField, ToField};\n\nglobal SELECTOR_SIZE = 4;\n\nstruct FunctionSelector {\n    // 1st 4-bytes of abi-encoding of function.\n    inner: u32,\n}\n\nimpl Eq for FunctionSelector {\n    fn eq(self, function_selector: FunctionSelector) -> bool {\n        function_selector.inner == self.inner\n    }\n}\n\nimpl Serialize<1> for FunctionSelector {\n    fn serialize(self: Self) -> [Field; 1] {\n        [self.inner as Field]\n    }\n}\n\nimpl Deserialize<1> for FunctionSelector {\n    fn deserialize(fields: [Field; 1]) -> Self {\n        Self {\n            inner: fields[0] as u32\n        }\n    }\n}\n\nimpl FromField for FunctionSelector {\n    fn from_field(field: Field) -> Self {\n        Self { inner: field as u32 }\n    }\n}\n\nimpl ToField for FunctionSelector {\n    fn to_field(self) -> Field {\n        self.inner as Field\n    }\n}\n\nimpl FunctionSelector {\n    pub fn from_u32(value: u32) -> Self {\n        Self { inner: value }\n    }\n\n    pub fn from_signature<N>(signature: str<N>) -> Self {\n        let bytes = signature.as_bytes();\n        let hash = dep::std::hash::keccak256(bytes, bytes.len() as u32);\n\n        let mut selector_be_bytes = [0; SELECTOR_SIZE];\n        for i in 0..SELECTOR_SIZE {\n            selector_be_bytes[i] = hash[i];\n        }\n\n        FunctionSelector::from_field(field_from_bytes(selector_be_bytes, true))\n    }\n\n    pub fn zero() -> Self {\n        Self { inner: 0 }\n    }\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/abis/function_selector.nr" }, "189": { "source": "use dep::std::cmp::Eq;\nuse crate::{\n    address::{AztecAddress, EthAddress},\n    constants::{GENERATOR_INDEX__GLOBAL_VARIABLES, GLOBAL_VARIABLES_LENGTH},\n    traits::{Deserialize, Empty, Hash, Serialize}\n};\n\n// docs:start:global-variables\nstruct GlobalVariables {\n    chain_id : Field,\n    version : Field,\n    block_number : Field,\n    timestamp : u64,\n    coinbase : EthAddress,\n    fee_recipient : AztecAddress,\n}\n// docs:end:global-variables\n\nimpl Serialize<GLOBAL_VARIABLES_LENGTH> for GlobalVariables {\n    fn serialize(self) -> [Field; GLOBAL_VARIABLES_LENGTH] {\n        [\n            self.chain_id,\n            self.version,\n            self.block_number,\n            self.timestamp as Field,\n            self.coinbase.to_field(),\n            self.fee_recipient.to_field(),\n        ]\n    }\n}\n\nimpl Deserialize<GLOBAL_VARIABLES_LENGTH> for GlobalVariables {\n    fn deserialize(serialized: [Field; GLOBAL_VARIABLES_LENGTH]) -> GlobalVariables {\n        GlobalVariables {\n            chain_id: serialized[0],\n            version: serialized[1],\n            block_number: serialized[2],\n            timestamp: serialized[3] as u64,\n            coinbase: EthAddress::from_field(serialized[4]),\n            fee_recipient: AztecAddress::from_field(serialized[5]),\n        }\n    }\n}\n\nimpl Eq for GlobalVariables {\n    fn eq(self, other : GlobalVariables) -> bool {\n        (self.chain_id == other.chain_id) &\n        (self.version == other.version) &\n        (self.block_number == other.block_number) &\n        (self.timestamp == other.timestamp) &\n        (self.coinbase == other.coinbase) &\n        (self.fee_recipient == other.fee_recipient)\n    }\n}\n\nimpl Empty for GlobalVariables {\n    fn empty() -> Self {\n        Self {\n            chain_id: 0,\n            version: 0,\n            block_number: 0,\n            timestamp: 0,\n            coinbase: EthAddress::empty(),\n            fee_recipient: AztecAddress::empty(),\n        }\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let vars: GlobalVariables = dep::std::unsafe::zeroed();\n    let _serialized = vars.serialize();\n    let _deserialized = GlobalVariables::deserialize(_serialized);\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/abis/global_variables.nr" }, "192": { "source": "use dep::std::cmp::Eq;\nuse crate::{\n    address::AztecAddress,\n    constants::{NULLIFIER_KEY_VALIDATION_REQUEST_CONTEXT_LENGTH, NULLIFIER_KEY_VALIDATION_REQUEST_LENGTH},\n    traits::{Empty, Serialize, Deserialize}, grumpkin_point::GrumpkinPoint,\n    grumpkin_private_key::GrumpkinPrivateKey\n};\n\nstruct NullifierKeyValidationRequest {\n    public_key: GrumpkinPoint,\n    secret_key: GrumpkinPrivateKey,\n}\n\nimpl Eq for NullifierKeyValidationRequest {\n    fn eq(self, request: NullifierKeyValidationRequest) -> bool {\n        (request.public_key.eq(self.public_key))\n            & (request.secret_key.eq(self.secret_key))\n    }\n}\n\nimpl Empty for NullifierKeyValidationRequest {\n    fn empty() -> Self {\n        NullifierKeyValidationRequest {\n            public_key: GrumpkinPoint::zero(),\n            secret_key: GrumpkinPrivateKey::zero(),\n        }\n    }\n}\n\nimpl Serialize<NULLIFIER_KEY_VALIDATION_REQUEST_LENGTH> for NullifierKeyValidationRequest {\n    fn serialize(self) -> [Field; NULLIFIER_KEY_VALIDATION_REQUEST_LENGTH] {\n        [\n            self.public_key.x,\n            self.public_key.y,\n            self.secret_key.high,\n            self.secret_key.low,\n        ]\n    }\n}\n\nimpl Deserialize<NULLIFIER_KEY_VALIDATION_REQUEST_LENGTH> for NullifierKeyValidationRequest {\n    fn deserialize(fields: [Field; NULLIFIER_KEY_VALIDATION_REQUEST_LENGTH]) -> Self {\n        Self {\n            public_key: GrumpkinPoint::new(fields[0], fields[1]),\n            secret_key: GrumpkinPrivateKey::new(fields[2], fields[3]),\n        }\n    }\n}\n\nimpl NullifierKeyValidationRequest {\n    pub fn to_context(self, contract_address: AztecAddress) -> NullifierKeyValidationRequestContext {\n        NullifierKeyValidationRequestContext { public_key: self.public_key, secret_key: self.secret_key, contract_address }\n    }\n}\n\nstruct NullifierKeyValidationRequestContext {\n    public_key: GrumpkinPoint,\n    secret_key: GrumpkinPrivateKey,\n    contract_address: AztecAddress,\n}\n\nimpl Eq for NullifierKeyValidationRequestContext {\n    fn eq(self, request: NullifierKeyValidationRequestContext) -> bool {\n        (request.public_key.eq(self.public_key))\n            & (request.secret_key.eq(self.secret_key))\n            & (request.contract_address.eq(self.contract_address))\n    }\n}\n\nimpl Empty for NullifierKeyValidationRequestContext {\n    fn empty() -> Self {\n        NullifierKeyValidationRequestContext {\n            public_key: GrumpkinPoint::zero(),\n            secret_key: GrumpkinPrivateKey::zero(),\n            contract_address: AztecAddress::zero(),\n        }\n    }\n}\n\nimpl Serialize<NULLIFIER_KEY_VALIDATION_REQUEST_CONTEXT_LENGTH> for NullifierKeyValidationRequestContext {\n    fn serialize(self) -> [Field; NULLIFIER_KEY_VALIDATION_REQUEST_CONTEXT_LENGTH] {\n        [\n            self.public_key.x,\n            self.public_key.y,\n            self.secret_key.high,\n            self.secret_key.low,\n            self.contract_address.to_field(),\n        ]\n    }\n}\n\nimpl Deserialize<NULLIFIER_KEY_VALIDATION_REQUEST_CONTEXT_LENGTH> for NullifierKeyValidationRequestContext {\n    fn deserialize(fields: [Field; NULLIFIER_KEY_VALIDATION_REQUEST_CONTEXT_LENGTH]) -> Self {\n        Self {\n            public_key: GrumpkinPoint::new(fields[0], fields[1]),\n            secret_key: GrumpkinPrivateKey::new(fields[2], fields[3]),\n            contract_address: AztecAddress::from_field(fields[4]),\n        }\n    }\n}\n\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/abis/nullifier_key_validation_request.nr" }, "193": { "source": "use crate::{\n    abis::{\n    call_context::CallContext, max_block_number::MaxBlockNumber,\n    nullifier_key_validation_request::NullifierKeyValidationRequest, read_request::ReadRequest,\n    side_effect::{SideEffect, SideEffectLinkedToNoteHash}\n},\n    constants::{\n    MAX_NOTE_HASH_READ_REQUESTS_PER_CALL, MAX_NULLIFIER_READ_REQUESTS_PER_CALL,\n    MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL, MAX_NEW_NOTE_HASHES_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL, MAX_NEW_L2_TO_L1_MSGS_PER_CALL, RETURN_VALUES_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH, GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS\n},\n    header::Header, hash::pedersen_hash, messaging::l2_to_l1_message::L2ToL1Message,\n    traits::{Deserialize, Hash, Serialize}, utils::reader::Reader\n};\n\nstruct PrivateCircuitPublicInputs {\n    call_context: CallContext,\n\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n\n    min_revertible_side_effect_counter: u32,\n\n    max_block_number: MaxBlockNumber,\n\n    note_hash_read_requests: [SideEffect; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL],\n    nullifier_read_requests: [ReadRequest; MAX_NULLIFIER_READ_REQUESTS_PER_CALL],\n    nullifier_key_validation_requests: [NullifierKeyValidationRequest; MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL],\n\n    new_note_hashes: [SideEffect; MAX_NEW_NOTE_HASHES_PER_CALL],\n    new_nullifiers: [SideEffectLinkedToNoteHash; MAX_NEW_NULLIFIERS_PER_CALL],\n    private_call_stack_hashes: [Field; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL],\n    public_call_stack_hashes: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_l2_to_l1_msgs: [L2ToL1Message; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n\n    start_side_effect_counter : u32,\n    end_side_effect_counter : u32,\n    encrypted_logs_hash: Field,\n    unencrypted_logs_hash: Field,\n\n    // Here so that the gas cost of this request can be measured by circuits, without actually needing to feed in the\n    // variable-length data.\n    encrypted_log_preimages_length: Field,\n    unencrypted_log_preimages_length: Field,\n\n    // Header of a block whose state is used during private execution (not the block the transaction is included in).\n    historical_header: Header,\n\n    // Note: The following 2 values are not redundant to the values in self.historical_header.global_variables because\n    // they can be different in case of a protocol upgrade. In such a situation we could be using header from a block\n    // before the upgrade took place but be using the updated protocol to execute and prove the transaction.\n    chain_id: Field,\n    version: Field,\n}\n\nimpl Eq for PrivateCircuitPublicInputs {\n    fn eq(self, other: Self) -> bool {\n        self.call_context.eq(other.call_context) &\n        self.args_hash.eq(other.args_hash) &\n        (self.return_values == other.return_values) &\n        (self.max_block_number == other.max_block_number) &\n        (self.note_hash_read_requests == other.note_hash_read_requests) &\n        (self.nullifier_read_requests == other.nullifier_read_requests) &\n        (self.nullifier_key_validation_requests == other.nullifier_key_validation_requests) &\n        (self.new_note_hashes == other.new_note_hashes) &\n        (self.new_nullifiers == other.new_nullifiers) &\n        (self.private_call_stack_hashes == other.private_call_stack_hashes) &\n        (self.public_call_stack_hashes == other.public_call_stack_hashes) &\n        (self.new_l2_to_l1_msgs == other.new_l2_to_l1_msgs) &\n        (self.start_side_effect_counter == other.start_side_effect_counter) &\n        (self.end_side_effect_counter == other.end_side_effect_counter) &\n        (self.encrypted_logs_hash == other.encrypted_logs_hash) &\n        (self.unencrypted_logs_hash == other.unencrypted_logs_hash) &\n        (self.encrypted_log_preimages_length == other.encrypted_log_preimages_length) &\n        (self.unencrypted_log_preimages_length == other.unencrypted_log_preimages_length) &\n        self.historical_header.eq(other.historical_header) &\n        self.chain_id.eq(other.chain_id) &\n        self.version.eq(other.version)\n    }\n}\n\nimpl Serialize<PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> for PrivateCircuitPublicInputs {\n    fn serialize(self) -> [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new();\n        fields.extend_from_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.extend_from_array(self.return_values);\n\n        fields.push(self.min_revertible_side_effect_counter as Field);\n\n        fields.extend_from_array(self.max_block_number.serialize());\n\n        for i in 0..MAX_NOTE_HASH_READ_REQUESTS_PER_CALL{\n            fields.extend_from_array(self.note_hash_read_requests[i].serialize());\n        }\n        for i in 0..MAX_NULLIFIER_READ_REQUESTS_PER_CALL{\n            fields.extend_from_array(self.nullifier_read_requests[i].serialize());\n        }\n        for i in 0..MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL{\n            fields.extend_from_array(self.nullifier_key_validation_requests[i].serialize());\n        }\n        for i in 0..MAX_NEW_NOTE_HASHES_PER_CALL{\n            fields.extend_from_array(self.new_note_hashes[i].serialize());\n        }\n        for i in 0..MAX_NEW_NULLIFIERS_PER_CALL{\n            fields.extend_from_array(self.new_nullifiers[i].serialize());\n        }\n        fields.extend_from_array(self.private_call_stack_hashes);\n        fields.extend_from_array(self.public_call_stack_hashes);\n        for i in 0..MAX_NEW_L2_TO_L1_MSGS_PER_CALL {\n            fields.extend_from_array(self.new_l2_to_l1_msgs[i].serialize());\n        }\n        fields.push(self.start_side_effect_counter as Field);\n        fields.push(self.end_side_effect_counter as Field);\n        fields.push(self.encrypted_logs_hash);\n        fields.push(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.extend_from_array(self.historical_header.serialize());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n\n        assert_eq(fields.len(), PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH);\n\n        fields.storage\n    }\n}\n\nimpl Deserialize<PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> for PrivateCircuitPublicInputs {\n    fn deserialize(serialized: [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH]) -> Self {\n        // TODO(#4390): This should accept a reader ^ to avoid copying data.\n        let mut reader = Reader::new(serialized);\n        let inputs = Self {\n            call_context: reader.read_struct(CallContext::deserialize),\n            args_hash: reader.read(),\n            return_values: reader.read_array([0; RETURN_VALUES_LENGTH]),\n            min_revertible_side_effect_counter: reader.read() as u32,\n            max_block_number: reader.read_struct(MaxBlockNumber::deserialize),\n            note_hash_read_requests: reader.read_struct_array(SideEffect::deserialize, [SideEffect::empty(); MAX_NOTE_HASH_READ_REQUESTS_PER_CALL]),\n            nullifier_read_requests: reader.read_struct_array(ReadRequest::deserialize, [ReadRequest::empty(); MAX_NULLIFIER_READ_REQUESTS_PER_CALL]),\n            nullifier_key_validation_requests: reader.read_struct_array(NullifierKeyValidationRequest::deserialize, [NullifierKeyValidationRequest::empty(); MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL]),\n            new_note_hashes: reader.read_struct_array(SideEffect::deserialize, [SideEffect::empty(); MAX_NEW_NOTE_HASHES_PER_CALL]),\n            new_nullifiers: reader.read_struct_array(SideEffectLinkedToNoteHash::deserialize, [SideEffectLinkedToNoteHash::empty(); MAX_NEW_NULLIFIERS_PER_CALL]),\n            private_call_stack_hashes: reader.read_array([0; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL]),\n            public_call_stack_hashes: reader.read_array([0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL]),\n            new_l2_to_l1_msgs: reader.read_struct_array(L2ToL1Message::deserialize, [L2ToL1Message::empty(); MAX_NEW_L2_TO_L1_MSGS_PER_CALL]),\n            start_side_effect_counter: reader.read() as u32,\n            end_side_effect_counter: reader.read() as u32,\n            encrypted_logs_hash: reader.read() as Field,\n            unencrypted_logs_hash: reader.read() as Field,\n            encrypted_log_preimages_length: reader.read(),\n            unencrypted_log_preimages_length: reader.read(),\n            historical_header: reader.read_struct(Header::deserialize),\n            chain_id: reader.read(),\n            version: reader.read(),\n        };\n\n        reader.finish();\n        inputs\n    }\n}\n\nimpl Hash for PrivateCircuitPublicInputs {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS)\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let pcpi: PrivateCircuitPublicInputs = dep::std::unsafe::zeroed();\n    let serialized = pcpi.serialize();\n    let deserialized = PrivateCircuitPublicInputs::deserialize(serialized);\n    assert(pcpi.eq(deserialized));\n}\n\n#[test]\nfn empty_hash() {\n    let inputs: PrivateCircuitPublicInputs = dep::std::unsafe::zeroed();\n    let hash = inputs.hash();\n\n    // Value from private_circuit_public_inputs.test.ts \"computes empty item hash\" test\n    let test_data_empty_hash = 0x1304e6c42e3c53fc7c918cbf1ea70333b4f214726c0784cf9878cd641967dab1;\n    assert_eq(hash, test_data_empty_hash);\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/abis/private_circuit_public_inputs.nr" }, "195": { "source": "use crate::{constants::MAX_BLOCK_NUMBER_LENGTH, traits::{Deserialize, Serialize}};\n\nstruct MaxBlockNumber {\n    _opt: Option<u32>\n}\n\nimpl Default for MaxBlockNumber {\n    fn default() -> Self {\n        Self { _opt: Option::none() }\n    }\n}\n\nimpl Eq for MaxBlockNumber {\n    fn eq(self, other: Self) -> bool {\n        self._opt == other._opt\n    }\n}\n\nimpl Serialize<MAX_BLOCK_NUMBER_LENGTH> for MaxBlockNumber {\n    fn serialize(self) -> [Field; MAX_BLOCK_NUMBER_LENGTH] {\n        [self._opt._is_some as Field, self._opt._value as Field]\n    }\n}\n\nimpl Deserialize<MAX_BLOCK_NUMBER_LENGTH> for MaxBlockNumber {\n    fn deserialize(serialized: [Field; MAX_BLOCK_NUMBER_LENGTH]) -> MaxBlockNumber {\n        MaxBlockNumber {\n            _opt: Option {\n                _is_some: serialized[0] as bool,\n                _value: serialized[1] as u32,\n            }\n        }\n    }\n}\n\nimpl MaxBlockNumber {\n    pub fn new(max_block_number: u32) -> Self {\n        Self { _opt: Option::some(max_block_number) }\n    }\n\n    pub fn is_none(self) -> bool {\n        self._opt.is_none()\n    }\n\n    pub fn is_some(self) -> bool {\n        self._opt.is_some()\n    }\n\n    pub fn unwrap(self) -> u32 {\n        self._opt.unwrap()\n    }\n\n    pub fn unwrap_unchecked(self) -> u32 {\n        self._opt.unwrap_unchecked()\n    }\n\n    pub fn min(lhs: MaxBlockNumber, rhs: MaxBlockNumber) -> MaxBlockNumber {\n        if rhs.is_none() {\n            lhs // lhs might also be none, but in that case both would be\n        } else {\n            MaxBlockNumber::min_with_u32(lhs, rhs.unwrap_unchecked())\n        }\n    }\n\n    pub fn min_with_u32(lhs: MaxBlockNumber, rhs: u32) -> MaxBlockNumber {\n        if lhs._opt.is_none() {\n            MaxBlockNumber::new(rhs)\n        } else {\n            let lhs_value = lhs._opt.unwrap_unchecked();\n\n            MaxBlockNumber::new(if lhs_value < rhs { lhs_value } else { rhs })\n        }\n    }\n}\n\n#[test]\nfn zeroed_is_none() {\n    // Large parts of the kernel rely on zeroed to initialize structs. This conveniently matches what `default` does,\n    // and though we should eventually move everything to use `default`, it's good to check for now that both are\n    // equivalent.\n    let a: MaxBlockNumber = dep::std::unsafe::zeroed();\n    assert(a.is_none());\n}\n\n#[test]\nfn serde_default() {\n    let a = MaxBlockNumber::default();\n    let b = MaxBlockNumber::deserialize(a.serialize());\n    assert(b.is_none());\n}\n\n#[test]\nfn serde_some() {\n    let a = MaxBlockNumber::new(13);\n    let b = MaxBlockNumber::deserialize(a.serialize());\n    assert_eq(b.unwrap(), 13);\n}\n\n#[test(should_fail)]\nfn default_unwrap_panics() {\n    let a = MaxBlockNumber::default();\n    let _ = a.unwrap();\n}\n\n#[test]\nfn min_default_default() {\n    let a = MaxBlockNumber::default();\n    let b = MaxBlockNumber::default();\n\n    assert(MaxBlockNumber::min(a, b).is_none());\n}\n\n#[test]\nfn min_default_some() {\n    let a = MaxBlockNumber::default();\n    let b = MaxBlockNumber::new(13);\n\n    assert_eq(MaxBlockNumber::min(a, b).unwrap(), 13);\n    assert_eq(MaxBlockNumber::min(b, a).unwrap(), 13);\n}\n\n#[test]\nfn min_some_some() {\n    let a = MaxBlockNumber::new(13);\n    let b = MaxBlockNumber::new(42);\n\n    assert_eq(MaxBlockNumber::min(a, b).unwrap(), 13);\n    assert_eq(MaxBlockNumber::min(b, a).unwrap(), 13);\n}\n\n#[test]\nfn min_with_u32_default() {\n    let a = MaxBlockNumber::default();\n    let b = 42;\n\n    assert_eq(MaxBlockNumber::min_with_u32(a, b).unwrap(), 42);\n}\n\n#[test]\nfn min_with_u32_some() {\n    let a = MaxBlockNumber::new(13);\n    let b = 42;\n    let c = 8;\n\n    assert_eq(MaxBlockNumber::min_with_u32(a, b).unwrap(), 13);\n    assert_eq(MaxBlockNumber::min_with_u32(a, c).unwrap(), 8);\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/abis/max_block_number.nr" }, "196": { "source": "use crate::{\n    address::AztecAddress, constants::GENERATOR_INDEX__SIDE_EFFECT,\n    traits::{Empty, Hash, Serialize, Deserialize}\n};\nuse dep::std::cmp::Eq;\n\nglobal SIDE_EFFECT_SERIALIZED_LEN = 2;\n\ntrait Ordered {\n    fn counter(self) -> u32;\n}\n\ntrait OrderedValue<T> where T: Eq {\n    fn value(self) -> T;\n    fn counter(self) -> u32;\n}\n\ntrait ContractScopedOrderedValue<T> where T: Eq {\n    fn value(self) -> T;\n    fn counter(self) -> u32;\n    fn contract_address(self) -> AztecAddress;\n}\n\nstruct SideEffect {\n    value: Field,\n    counter: u32,\n}\n\nimpl Ordered for SideEffect {\n    fn counter(self) -> u32 {\n        self.counter\n    }\n}\n\nimpl OrderedValue<Field> for SideEffect {\n    fn value(self) -> Field {\n        self.value\n    }\n    fn counter(self) -> u32 {\n        self.counter\n    }\n}\n\nimpl Eq for SideEffect {\n    fn eq(self, side_effect: SideEffect) -> bool {\n        (self.value == side_effect.value)\n        & (self.counter == side_effect.counter)\n    }\n}\n\nimpl Empty for SideEffect {\n    fn empty() -> Self {\n        SideEffect {\n            value: 0,\n            counter: 0,\n        }\n    }\n}\n\nimpl Hash for SideEffect {\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_hash_with_separator(\n            self.serialize() , GENERATOR_INDEX__SIDE_EFFECT)\n    }\n}\n\nimpl Serialize<SIDE_EFFECT_SERIALIZED_LEN> for SideEffect {\n    fn serialize(self) -> [Field; SIDE_EFFECT_SERIALIZED_LEN] {\n        [self.value, self.counter as Field]\n    }\n}\n\nimpl Deserialize<SIDE_EFFECT_SERIALIZED_LEN> for SideEffect {\n    fn deserialize(values: [Field; SIDE_EFFECT_SERIALIZED_LEN]) -> Self {\n        Self {\n            value: values[0],\n            counter: values[1] as u32,\n        }\n    }\n}\n\nstruct SideEffectLinkedToNoteHash{\n    value: Field,\n    note_hash: Field,\n    counter: u32,\n}\n\nimpl Ordered for SideEffectLinkedToNoteHash {\n    fn counter(self) -> u32 {\n        self.counter\n    }\n}\n\nimpl OrderedValue<Field> for SideEffectLinkedToNoteHash {\n    fn value(self) -> Field {\n        self.value\n    }\n    fn counter(self) -> u32 {\n        self.counter\n    }\n}\n\nimpl Eq for SideEffectLinkedToNoteHash {\n    fn eq(self, side_effect: SideEffectLinkedToNoteHash) -> bool {\n        (self.value == side_effect.value)\n            & (self.note_hash == side_effect.note_hash) \n            & (self.counter == side_effect.counter)\n    }\n}\n\nimpl Empty for SideEffectLinkedToNoteHash {\n    fn empty() -> Self {\n        SideEffectLinkedToNoteHash {\n            value: 0,\n            note_hash: 0,\n            counter: 0,\n        }\n    }\n}\n\nimpl Hash for SideEffectLinkedToNoteHash {\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_hash_with_separator(\n            self.serialize(),\n        GENERATOR_INDEX__SIDE_EFFECT)\n    }\n}\n\nimpl Serialize<3> for SideEffectLinkedToNoteHash {\n    fn serialize(self) -> [Field; 3] {\n        [self.value, self.note_hash, self.counter as Field]\n    }\n}\n\nimpl Deserialize<3> for SideEffectLinkedToNoteHash {\n    fn deserialize(values: [Field; 3]) -> Self {\n        Self {\n            value: values[0],\n            note_hash: values[1],\n            counter: values[2] as u32,\n        }\n    }\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/abis/side_effect.nr" }, "197": { "source": "global NULLIFIER_LEAF_PREIMAGE_LENGTH: u64 = 3;\n\nuse crate::{merkle_tree::leaf_preimage::{LeafPreimage, IndexedTreeLeafPreimage}, traits::{Empty, Hash}};\n\nstruct NullifierLeafPreimage {\n    nullifier : Field,\n    next_nullifier :Field,\n    next_index : u64,\n}\n\nimpl Empty for NullifierLeafPreimage {\n    fn empty() -> Self {\n        Self {\n            nullifier : 0,\n            next_nullifier : 0,\n            next_index : 0,\n        }\n    }\n}\n\nimpl Hash for NullifierLeafPreimage {\n    fn hash(self) -> Field {\n        if self.is_empty() {\n            0\n        } else {\n            dep::std::hash::pedersen_hash(self.serialize())\n        }\n    }\n}\n\nimpl LeafPreimage for NullifierLeafPreimage {\n    fn get_key(self) -> Field {\n        self.nullifier\n    }\n\n    fn as_leaf(self) -> Field {\n        self.hash()\n    }\n}\n\nimpl IndexedTreeLeafPreimage for NullifierLeafPreimage {\n    fn get_key(self) -> Field {\n        self.nullifier\n    }\n\n    fn get_next_key(self) -> Field {\n        self.next_nullifier\n    }\n\n    fn as_leaf(self) -> Field {\n        self.hash()\n    }\n}\n\nimpl NullifierLeafPreimage {\n    pub fn is_empty(self) -> bool {\n        (self.nullifier == 0) & (self.next_nullifier == 0) & (self.next_index == 0)\n    }\n\n    pub fn serialize(self) -> [Field; NULLIFIER_LEAF_PREIMAGE_LENGTH] {\n        [self.nullifier, self.next_nullifier, self.next_index as Field]\n    }\n\n    pub fn deserialize(fields: [Field; NULLIFIER_LEAF_PREIMAGE_LENGTH]) -> Self {\n        Self { nullifier: fields[0], next_nullifier: fields[1], next_index: fields[2] as u64 }\n    }\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/abis/nullifier_leaf_preimage.nr" }, "199": { "source": "use crate::{\n    abis::{\n    call_context::CallContext, read_request::ReadRequest,\n    side_effect::{SideEffect, SideEffectLinkedToNoteHash}\n},\n    address::AztecAddress,\n    constants::{\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL, MAX_NEW_NULLIFIERS_PER_CALL, MAX_NEW_NOTE_HASHES_PER_CALL,\n    MAX_NULLIFIER_READ_REQUESTS_PER_CALL, MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL, MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL, RETURN_VALUES_LENGTH,\n    GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS, PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH\n},\n    contrakt::{storage_read::StorageRead, storage_update_request::StorageUpdateRequest},\n    hash::pedersen_hash, header::Header, messaging::l2_to_l1_message::L2ToL1Message,\n    traits::{Hash, Serialize, Deserialize}, utils::reader::Reader\n};\n\nstruct PublicCircuitPublicInputs{\n    call_context: CallContext,\n\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n\n    nullifier_read_requests: [ReadRequest; MAX_NULLIFIER_READ_REQUESTS_PER_CALL],\n    nullifier_non_existent_read_requests: [ReadRequest; MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_CALL],\n    contract_storage_update_requests: [StorageUpdateRequest; MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n    contract_storage_reads: [StorageRead; MAX_PUBLIC_DATA_READS_PER_CALL],\n\n    // todo: add sideeffect ranges for the input to these hashes\n    public_call_stack_hashes: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_note_hashes: [SideEffect; MAX_NEW_NOTE_HASHES_PER_CALL],\n    new_nullifiers: [SideEffectLinkedToNoteHash; MAX_NEW_NULLIFIERS_PER_CALL],\n    new_l2_to_l1_msgs: [L2ToL1Message; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n\n    start_side_effect_counter: u32,\n    end_side_effect_counter: u32,\n\n    unencrypted_logs_hash: Field,\n\n    // Here so that the gas cost of this request can be measured by circuits, without actually needing to feed in the\n    // variable-length data.\n    unencrypted_log_preimages_length: Field,\n\n    // Header of a block whose state is used during public execution. Set by sequencer to be a header of a block\n    // previous to the one in which the tx is included.\n    historical_header: Header,\n\n    prover_address: AztecAddress,\n\n    revert_code: u8,\n}\n\nimpl Eq for PublicCircuitPublicInputs {\n    fn eq(self, other: Self) -> bool {\n        self.serialize() == other.serialize()\n    }\n}\n\nimpl Serialize<PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> for PublicCircuitPublicInputs {\n    fn serialize(self) -> [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new();\n        fields.extend_from_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.extend_from_array(self.return_values);\n        for i in 0..MAX_NULLIFIER_READ_REQUESTS_PER_CALL {\n            fields.extend_from_array(self.nullifier_read_requests[i].serialize());\n        }\n        for i in 0..MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_CALL {\n            fields.extend_from_array(self.nullifier_non_existent_read_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            fields.extend_from_array(self.contract_storage_update_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            fields.extend_from_array(self.contract_storage_reads[i].serialize());\n        }\n        fields.extend_from_array(self.public_call_stack_hashes);\n\n        for i in 0..MAX_NEW_NOTE_HASHES_PER_CALL {\n            fields.extend_from_array(self.new_note_hashes[i].serialize());\n        }\n        for i in 0..MAX_NEW_NULLIFIERS_PER_CALL {\n            fields.extend_from_array(self.new_nullifiers[i].serialize());\n        }\n        for i in 0..MAX_NEW_L2_TO_L1_MSGS_PER_CALL {\n            fields.extend_from_array(self.new_l2_to_l1_msgs[i].serialize());\n        }\n\n        fields.push(self.start_side_effect_counter as Field);\n        fields.push(self.end_side_effect_counter as Field);\n\n        fields.push(self.unencrypted_logs_hash);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.extend_from_array(self.historical_header.serialize());\n        fields.push(self.prover_address.to_field());\n        fields.push(self.revert_code as Field);\n        fields.storage\n    }\n}\n\nimpl Deserialize<PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> for PublicCircuitPublicInputs {\n    fn deserialize(serialized: [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH]) -> Self {\n        // TODO(#4390): This should accept a reader ^ to avoid copying data.\n        let mut reader = Reader::new(serialized);\n        let inputs = PublicCircuitPublicInputs {\n            call_context: reader.read_struct(CallContext::deserialize),\n            args_hash: reader.read(),\n            return_values: reader.read_array([0; RETURN_VALUES_LENGTH]),\n            nullifier_read_requests: reader.read_struct_array(ReadRequest::deserialize, [ReadRequest::empty(); MAX_NULLIFIER_READ_REQUESTS_PER_CALL]),\n            nullifier_non_existent_read_requests: reader.read_struct_array(ReadRequest::deserialize, [ReadRequest::empty(); MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_CALL]),\n            contract_storage_update_requests: reader.read_struct_array(StorageUpdateRequest::deserialize, [StorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL]),\n            contract_storage_reads: reader.read_struct_array(StorageRead::deserialize, [StorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL]),\n            public_call_stack_hashes: reader.read_array([0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL]),\n            new_note_hashes: reader.read_struct_array(SideEffect::deserialize, [SideEffect::empty(); MAX_NEW_NOTE_HASHES_PER_CALL]),\n            new_nullifiers: reader.read_struct_array(SideEffectLinkedToNoteHash::deserialize, [SideEffectLinkedToNoteHash::empty(); MAX_NEW_NULLIFIERS_PER_CALL]),\n            new_l2_to_l1_msgs: reader.read_struct_array(L2ToL1Message::deserialize, [L2ToL1Message::empty(); MAX_NEW_L2_TO_L1_MSGS_PER_CALL]),\n            start_side_effect_counter: reader.read() as u32,\n            end_side_effect_counter: reader.read() as u32,\n            unencrypted_logs_hash: reader.read() as Field,\n            unencrypted_log_preimages_length: reader.read(),\n            historical_header: reader.read_struct(Header::deserialize),\n            prover_address: reader.read_struct(AztecAddress::deserialize),\n            revert_code: reader.read() as u8,\n        };\n\n        reader.finish();\n        inputs\n    }\n}\n\nimpl Hash for PublicCircuitPublicInputs {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS)\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let pcpi: PublicCircuitPublicInputs = dep::std::unsafe::zeroed();\n    let serialized = pcpi.serialize();\n    let deserialized = PublicCircuitPublicInputs::deserialize(serialized);\n    assert(pcpi.eq(deserialized));\n}\n\n#[test]\nfn empty_hash() {\n    let inputs: PublicCircuitPublicInputs = dep::std::unsafe::zeroed();\n    let hash = inputs.hash();\n\n    // Value from public_circuit_public_inputs.test.ts \"computes empty item hash\" test\n    let test_data_empty_hash = 0x0f1eb4e352e8dab6cbab3c63b6d8f3cd2cd90cc7ae5ff142e4dfa2b3e28e01c1;\n    assert_eq(hash, test_data_empty_hash);\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/abis/public_circuit_public_inputs.nr" }, "200": { "source": "use dep::std::cmp::Eq;\n\nstruct AppendOnlyTreeSnapshot {\n    root : Field,\n    // TODO(Alvaro) change this to a u64\n    next_available_leaf_index : u32\n}\n\nglobal APPEND_ONLY_TREE_SNAPSHOT_LENGTH: u64 = 2;\n\nimpl AppendOnlyTreeSnapshot {\n    pub fn serialize(self) -> [Field; APPEND_ONLY_TREE_SNAPSHOT_LENGTH] {\n        [self.root, self.next_available_leaf_index as Field]\n    }\n\n    pub fn deserialize(serialized: [Field; APPEND_ONLY_TREE_SNAPSHOT_LENGTH]) -> AppendOnlyTreeSnapshot {\n        AppendOnlyTreeSnapshot { root: serialized[0], next_available_leaf_index: serialized[1] as u32 }\n    }\n\n    pub fn zero() -> Self {\n        Self { root: 0, next_available_leaf_index: 0 }\n    }\n}\n\nimpl Eq for AppendOnlyTreeSnapshot {\n    fn eq(self, other : AppendOnlyTreeSnapshot) -> bool {\n        (self.root == other.root) & (self.next_available_leaf_index == other.next_available_leaf_index)\n    }\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/abis/append_only_tree_snapshot.nr" }, "201": { "source": "use crate::traits::{Serialize, Deserialize};\n\nglobal BOOL_SERIALIZED_LEN: Field = 1;\nglobal U8_SERIALIZED_LEN: Field = 1;\nglobal U32_SERIALIZED_LEN: Field = 1;\nglobal U64_SERIALIZED_LEN: Field = 1;\nglobal U128_SERIALIZED_LEN: Field = 1;\nglobal FIELD_SERIALIZED_LEN: Field = 1;\n\nimpl Serialize<BOOL_SERIALIZED_LEN> for bool {\n    fn serialize(self) -> [Field; BOOL_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<BOOL_SERIALIZED_LEN> for bool {\n    fn deserialize(fields: [Field; BOOL_SERIALIZED_LEN]) -> bool {\n        fields[0] as bool\n    }\n}\n\nimpl Serialize<U8_SERIALIZED_LEN> for u8 {\n    fn serialize(self) -> [Field; U32_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U8_SERIALIZED_LEN> for u8 {\n    fn deserialize(fields: [Field; U8_SERIALIZED_LEN]) -> Self {\n        fields[0] as u8\n    }\n}\n\nimpl Serialize<U32_SERIALIZED_LEN> for u32 {\n    fn serialize(self) -> [Field; U32_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U32_SERIALIZED_LEN> for u32 {\n    fn deserialize(fields: [Field; U32_SERIALIZED_LEN]) -> Self {\n        fields[0] as u32\n    }\n}\n\nimpl Serialize<U64_SERIALIZED_LEN> for u64 {\n    fn serialize(self) -> [Field; U64_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U64_SERIALIZED_LEN> for u64 {\n    fn deserialize(fields: [Field; U64_SERIALIZED_LEN]) -> Self {\n        fields[0] as u64\n    }\n}\n\nimpl Serialize<U128_SERIALIZED_LEN> for U128 {\n    fn serialize(self) -> [Field; 1] {\n        [self.to_integer()]\n    }\n\n}\n\nimpl Deserialize<U128_SERIALIZED_LEN> for U128 {\n    fn deserialize(fields: [Field; U128_SERIALIZED_LEN]) -> Self {\n        U128::from_integer(fields[0])\n    }\n}\n\nimpl Serialize<FIELD_SERIALIZED_LEN> for Field {\n    fn serialize(self) -> [Field; U32_SERIALIZED_LEN] {\n        [self]\n    }\n}\n\nimpl Deserialize<FIELD_SERIALIZED_LEN> for Field {\n    fn deserialize(fields: [Field; FIELD_SERIALIZED_LEN]) -> Self {\n        fields[0]\n    }\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/type_serialization.nr" }, "202": { "source": "use crate::address::{AztecAddress, EthAddress};\nuse crate::mocked::VerificationKey;\nuse crate::abis::function_selector::FunctionSelector;\nuse crate::abis::contract_class_function_leaf_preimage::ContractClassFunctionLeafPreimage;\nuse crate::contract_class_id::ContractClassId;\nuse crate::abis::side_effect::SideEffect;\nuse crate::utils::{uint256::U256, field::field_from_bytes_32_trunc};\nuse crate::constants::{\n    ARGS_HASH_CHUNK_COUNT, ARGS_HASH_CHUNK_LENGTH, MAX_ARGS_LENGTH, FUNCTION_TREE_HEIGHT,\n    GENERATOR_INDEX__SILOED_NOTE_HASH, GENERATOR_INDEX__OUTER_NULLIFIER, GENERATOR_INDEX__VK,\n    GENERATOR_INDEX__CONSTRUCTOR, GENERATOR_INDEX__PARTIAL_ADDRESS, GENERATOR_INDEX__CONTRACT_ADDRESS,\n    GENERATOR_INDEX__NOTE_HASH_NONCE, GENERATOR_INDEX__UNIQUE_NOTE_HASH, GENERATOR_INDEX__FUNCTION_ARGS\n};\nuse crate::messaging::l2_to_l1_message::L2ToL1Message;\nuse crate::merkle_tree::root::root_from_sibling_path;\n\nuse dep::std::hash::{pedersen_hash_with_separator, sha256};\n\npub fn sha256_to_field<N>(bytes_to_hash: [u8; N]) -> Field {\n    let sha256_hashed = sha256(bytes_to_hash);\n    let hash_in_a_field = field_from_bytes_32_trunc(sha256_hashed);\n\n    hash_in_a_field\n}\n\npub fn hash_args_array<N>(args: [Field; N]) -> Field {\n    let mut args_vec = BoundedVec::new();\n    args_vec.extend_from_array(args);\n    hash_args(args_vec)\n}\n\npub fn hash_args(args: BoundedVec<Field, MAX_ARGS_LENGTH>) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        for i in 0..ARGS_HASH_CHUNK_COUNT {\n            let mut chunk_hash = 0;\n            let start_chunk_index = i * ARGS_HASH_CHUNK_LENGTH;\n            if start_chunk_index < args.len() {\n                let mut chunk_args = [0; ARGS_HASH_CHUNK_LENGTH];\n                for j in 0..ARGS_HASH_CHUNK_LENGTH {\n                    let item_index = i * ARGS_HASH_CHUNK_LENGTH + j;\n                    if item_index < args.len() {\n                        chunk_args[j] = args.get_unchecked(item_index);\n                    }\n                }\n                chunk_hash = pedersen_hash(chunk_args, GENERATOR_INDEX__FUNCTION_ARGS);\n            }\n            chunks_hashes[i] = chunk_hash;\n        }\n        pedersen_hash(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n\npub fn private_functions_root_from_siblings(\n    selector: FunctionSelector,\n    vk_hash: Field,\n    function_leaf_index: Field,\n    function_leaf_sibling_path: [Field; FUNCTION_TREE_HEIGHT]\n) -> Field {\n    let function_leaf_preimage = ContractClassFunctionLeafPreimage { selector, vk_hash };\n    let function_leaf = function_leaf_preimage.hash();\n    root_from_sibling_path(function_leaf, function_leaf_index, function_leaf_sibling_path)\n}\n\npub fn silo_note_hash(address: AztecAddress, inner_commitment: Field) -> Field {\n    pedersen_hash(\n        [\n        address.to_field(),\n        inner_commitment\n    ],\n        GENERATOR_INDEX__SILOED_NOTE_HASH\n    )\n}\n\npub fn silo_nullifier(address: AztecAddress, nullifier: Field) -> Field {\n    pedersen_hash(\n        [\n        address.to_field(),\n        nullifier\n    ],\n        GENERATOR_INDEX__OUTER_NULLIFIER\n    )\n}\n\npub fn merkle_hash(left: Field, right: Field) -> Field {\n    pedersen_hash([left, right], 0)\n}\n\npub fn stdlib_recursion_verification_key_compress_native_vk(_vk: VerificationKey) -> Field {\n    // Original cpp code\n    // stdlib::recursion::verification_key<CT::bn254>::compress_native(private_call.vk, GeneratorIndex::VK);\n    // The above cpp method is only ever called on verification key, so it has been special cased here\n    let _hash_index = GENERATOR_INDEX__VK;\n    0\n}\n\npub fn compute_l2_to_l1_hash(\n    contract_address: AztecAddress,\n    rollup_version_id: Field,\n    chain_id: Field,\n    message: L2ToL1Message\n) -> Field {\n    let mut bytes: BoundedVec<u8, 160> = BoundedVec::new();\n\n    let inputs = [\n        contract_address.to_field(), rollup_version_id, message.recipient.to_field(), chain_id, message.content\n    ];\n    for i in 0..inputs.len() {\n        // TODO are bytes be in fr.to_buffer() ?\n        let item_bytes = inputs[i].to_be_bytes(32);\n        for j in 0..32 {\n            bytes.push(item_bytes[j]);\n        }\n    }\n\n    sha256_to_field(bytes.storage)\n}\n\n// Computes sha256 hash of 2 input hashes.\n//\n// NB: This method now takes in two 31 byte fields - it assumes that any input\n// is the result of a sha_to_field hash and => is truncated\n//\n// TODO(Jan and David): This is used for the encrypted_log hashes.\n// Can we check to see if we can just use hash_to_field or pedersen_compress here?\n//\npub fn accumulate_sha256(input: [Field; 2]) -> Field {\n    // This is a note about the cpp code, since it takes an array of Fields\n    // instead of a U128.\n    // 4 Field elements when converted to bytes will usually \n    // occupy 4 * 32 = 128 bytes.\n    // However, this function is making the assumption that each Field \n    // only occupies 128 bits.\n    //\n    // TODO(David): This does not seem to be getting guaranteed anywhere in the code?\n\n    // Concatentate two fields into 32x2 = 64 bytes\n    // accumulate_sha256 assumes that the inputs are pre-truncated 31 byte numbers\n    let mut hash_input_flattened = [0; 64];\n    for offset in 0..input.len() {\n        let input_as_bytes = input[offset].to_be_bytes(32);\n        for byte_index in 0..32 {\n            hash_input_flattened[offset * 32 + byte_index] = input_as_bytes[byte_index];\n        }\n    }\n\n    sha256_to_field(hash_input_flattened)\n}\n\npub fn compute_logs_hash(previous_log_hash: Field, current_log_hash: Field) -> Field {\n    accumulate_sha256(\n        [\n        previous_log_hash,\n        current_log_hash\n    ]\n    )\n}\n\npub fn compute_note_hash_nonce(first_nullifier: Field, commitment_index: u64) -> Field {\n    pedersen_hash(\n        [\n        first_nullifier,\n        commitment_index as Field\n    ],\n        GENERATOR_INDEX__NOTE_HASH_NONCE\n    )\n}\n\npub fn compute_unique_siloed_note_hash(nonce: Field, siloed_note_hash: Field) -> Field {\n    pedersen_hash(\n        [\n        nonce,\n        siloed_note_hash\n    ],\n        GENERATOR_INDEX__UNIQUE_NOTE_HASH\n    )\n}\n\npub fn compute_unique_siloed_note_hashes<N>(\n    first_nullifier: Field,\n    siloed_note_hashes: [SideEffect; N]\n) -> [SideEffect; N] {\n    let mut unique_siloed_note_hashes = [SideEffect::empty(); N];\n    for i in 0..N {\n        let siloed_note_hash = siloed_note_hashes[i];\n        if siloed_note_hash.value != 0 {\n            let nonce = compute_note_hash_nonce(first_nullifier, i);\n            unique_siloed_note_hashes[i] = SideEffect {\n                value: compute_unique_siloed_note_hash(nonce, siloed_note_hash.value),\n                counter: siloed_note_hash.counter\n                };\n        }\n    }\n    unique_siloed_note_hashes\n}\n\npub fn pedersen_hash<N>(inputs: [Field; N], hash_index: u32) -> Field {\n    dep::std::hash::pedersen_hash_with_separator(inputs, hash_index)\n}\n\n#[test]\nfn smoke_sha256_to_field() {\n    let full_buffer = [\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\n        20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\n        40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\n        60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\n        80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,\n        100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,\n        120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139,\n        140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159\n    ];\n    let result = sha256_to_field(full_buffer);\n\n    assert(result == 0x448ebbc9e1a31220a2f3830c18eef61b9bd070e5084b7fa2a359fe729184c7);\n\n    // to show correctness of the current ver (truncate one byte) vs old ver (mod full bytes):\n    let result_bytes = sha256(full_buffer);\n    let truncated_field = crate::utils::field::field_from_bytes_32_trunc(result_bytes);\n    assert(truncated_field == result);\n    let mod_res = result + (result_bytes[31] as Field);\n    assert(mod_res == 0x448ebbc9e1a31220a2f3830c18eef61b9bd070e5084b7fa2a359fe729184e0);\n}\n\n#[test]\nfn compute_var_args_hash() {\n    let mut input = BoundedVec::new();\n    for i in 0..800 {\n        input.push(i as Field);\n    }\n    let hash = hash_args(input);\n    assert(hash == 0x05a1023fef839ac88731f49ae983e172c1b600a3c8f3393ad0ac25d819ac0f0f);\n}\n\n#[test]\nfn compute_l2_l1_hash() {\n    // All zeroes\n    let hash_result = compute_l2_to_l1_hash(AztecAddress::from_field(0), 0, 0, L2ToL1Message::empty());\n    assert(hash_result == 0xb393978842a0fa3d3e1470196f098f473f9678e72463cb65ec4ab5581856c2);\n\n    // Non-zero case\n    let message = L2ToL1Message { recipient: EthAddress::from_field(3), content: 5 };\n    let hash_result = compute_l2_to_l1_hash(AztecAddress::from_field(1), 2, 4, message);\n    assert(hash_result == 0x3f88c1044a05e5340ed20466276500f6d45ca5603913b9091e957161734e16);\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/hash.nr" }, "203": { "source": "use crate::{\n    constants::CONTENT_COMMITMENT_LENGTH, traits::{Deserialize, Empty, Hash, Serialize},\n    utils::arr_copy_slice\n};\n\nstruct ContentCommitment {\n  tx_tree_height: Field,\n  txs_effects_hash: Field,\n  in_hash: Field,\n  out_hash: Field,\n}\n\nimpl Serialize<CONTENT_COMMITMENT_LENGTH> for ContentCommitment {\n  fn serialize(self) -> [Field; CONTENT_COMMITMENT_LENGTH] {\n    let mut fields: BoundedVec<Field, CONTENT_COMMITMENT_LENGTH> = BoundedVec::new();\n\n    fields.push(self.tx_tree_height);\n    fields.push(self.txs_effects_hash);\n    fields.push(self.in_hash);\n    fields.push(self.out_hash);\n\n    fields.storage\n  }\n}\n\nimpl Deserialize<CONTENT_COMMITMENT_LENGTH> for ContentCommitment {\n  fn deserialize(serialized: [Field; CONTENT_COMMITMENT_LENGTH]) -> Self {\n    let tx_tree_height = serialized[0];\n\n    let txs_effects_hash = serialized[1];\n\n    let in_hash = serialized[2];\n\n    let out_hash = serialized[3];\n\n    Self {\n      tx_tree_height,\n      txs_effects_hash,\n      in_hash,\n      out_hash,\n    }\n  }\n}\n\nimpl Empty for ContentCommitment {\n  fn empty() -> Self {\n    Self {\n      tx_tree_height: 0,\n      txs_effects_hash: 0,\n      in_hash: 0,\n      out_hash: 0,\n    }\n  }\n}\n\nimpl Eq for ContentCommitment {\n  fn eq(self, other: Self) -> bool {\n    (self.tx_tree_height == other.tx_tree_height)\n      & (self.txs_effects_hash == other.txs_effects_hash)\n      & (self.in_hash == other.in_hash)\n      & (self.out_hash == other.out_hash)\n  }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let empty = ContentCommitment::empty();\n    let serialized = empty.serialize();\n    let deserialized = ContentCommitment::deserialize(serialized);\n\n    assert(empty.eq(deserialized));\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/content_commitment.nr" }, "211": { "source": "use crate::{\n    abis::append_only_tree_snapshot::{AppendOnlyTreeSnapshot, APPEND_ONLY_TREE_SNAPSHOT_LENGTH},\n    constants::{PARTIAL_STATE_REFERENCE_LENGTH, STATE_REFERENCE_LENGTH},\n    partial_state_reference::PartialStateReference, traits::{Deserialize, Empty, Hash, Serialize},\n    utils::arr_copy_slice\n};\n\nstruct StateReference {\n    l1_to_l2_message_tree: AppendOnlyTreeSnapshot,\n    partial: PartialStateReference,\n}\n\nimpl Eq for StateReference {\n    fn eq(self, other: StateReference) -> bool {\n        self.l1_to_l2_message_tree.eq(other.l1_to_l2_message_tree) &\n        self.partial.eq(other.partial)\n    }\n}\n\nimpl Serialize<STATE_REFERENCE_LENGTH> for StateReference {\n    fn serialize(self) -> [Field; STATE_REFERENCE_LENGTH] {\n        let mut fields: BoundedVec<Field, STATE_REFERENCE_LENGTH> = BoundedVec::new();\n\n        fields.extend_from_array(self.l1_to_l2_message_tree.serialize());\n        fields.extend_from_array(self.partial.serialize());\n\n        fields.storage\n    }\n}\n\nimpl Deserialize<STATE_REFERENCE_LENGTH> for StateReference {\n    fn deserialize(serialized: [Field; STATE_REFERENCE_LENGTH]) -> StateReference {\n        let mut offset = 0;\n\n        let l1_to_l2_message_tree_fields = arr_copy_slice(serialized, [0; APPEND_ONLY_TREE_SNAPSHOT_LENGTH], offset);\n        offset = offset + APPEND_ONLY_TREE_SNAPSHOT_LENGTH;\n\n        let partial_fields = arr_copy_slice(serialized, [0; PARTIAL_STATE_REFERENCE_LENGTH], offset);\n\n        StateReference {\n            l1_to_l2_message_tree: AppendOnlyTreeSnapshot::deserialize(l1_to_l2_message_tree_fields),\n            partial: PartialStateReference::deserialize(partial_fields),\n        }\n    }\n}\n\nimpl Empty for StateReference {\n    fn empty() -> Self {\n        Self {\n            l1_to_l2_message_tree: AppendOnlyTreeSnapshot::zero(),\n            partial: PartialStateReference::empty(),\n        }\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let state: StateReference = dep::std::unsafe::zeroed();\n    let _serialized = state.serialize();\n    let _deserialized = StateReference::deserialize(_serialized);\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/state_reference.nr" }, "212": { "source": "// general util packages/modules are usually bad practice\n// because there is no criteria for what we should not put in here.\n// Reducing the size of this package would be welcome.\n\nmod arrays;\nmod field;\nmod reader;\nmod uint256;\n\n// if predicate == true then return lhs, else return rhs\npub fn conditional_assign(predicate: bool, lhs: Field, rhs: Field) -> Field {\n    if predicate { lhs } else { rhs }\n}\n\npub fn arr_copy_slice<T, N, M>(src: [T; N], mut dst: [T; M], offset: u64) -> [T; M] {\n    for i in 0..dst.len() {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/utils.nr" }, "228": { "source": "use crate::{\n    address::{\n    aztec_address::AztecAddress, eth_address::EthAddress, partial_address::PartialAddress,\n    public_keys_hash::PublicKeysHash\n},\n    contract_class_id::ContractClassId,\n    constants::{GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA, CONTRACT_INSTANCE_LENGTH},\n    traits::{Deserialize, Hash, Serialize}\n};\n\nstruct ContractInstance {\n    salt : Field,\n    deployer: AztecAddress,\n    contract_class_id : ContractClassId,\n    initialization_hash : Field,\n    portal_contract_address : EthAddress,\n    public_keys_hash : PublicKeysHash,\n}\n\nimpl Eq for ContractInstance {\n    fn eq(self, other: Self) -> bool {\n        self.public_keys_hash.eq(other.public_keys_hash) &\n        self.initialization_hash.eq(other.initialization_hash) &\n        self.contract_class_id.eq(other.contract_class_id) &\n        self.salt.eq(other.salt) &\n        self.portal_contract_address.eq(other.portal_contract_address)\n    }\n}\n\nimpl Serialize<CONTRACT_INSTANCE_LENGTH> for ContractInstance {\n    fn serialize(self) -> [Field; CONTRACT_INSTANCE_LENGTH] {\n        [\n            self.salt,\n            self.deployer.to_field(),\n            self.contract_class_id.to_field(),\n            self.initialization_hash,\n            self.portal_contract_address.to_field(),\n            self.public_keys_hash.to_field()\n        ]\n    }\n}\n\nimpl Deserialize<CONTRACT_INSTANCE_LENGTH> for ContractInstance {\n    fn deserialize(serialized: [Field; CONTRACT_INSTANCE_LENGTH]) -> Self {\n        Self {\n            salt: serialized[0],\n            deployer: AztecAddress::from_field(serialized[1]),\n            contract_class_id: ContractClassId::from_field(serialized[2]),\n            initialization_hash: serialized[3],\n            portal_contract_address: EthAddress::from_field(serialized[4]),\n            public_keys_hash: PublicKeysHash::from_field(serialized[5]),\n        }\n    }\n}\n\nimpl Hash for ContractInstance {\n    fn hash(self) -> Field {\n        self.to_address().to_field()\n    }\n}\n\nimpl ContractInstance {\n    fn to_address(self) -> AztecAddress {\n        AztecAddress::compute(\n            self.public_keys_hash,\n            PartialAddress::compute(\n                self.contract_class_id,\n                self.salt,\n                self.initialization_hash,\n                self.portal_contract_address,\n                self.deployer\n            )\n        )\n    }\n}\n", "path": "/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/contract_instance.nr" }, "292": { "source": "use dep::aztec::prelude::{AztecAddress, NoteHeader, NoteInterface, PrivateContext, emit_encrypted_log};\nuse dep::aztec::{\n    note::utils::compute_note_hash_for_consumption, hash::pedersen_hash,\n    oracle::{nullifier_key::get_nullifier_secret_key, get_public_key::get_public_key}\n};\n\nglobal PUBLIC_KEY_NOTE_LEN: Field = 3;\n\n// Stores a public key composed of two fields\n// TODO: Do we need to include a nonce, in case we want to read/nullify/recreate with the same pubkey value?\n#[aztec(note)]\nstruct PublicKeyNote {\n    x: Field,\n    y: Field,\n    owner: AztecAddress, // We store the owner address only to get the secret key to compute the nullifier and to broadcast\n}\n\nimpl NoteInterface<PUBLIC_KEY_NOTE_LEN> for PublicKeyNote {\n    fn compute_nullifier(self, context: &mut PrivateContext) -> Field {\n        let unique_siloed_note_hash = compute_note_hash_for_consumption(self);\n        let secret = context.request_nullifier_secret_key(self.owner);\n        // TODO(#1205) Should use a non-zero generator index.\n        pedersen_hash([\n            unique_siloed_note_hash,\n            secret.low,\n            secret.high,\n        ],0)\n    }\n\n    fn compute_nullifier_without_context(self) -> Field {\n        let unique_siloed_note_hash = compute_note_hash_for_consumption(self);\n        let secret = get_nullifier_secret_key(self.owner);\n        // TODO(#1205) Should use a non-zero generator index.\n        pedersen_hash([\n            unique_siloed_note_hash,\n            secret.low,\n            secret.high,\n        ],0)\n    }\n\n    // Broadcasts the note as an encrypted log on L1.\n    fn broadcast(self, context: &mut PrivateContext, slot: Field) {\n        let encryption_pub_key = get_public_key(self.owner);\n        emit_encrypted_log(\n            context,\n            (*context).this_address(),\n            slot,\n            Self::get_note_type_id(),\n            encryption_pub_key,\n            self.serialize_content(),\n        );\n    }\n}\n\nimpl PublicKeyNote {\n    pub fn new(x: Field, y: Field, owner: AztecAddress) -> Self {\n        PublicKeyNote { x, y, owner, header: NoteHeader::empty() }\n    }\n}\n", "path": "/usr/src/noir-projects/noir-contracts/contracts/schnorr_account_contract/src/public_key_note.nr" }, "293": { "source": "mod public_key_note;\n\n// Account contract that uses Schnorr signatures for authentication.\n// The signing key is stored in an immutable private note and should be different from the encryption/nullifying key.\ncontract SchnorrAccount {\n    use dep::std;\n\n    use dep::aztec::prelude::{AztecAddress, FunctionSelector, NoteHeader, PrivateContext, PrivateImmutable};\n    use dep::aztec::state_vars::{Map, PublicMutable};\n    use dep::aztec::{context::Context, oracle::get_public_key::get_public_key};\n    use dep::authwit::{\n        entrypoint::{app::AppPayload, fee::FeePayload}, account::AccountActions,\n        auth_witness::get_auth_witness\n    };\n    use dep::aztec::hash::compute_siloed_nullifier;\n    use dep::aztec::oracle::get_nullifier_membership_witness::get_low_nullifier_membership_witness;\n\n    use crate::public_key_note::{PublicKeyNote, PUBLIC_KEY_NOTE_LEN};\n\n    struct Storage {\n        // docs:start:storage\n        signing_public_key: PrivateImmutable<PublicKeyNote>,\n        // docs:end:storage\n        approved_actions: Map<Field, PublicMutable<bool>>,\n    }\n\n    // Constructs the contract\n    #[aztec(private)]\n    #[aztec(initializer)]\n    fn constructor(signing_pub_key_x: pub Field, signing_pub_key_y: pub Field) {\n        let this = context.this_address();\n        // docs:start:initialize\n        let mut pub_key_note = PublicKeyNote::new(signing_pub_key_x, signing_pub_key_y, this);\n        storage.signing_public_key.initialize(&mut pub_key_note, true);\n        // docs:end:initialize\n    }\n\n    // Note: If you globally change the entrypoint signature don't forget to update default_entrypoint.ts file\n    #[aztec(private)]\n    fn entrypoint(app_payload: pub AppPayload, fee_payload: pub FeePayload) {\n        let actions = AccountActions::private(\n            &mut context,\n            storage.approved_actions.storage_slot,\n            is_valid_impl\n        );\n        actions.entrypoint(app_payload, fee_payload);\n    }\n\n    #[aztec(private)]\n    fn spend_private_authwit(inner_hash: Field) -> Field {\n        let actions = AccountActions::private(\n            &mut context,\n            storage.approved_actions.storage_slot,\n            is_valid_impl\n        );\n        actions.spend_private_authwit(inner_hash)\n    }\n\n    #[aztec(public)]\n    fn spend_public_authwit(inner_hash: Field) -> Field {\n        let actions = AccountActions::public(\n            &mut context,\n            storage.approved_actions.storage_slot,\n            is_valid_impl\n        );\n        actions.spend_public_authwit(inner_hash)\n    }\n\n    #[aztec(private)]\n    #[aztec(internal)]\n    fn cancel_authwit(outer_hash: Field) {\n        context.push_new_nullifier(outer_hash, 0);\n    }\n\n    #[aztec(public)]\n    #[aztec(internal)]\n    fn approve_public_authwit(outer_hash: Field) {\n        let actions = AccountActions::public(\n            &mut context,\n            storage.approved_actions.storage_slot,\n            is_valid_impl\n        );\n        actions.approve_public_authwit(outer_hash)\n    }\n\n    #[contract_library_method]\n    fn is_valid_impl(context: &mut PrivateContext, outer_hash: Field) -> bool {\n        // docs:start:entrypoint\n        // Load public key from storage\n        let storage = Storage::init(Context::private(context));\n        // docs:start:get_note\n        let public_key = storage.signing_public_key.get_note();\n        // docs:end:get_note\n        // Load auth witness\n        let witness: [Field; 64] = get_auth_witness(outer_hash);\n        let mut signature: [u8; 64] = [0; 64];\n        for i in 0..64 {\n            signature[i] = witness[i] as u8;\n        }\n\n        // Verify signature of the payload bytes\n        let verification = std::schnorr::verify_signature_slice(\n            public_key.x,\n            public_key.y,\n            signature,\n            outer_hash.to_be_bytes(32)\n        );\n        assert(verification == true);\n        // docs:end:entrypoint\n        true\n    }\n\n    /**\n    * @notice Helper function to check the existing and validity of authwitnesses\n    * @dev TODO: myself and block_number should be removed and passed from a context\n    * @param myself The address of the contract\n    * @param block_number The block number to check the nullifier against\n    * @param check_private Whether to check the validity of the authwitness in private state or not\n    * @param message_hash The message hash of the message to check the validity\n    * @return An array of two booleans, the first is the validity of the authwitness in the private state, \n    * the second is the validity of the authwitness in the public state\n    * Both values will be `false` if the nullifier is spent \n    */\n    unconstrained fn lookup_validity(\n        myself: AztecAddress,\n        block_number: u32,\n        check_private: bool,\n        message_hash: Field\n    ) -> pub [bool; 2] {\n        let valid_in_private = if check_private {\n            let public_key = storage.signing_public_key.view_note();\n            let witness: [Field; 64] = get_auth_witness(message_hash);\n            let mut signature: [u8; 64] = [0; 64];\n            for i in 0..64 {\n                signature[i] = witness[i] as u8;\n            }\n            std::schnorr::verify_signature_slice(\n                public_key.x,\n                public_key.y,\n                signature,\n                message_hash.to_be_bytes(32)\n            )\n        } else {\n            false\n        };\n\n        let valid_in_public = storage.approved_actions.at(message_hash).read();\n\n        // Compute the nullifier and check if it is spent\n        // This will BLINDLY TRUST the oracle, but the oracle is us, and \n        // it is not as part of execution of the contract, so we are good.\n        let siloed_nullifier = compute_siloed_nullifier(myself, message_hash);\n        let lower_wit = get_low_nullifier_membership_witness(block_number, siloed_nullifier);\n        let is_spent = lower_wit.leaf_preimage.nullifier == siloed_nullifier;\n\n        if is_spent {\n            [false, false]\n        } else {\n            [valid_in_private, valid_in_public]\n        }\n    }\n}\n", "path": "/usr/src/noir-projects/noir-contracts/contracts/schnorr_account_contract/src/main.nr" } } }
